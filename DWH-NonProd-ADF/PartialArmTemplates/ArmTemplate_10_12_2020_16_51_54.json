{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DWH-NonProd-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabAnswers_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Answers_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.Answers}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@Equals(int(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT), 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteOperationTableByAssetFundReportingDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxAnswers_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Answers}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Answers,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Answers",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteOperationTableByAssetFundReportingDate",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxAnswers_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Answers}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Answers,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Answers",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"Answers": {
						"type": "string",
						"defaultValue": "Answers_DWH_Export"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabCertificates_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Certification_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.Certifications}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@Equals(int(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT), 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteExistingRowsForCurrentPeriod",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxCertificates_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Certifications}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Certifications,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Certification",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "UpdateValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "LoadValidatedDataset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxCertificates_Step4_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Certifications}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceUpdate": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Certifications,'_',pipeline().parameters.CurrentQuarterDate,'_Update')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Certification",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteExistingRowsForCurrentPeriod",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxCertificates_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Certifications}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Certifications,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelationalDelete": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Certification",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "30/09/2020"
					},
					"Certifications": {
						"type": "string",
						"defaultValue": "Certifications"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabContracts_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Contract_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.Contracts}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@Equals(int(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT), 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteExistingRowsForCurrentPeriod",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxContract_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Contracts}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Contracts,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Contract",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "UpdateValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "LoadValidatedDataset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxContract_Step4_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Contracts}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceUpdate": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Contracts,'_',pipeline().parameters.CurrentQuarterDate,'_Update')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Contract",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteExistingRowsForCurrentPeriod",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxContract_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Contracts}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Contracts,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelationalDelete": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Contract",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "30/09/2020"
					},
					"Contracts": {
						"type": "string",
						"defaultValue": "Contracts"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabHarvestReconcilliation_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Harvest_Reconciliation_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.HarvestReconciliation}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@Equals(int(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT), 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteOperationTableByAssetFundReportingDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxHarvestReconcilliation_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.HarvestReconciliation}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.HarvestReconciliation,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Harvest_Reconciliation",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteOperationTableByAssetFundReportingDate",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxHarvestReconcilliation_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.HarvestReconciliation}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.HarvestReconciliation,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Harvest_Reconciliation",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"HarvestReconciliation": {
						"type": "string",
						"defaultValue": "Harvest Reconcilliation"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabMajorSevereIncidents_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Major Severe Incidents tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Incident_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.MajorSevereIncidents}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@Equals(int(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT), 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteExistingRowsForCurrentPeriod",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxMajorSevereIncidents_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.MajorSevereIncidents}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.MajorSevereIncidents,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Incident",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "UpdateValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "LoadValidatedDataset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxMajorSevereIncidents_Step4_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.MajorSevereIncidents}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceUpdate": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.MajorSevereIncidents,'_',pipeline().parameters.CurrentQuarterDate,'_Update')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Incident",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteExistingRowsForCurrentPeriod",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxMajorSevereIncidents_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.MajorSevereIncidents}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.MajorSevereIncidents,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelationalDelete": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Incident",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "30/09/2020"
					},
					"MajorSevereIncidents": {
						"type": "string",
						"defaultValue": "Major Severe Incidents"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabOperations_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Operation_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.Operations}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@Equals(int(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT), 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteOperationTableByAssetFundReportingDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxOperations_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Operations}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Operations,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Operation",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteOperationTableByAssetFundReportingDate",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxOperations_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Operations}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Operations,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Operation",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"Operations": {
						"type": "string",
						"defaultValue": "Operations"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabRelatedPartyTrans_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Related Party Transactions",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Related_Party_Transaction_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.RelatedPartyTrans}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@Equals(int(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT), 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteOperationTableByAssetFundReportingDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxRelatedPartyTrans_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.RelatedPartyTrans}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.RelatedPartyTrans,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteOperationTableByAssetFundReportingDate",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxRelatedPartyTrans_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.RelatedPartyTrans}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.RelatedPartyTrans,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"RelatedPartyTrans": {
						"type": "string",
						"defaultValue": "Related Party Transactions"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabRiskOpportunity_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Risk Opportunity tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Risk_Opportunity_Register_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = 'pipeline().parameters.RiskOpportunity'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@Equals(int(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT), 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteRiskOpsCurrentPeriod",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxRiskOps_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.RiskOpportunity}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.RiskOpportunity,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Risk_Opportunity_Register",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "UpdateValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "LoadValidatedDataset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxRiskOps_Step4_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.RiskOpportunity}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceUpdate": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.RiskOpportunity,'_',pipeline().parameters.CurrentQuarterDate,'_Update')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Risk_Opportunity_Register",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteRiskOpsCurrentPeriod",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxRiskOps_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.RiskOpportunity}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.RiskOpportunity,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelationalDelete": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Risk_Opportunity_Register",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "30/09/2020"
					},
					"RiskOpportunity": {
						"type": "string",
						"defaultValue": "Risk Opportunity Register"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabSalesOther_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Other Sales Tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Sales_Other_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = 'pipeline().parameters.SalesOther'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@Equals(int(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT), 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "DeleteSalesOtherCurrentPeriod",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxOtherSales_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.SalesOther}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.SalesOther,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Sales_Other",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "LoadSalesOther",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteSalesOtherCurrentPeriod",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxOtherSales_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.SalesOther}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.SalesOther,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Sales_Other",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "30/09/2020"
					},
					"SalesOther": {
						"type": "string",
						"defaultValue": "Other Sales"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabStrategicProjects_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Strategic_Project_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.StrategicProjects}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@Equals(int(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT), 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteExistingRowsForCurrentPeriod",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxStrategicProjects_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.StrategicProjects}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.StrategicProjects,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Strategic_Project",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "UpdateValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "LoadValidatedDataset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxStrategicProjects_Step4_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.StrategicProjects}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceUpdate": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.StrategicProjects,'_',pipeline().parameters.CurrentQuarterDate,'_Update')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Strategic_Project",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteExistingRowsForCurrentPeriod",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxStrategicProjects_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.StrategicProjects}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.StrategicProjects,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelationalDelete": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Strategic_Project",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "30/09/2020"
					},
					"StrategicProjects": {
						"type": "string",
						"defaultValue": "Strategic Projects"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabTimberSales_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Timber_Sales_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.TimberSales}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@Equals(int(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT), 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteOperationTableByAssetFundReportingDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxTimberSales_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.TimberSales}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.TimberSales,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Timber_Sales",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteOperationTableByAssetFundReportingDate",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxTimberSales_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.TimberSales}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.TimberSales,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Timber_Sales",
														"type": "Expression"
													}
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"TimberSales": {
						"type": "string",
						"defaultValue": "Timber Sales"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}