{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DWH-NonProd-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookMaster_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Master job to orchestrate multiple pipelines run. Each pipeline correspond to one tab in the Excel workbook.",
				"activities": [
					{
						"name": "ProcessOpsWorkbookSubMaster_pl",
						"description": "Sub Master to run children pipelines in parallel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteWorkbookWorksheetAssetList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ProcessOpsWorkbookSubMaster_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"WorkbookName": {
									"value": "@pipeline().parameters.WorkbookName",
									"type": "Expression"
								},
								"CurrentQuarterDate": {
									"value": "@pipeline().parameters.CurrentQuarterDate",
									"type": "Expression"
								},
								"OtherSales": {
									"value": "@variables('OtherSales')",
									"type": "Expression"
								},
								"MajorSevereIncidents": {
									"value": "@variables('MajorSevereIncidents')",
									"type": "Expression"
								},
								"RiskOpportunityRegister": {
									"value": "@variables('RiskOpportunityRegister')",
									"type": "Expression"
								},
								"Certifications": {
									"value": "@variables('Certifications')",
									"type": "Expression"
								},
								"RelatedPartyTransactions": {
									"value": "@variables('RelatedPartyTransactions')",
									"type": "Expression"
								},
								"TimberSales": {
									"value": "@variables('TimberSales')",
									"type": "Expression"
								},
								"HarvestReconcilliation": {
									"value": "@variables('HarvestReconcilliation')",
									"type": "Expression"
								},
								"Operations": {
									"value": "@variables('Operations')",
									"type": "Expression"
								},
								"Contracts": {
									"value": "@variables('Contracts')",
									"type": "Expression"
								},
								"StrategicProjects": {
									"value": "@variables('StrategicProjects')",
									"type": "Expression"
								},
								"CurrentRunDateTime": {
									"value": "@variables('CurrentRunDateTime')",
									"type": "Expression"
								},
								"MasterUtcTag": {
									"value": "@variables('MasterUtcTag')",
									"type": "Expression"
								},
								"MasterPipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"OtherSalesRange": {
									"value": "@variables('OtherSalesRange')",
									"type": "Expression"
								},
								"MajorSevereIncidentsRange": {
									"value": "@variables('MajorSevereIncidentsRange')",
									"type": "Expression"
								},
								"RiskOpportunityRegisterRange": {
									"value": "@variables('RiskOpportunityRegisterRange')",
									"type": "Expression"
								},
								"CertificationsRange": {
									"value": "@variables('CertificationsRange')",
									"type": "Expression"
								},
								"RelatedPartyTransactionsRange": {
									"value": "@variables('RelatedPartyTransactionsRange')",
									"type": "Expression"
								},
								"TimberSalesRange": {
									"value": "@variables('TimberSalesRange')",
									"type": "Expression"
								},
								"HarvestReconcilliationRange": {
									"value": "@variables('HarvestReconcilliationRange')",
									"type": "Expression"
								},
								"OperationsRange": {
									"value": "@variables('OperationsRange')",
									"type": "Expression"
								},
								"ContractsRange": {
									"value": "@variables('ContractsRange')",
									"type": "Expression"
								},
								"StrategicProjectsRange": {
									"value": "@variables('StrategicProjectsRange')",
									"type": "Expression"
								},
								"Answers": {
									"value": "@variables('Answers')",
									"type": "Expression"
								},
								"AnswersRange": {
									"value": "@variables('AnswersRange')",
									"type": "Expression"
								},
								"Asset_ID": {
									"value": "@pipeline().parameters.Asset_ID",
									"type": "Expression"
								},
								"Fund_ID": {
									"value": "@pipeline().parameters.Fund_ID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GetCurrentDate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "MaterUtcTag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "CurrentRunDateTime",
							"value": {
								"value": "@formatDateTime(convertFromUtc(utcnow(),'AUS Eastern Standard Time'),'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "MaterUtcTag",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "MasterUtcTag",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "CopyToSourceArchive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ProcessOpsWorkbookSubMaster_pl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BinaryFromSourceLandingRawOps_ds",
								"type": "DatasetReference",
								"parameters": {
									"file": {
										"value": "@pipeline().parameters.WorkbookName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "BinaryToSourceArchive_ds",
								"type": "DatasetReference",
								"parameters": {
									"path": {
										"value": "@concat(substring(pipeline().parameters.CurrentQuarterDate,0,4), '/', concat(if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'01'),'JAN',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'02'),'FEB',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'03'),'MAR',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'04'),'APR',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'05'),'MAY',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'06'),'JUN',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'07'),'JUL',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'08'),'AUG',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'09'),'SEP',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'10'),'OCT',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'11'),'NOV',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'12'),'DEC','')), '/', substring(pipeline().parameters.CurrentQuarterDate,8,2))",
										"type": "Expression"
									},
									"file": {
										"value": "@pipeline().parameters.WorkbookName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "CopyToDataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyToSourceArchive",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BinaryFromSourceLandingRawOps_ds",
								"type": "DatasetReference",
								"parameters": {
									"file": {
										"value": "@pipeline().parameters.WorkbookName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "BinaryToDatalake_ds",
								"type": "DatasetReference",
								"parameters": {
									"path": {
										"value": "@concat('manual/',substring(pipeline().parameters.CurrentQuarterDate,0,4), '/', concat(if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'01'),'JAN',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'02'),'FEB',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'03'),'MAR',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'04'),'APR',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'05'),'MAY',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'06'),'JUN',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'07'),'JUL',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'08'),'AUG',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'09'),'SEP',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'10'),'OCT',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'11'),'NOV',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'12'),'DEC','')), '/', substring(pipeline().parameters.CurrentQuarterDate,8,2))",
										"type": "Expression"
									},
									"file": {
										"value": "@pipeline().parameters.WorkbookName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DeleteFileFromSourceLandingRaw",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyToDataLake",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinaryFromSourceLandingRawOps_ds",
								"type": "DatasetReference",
								"parameters": {
									"file": "none_for_now"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": false
							}
						}
					},
					{
						"name": "DeleteAllRelatedAdf2PersistentArea",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "DeleteFileFromSourceLandingRaw",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinaryFromAdf2PersistentArea_ds",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"prefix": "none"
							}
						}
					},
					{
						"name": "RegisterStatusInMasterRunLog",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UpdateSourceRegisterTable",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[log].[UpdateMasterRunLog]",
							"storedProcedureParameters": {
								"MasterUtcTag": {
									"value": {
										"value": "@variables('MasterUtcTag')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunMessage": {
									"value": {
										"value": "@concat(pipeline().Pipeline,'-',pipeline().parameters.WorkbookName)",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunStatus": {
									"value": {
										"value": "SUCCESS",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLdbConnection",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyToSourceArchive_Failed",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ProcessOpsWorkbookSubMaster_pl",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BinaryFromSourceLandingRawOps_ds",
								"type": "DatasetReference",
								"parameters": {
									"file": {
										"value": "@pipeline().parameters.WorkbookName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "BinaryToSourceArchive_ds",
								"type": "DatasetReference",
								"parameters": {
									"path": {
										"value": "@concat(substring(pipeline().parameters.CurrentQuarterDate,0,4), '/', concat(if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'01'),'JAN',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'02'),'FEB',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'03'),'MAR',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'04'),'APR',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'05'),'MAY',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'06'),'JUN',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'07'),'JUL',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'08'),'AUG',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'09'),'SEP',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'10'),'OCT',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'11'),'NOV',''),if(equals(substring(pipeline().parameters.CurrentQuarterDate,5,2),'12'),'DEC','')), '/', substring(pipeline().parameters.CurrentQuarterDate,8,2))",
										"type": "Expression"
									},
									"file": {
										"value": "@pipeline().parameters.WorkbookName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DeleteFileFromSourceLandingRaw_Failed",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyToSourceArchive_Failed",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinaryFromSourceLandingRawOps_ds",
								"type": "DatasetReference",
								"parameters": {
									"file": "none_for_now"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": false
							}
						}
					},
					{
						"name": "DeleteAllRelatedAdf2PersistentArea_Failed",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "DeleteFileFromSourceLandingRaw_Failed",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinaryFromAdf2PersistentArea_ds",
								"type": "DatasetReference"
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"prefix": "none"
							}
						}
					},
					{
						"name": "RegisterStatusInMasterRunLog_Failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UpdateSourceRegisterTableFailed",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[log].[UpdateMasterRunLog]",
							"storedProcedureParameters": {
								"MasterUtcTag": {
									"value": {
										"value": "@variables('MasterUtcTag')",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunMessage": {
									"value": {
										"value": "@concat(pipeline().Pipeline,'-',pipeline().parameters.WorkbookName)",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunStatus": {
									"value": {
										"value": "FAILED",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLdbConnection",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DeleteWorkbookWorksheetAssetList",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ProcessOpsWorkbookSendMailRunStart_pl",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[audit].[DeleteAuditWorkBookWorksheetListTable]",
							"storedProcedureParameters": {
								"WorkBookName": {
									"value": {
										"value": "@pipeline().parameters.WorkbookName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLdbConnection",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SendEmailsRunCompleteNotOK",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RegisterStatusInMasterRunLog_Failed",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ProcessOpsWorkbookSendMailRunComplete_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"WorkbookName": {
									"value": "@pipeline().parameters.WorkbookName",
									"type": "Expression"
								},
								"Asset_ID": {
									"value": "@pipeline().parameters.Asset_ID",
									"type": "Expression"
								},
								"Fund_ID": {
									"value": "@pipeline().parameters.Fund_ID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "UpdateSourceRegisterTable",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteAllRelatedAdf2PersistentArea",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ProcessOpsWorkbookUpdateSourceRegister_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"WorkbookName": {
									"value": "@pipeline().parameters.WorkbookName",
									"type": "Expression"
								},
								"MasterPipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"CurrentQuarterDate": {
									"value": "@pipeline().parameters.CurrentQuarterDate",
									"type": "Expression"
								},
								"MasterUtcTag": {
									"value": "@variables('MasterUtcTag')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "UpdateSourceRegisterTableFailed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DeleteAllRelatedAdf2PersistentArea_Failed",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[log].[SourceRegisterTableInsert]",
							"storedProcedureParameters": {
								"ArchiveContainer": {
									"value": {
										"value": "sourcearchive",
										"type": "Expression"
									},
									"type": "String"
								},
								"Comment": {
									"value": {
										"value": "Pipeline failed",
										"type": "Expression"
									},
									"type": "String"
								},
								"DatalakeContainer": {
									"value": {
										"value": "nonfinancial",
										"type": "Expression"
									},
									"type": "String"
								},
								"EtlUtcTag": {
									"value": {
										"value": "@variables('MasterUtcTag')",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().parameters.WorkbookName",
										"type": "Expression"
									},
									"type": "String"
								},
								"InputDate": {
									"value": {
										"value": "@pipeline().parameters.CurrentQuarterDate",
										"type": "Expression"
									},
									"type": "String"
								},
								"InputMethod": {
									"value": {
										"value": "manual",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunStatus": {
									"value": {
										"value": "ABORT",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceContainer": {
									"value": {
										"value": "sourcelandingraw-ops",
										"type": "Expression"
									},
									"type": "String"
								},
								"TargetContainer": {
									"value": {
										"value": "adf2persistentarea",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLdbConnection",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SendEmailsRunCompleteOK",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RegisterStatusInMasterRunLog",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ProcessOpsWorkbookSendMailRunComplete_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"WorkbookName": {
									"value": "@pipeline().parameters.WorkbookName",
									"type": "Expression"
								},
								"Asset_ID": {
									"value": "@pipeline().parameters.Asset_ID",
									"type": "Expression"
								},
								"Fund_ID": {
									"value": "@pipeline().parameters.Fund_ID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ProcessOpsWorkbookSendMailRunStart_pl",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "GetCurrentDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ProcessOpsWorkbookSendMailRunStart_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataFactoryName": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"WorkbookName": {
									"value": "@pipeline().parameters.WorkbookName",
									"type": "Expression"
								},
								"Asset_ID": {
									"value": "@pipeline().parameters.Asset_ID",
									"type": "Expression"
								},
								"Fund_ID": {
									"value": "@pipeline().parameters.Fund_ID",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"Asset_ID": {
						"type": "string",
						"defaultValue": "WFP"
					},
					"Fund_ID": {
						"type": "string",
						"defaultValue": "ANZFOF2"
					}
				},
				"variables": {
					"OtherSales": {
						"type": "String",
						"defaultValue": "Other Sales"
					},
					"MajorSevereIncidents": {
						"type": "String",
						"defaultValue": "Major Severe Incidents"
					},
					"RiskOpportunityRegister": {
						"type": "String",
						"defaultValue": "Risk Opportunity Register"
					},
					"Certifications": {
						"type": "String",
						"defaultValue": "Certifications"
					},
					"RelatedPartyTransactions": {
						"type": "String",
						"defaultValue": "Related Party Transactions"
					},
					"TimberSales": {
						"type": "String",
						"defaultValue": "Timber Sales"
					},
					"HarvestReconcilliation": {
						"type": "String",
						"defaultValue": "Harvest Reconcilliation"
					},
					"Operations": {
						"type": "String",
						"defaultValue": "Operations"
					},
					"Contracts": {
						"type": "String",
						"defaultValue": "Contracts"
					},
					"StrategicProjects": {
						"type": "String",
						"defaultValue": "Strategic Projects"
					},
					"CurrentRunDateTime": {
						"type": "String",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "String",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					},
					"OtherSalesRange": {
						"type": "String",
						"defaultValue": "A8:P999"
					},
					"MajorSevereIncidentsRange": {
						"type": "String",
						"defaultValue": "A8:L99999"
					},
					"RiskOpportunityRegisterRange": {
						"type": "String",
						"defaultValue": "A8:T9999"
					},
					"CertificationsRange": {
						"type": "String",
						"defaultValue": "A8:N99999"
					},
					"RelatedPartyTransactionsRange": {
						"type": "String",
						"defaultValue": "A8:K99999"
					},
					"TimberSalesRange": {
						"type": "String",
						"defaultValue": "A8:W9999"
					},
					"HarvestReconcilliationRange": {
						"type": "String",
						"defaultValue": "A8:AA9999"
					},
					"OperationsRange": {
						"type": "String",
						"defaultValue": "A8:Q9999"
					},
					"ContractsRange": {
						"type": "String",
						"defaultValue": "A8:N9999"
					},
					"StrategicProjectsRange": {
						"type": "String",
						"defaultValue": "A8:M9999"
					},
					"Answers": {
						"type": "String",
						"defaultValue": "Answers_DWH_Export"
					},
					"AnswersRange": {
						"type": "String",
						"defaultValue": "A1:H99999"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ProcessOpsWorkbookSendMailRunComplete_pl')]",
				"[concat(variables('factoryId'), '/pipelines/ProcessOpsWorkbookUpdateSourceRegister_pl')]",
				"[concat(variables('factoryId'), '/pipelines/ProcessOpsWorkbookSendMailRunStart_pl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookSendMailRunComplete_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetEmailDetails",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT Ops_Representative_Email, Ops_Representative_First_Name, Ops_Representative_Last_Name,\n CASE WHEN LEN(Error_Messages) = 0 THEN 'Workbook Processed Successfully' ELSE 'Workbook Processed with Errors' END AS Message_Header,\n CONCAT('Hi ',Ops_Representative_First_Name,'<br><br>') AS Message_1,\n CASE WHEN LEN(Error_Messages) = 0 THEN CONCAT('The file \\\"',Work_Book,'\\\" has been processed successfully') \n ELSE CONCAT('The file \\\"',Work_Book,'\\\" has been processed but there were some errors in the worksheet[s] below:') END AS Message_2,\n Error_Messages AS Message_3,\n CASE WHEN LEN(Error_Messages) = 0 THEN 'Please contact your New Forests Operations representative if you have any queries.'\n ELSE 'Please review and re-submit the workbook.  Please contact your New Forests Operations representative if you have any queries.' END AS Message_4,\n 'Regards,<br><br>New Forests Operations Team' AS Message_5\nFROM (\nSELECT Message_Header, Ops_Representative_Email, Ops_Representative_First_Name, Ops_Representative_Last_Name, Work_Book,\nCONCAT(\n CASE WHEN [Certifications] LIKE '%: Error Count : 0 >>>%' THEN '' ELSE CONCAT([Certifications],'<br>') END,\n CASE WHEN [Timber Sales] LIKE '%: Error Count : 0 >>>%' THEN '' ELSE CONCAT([Timber Sales],'<br>') END,\n CASE WHEN [Contracts] LIKE '%: Error Count : 0 >>>%' THEN '' ELSE CONCAT([Contracts],'<br>') END,\n CASE WHEN [Harvest Reconcilliation] LIKE '%: Error Count : 0 >>>%' THEN '' ELSE CONCAT([Harvest Reconcilliation],'<br>') END,\n CASE WHEN [Major Severe Incidents] LIKE '%: Error Count : 0 >>>%' THEN '' ELSE CONCAT([Major Severe Incidents],'<br>') END,\n CASE WHEN [Operations] LIKE '%: Error Count : 0 >>>%' THEN '' ELSE CONCAT([Operations],'<br>') END,\n CASE WHEN [Other Sales] LIKE '%: Error Count : 0 >>>%' THEN '' ELSE CONCAT([Other Sales],'<br>') END,\n CASE WHEN [Related Party Transactions] LIKE '%: Error Count : 0 >>>%' THEN '' ELSE CONCAT([Related Party Transactions],'<br>') END,\n CASE WHEN [Risk Opportunity Register] LIKE '%: Error Count : 0 >>>%' THEN '' ELSE CONCAT([Risk Opportunity Register],'<br>') END,\n CASE WHEN [Strategic Projects] LIKE '%: Error Count : 0 >>>%' THEN '' ELSE CONCAT([Strategic Projects],'<br>') END\n ) AS Error_Messages\nFROM (\nSELECT DISTINCT\n CONCAT('Operations - Load Report for Workbook ',x.Work_Book) AS Message_Header,\n ass.Ops_Representative_Email, ass.Ops_Representative_First_Name, ass.Ops_Representative_Last_Name, x.Work_Sheet, x.Work_Book,\n CONCAT(x.Work_Sheet,' : Error Count : ',CASE WHEN x.Error_Count > 0 THEN CONCAT(CAST(x.Error_Count AS VARCHAR),' >>> Missing mandatory fields') WHEN x.Error_Count = 0 AND x.Asset_Id IS NULL THEN 'Unknown >>> Failed Load' ELSE CONCAT(CAST(x.Error_Count AS VARCHAR),' >>> Successfully Loaded') END) AS Error_Count\nFROM (\nSELECT err.Work_Book, err.Work_Sheet, err.Error_Count, wb.Asset_Id, wb.Fund_Id\nFROM audit.OPS_Workbook_Worksheet_Asset_List wb\nRIGHT JOIN (\nSELECT 'Certifications' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS Error_Count\nFROM audit.OPS_Certification_Error WHERE Source_File = '@{pipeline().parameters.WorkbookName}'\nUNION\nSELECT 'Timber Sales' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_book, COUNT(*) AS Error_Count\nFROM audit.OPS_Timber_Sales_Error WHERE Source_File = '@{pipeline().parameters.WorkbookName}'\nUNION\nSELECT 'Answers_DWH_Export' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_book, COUNT(*) AS Error_Count\nFROM audit.OPS_Answers_Error WHERE Source_File = '@{pipeline().parameters.WorkbookName}'\nUNION\nSELECT 'Contracts' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_book, COUNT(*) AS Error_Count\nFROM audit.OPS_Contract_Error WHERE Source_File = '@{pipeline().parameters.WorkbookName}'\nUNION\nSELECT 'Harvest Reconcilliation' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_book, COUNT(*) AS Error_Count\nFROM audit.OPS_Harvest_Reconciliation_Error WHERE Source_File = '@{pipeline().parameters.WorkbookName}'\nUNION\nSELECT 'Major Severe Incidents' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_book, COUNT(*) AS Error_Count\nFROM audit.OPS_Incident_Error WHERE Source_File = '@{pipeline().parameters.WorkbookName}'\nUNION\nSELECT 'Operations' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_book, COUNT(*) AS Error_Count\nFROM audit.OPS_Operation_Error WHERE Source_File = '@{pipeline().parameters.WorkbookName}'\nUNION\nSELECT 'Other Sales' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_book, COUNT(*) AS Error_Count\nFROM audit.OPS_Sales_Other_Error WHERE Source_File = '@{pipeline().parameters.WorkbookName}'\nUNION\nSELECT 'Related Party Transactions' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_book, COUNT(*) AS Error_Count\nFROM audit.OPS_Related_Party_Transaction_Error WHERE Source_File = '@{pipeline().parameters.WorkbookName}'\nUNION\nSELECT 'Risk Opportunity Register' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_book, COUNT(*) AS Error_Count\nFROM audit.OPS_Risk_Opportunity_Register_Error WHERE Source_File = '@{pipeline().parameters.WorkbookName}'\nUNION\nSELECT 'Strategic Projects' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_book, COUNT(*) AS Error_Count\nFROM audit.OPS_Strategic_Project_Error WHERE Source_File = '@{pipeline().parameters.WorkbookName}'\n) err\nON wb.Work_Book = err.Work_Book and wb.Work_Sheet = err.Work_Sheet\n)x\nJOIN relational.Asset ass\nON 1=1\nWHERE ass.Asset_ID = '@{pipeline().parameters.Asset_ID}' AND ass.Fund_ID = '@{pipeline().parameters.Fund_ID}' AND ass.record_deleted_flag = 0\n) t\nPIVOT(\n    MAX(Error_Count)\n    FOR Work_Sheet IN (\n        [Certifications], \n        [Timber Sales], \n        [Answers_DWH_Export], \n        [Contracts], \n        [Harvest Reconcilliation], \n        [Major Severe Incidents],\n        [Operations], \n        [Other Sales], \n        [Related Party Transactions], \n        [Risk Opportunity Register], \n        [Strategic Projects])\n) AS pivot_table\n)z;",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLauditopsworkbookworksheetlist_ds",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachWorkbookWorksheetEmail",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetEmailDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetEmailDetails').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SendEmail",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-19.australiaeast.logic.azure.com:443/workflows/7139728b716a4500b96a2fa094f691fa/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I30JtkHJ6p4mNeMF6USxTdCCjTwTvY1dmmNC2Mvte7o",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n\"messageHeader\":\"@{item().Message_Header}\",\n\"message1\":\"@{item().Message_1}\",\n\"message2\":\"@{item().Message_2}\",\n\"message3\":\"@{item().Message_3}\",\n\"message4\":\"@{item().Message_4}\",\n\"message5\":\"@{item().Message_5}\",\n\"message6\":\"\",\n\"emailAddress\":\"@{item().Ops_Representative_Email}\",\n\"lastName\":\"\",\n\"firstName\":\"\"\n}",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"DataFactoryName": {
						"type": "string",
						"defaultValue": "myFactory"
					},
					"PipelineName": {
						"type": "string",
						"defaultValue": "myPipeline"
					},
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 test.xlsx"
					},
					"Asset_ID": {
						"type": "string",
						"defaultValue": "WFP"
					},
					"Fund_ID": {
						"type": "string",
						"defaultValue": "ANZFOF2"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookSendMailRunStart_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetEmailDetails",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT 'Operations workbook submitted' AS Message_Header,\nCONCAT('Hi ',Ops_Representative_First_Name) AS Message_1,\nCONCAT('Thank you for submitting ','\\\"','@{pipeline().parameters.WorkbookName}','\\\". This is now being processed and we will be in contact shortly to confirm processing is complete.<br>') AS Message_2,\nCONCAT('Regards,','<br><br>','New Forests Operations Team') AS Message_3,\nOps_Representative_Email, Ops_Representative_Last_Name, Ops_Representative_First_Name\nFROM (\nSELECT DISTINCT ra.Ops_Representative_First_Name, ra.Ops_Representative_Last_Name, ra.Ops_Representative_Email\nFROM relational.Asset ra \nWHERE record_deleted_flag = 0 \nAND ra.Asset_ID = '@{pipeline().parameters.Asset_ID}' \nAND ra.Fund_ID = '@{pipeline().parameters.Fund_ID}'\n)z;",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLauditopsworkbookworksheetlist_ds",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachWorkbookWorksheetEmail",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetEmailDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetEmailDetails').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SendEmail",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-19.australiaeast.logic.azure.com:443/workflows/7139728b716a4500b96a2fa094f691fa/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I30JtkHJ6p4mNeMF6USxTdCCjTwTvY1dmmNC2Mvte7o",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "{\n\"messageHeader\":\"@{item().Message_Header}\",\n\"message1\":\"@{item().Message_1}\",\n\"message2\":\"\",\n\"message3\":\"@{item().Message_2}\",\n\"message4\":\"@{item().Message_3}\",\n\"message5\":\"\",\n\"message6\":\"\",\n\"emailAddress\":\"@{item().Ops_Representative_Email}\",\n\"lastName\":\"\",\n\"firstName\":\"\"\n}",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"DataFactoryName": {
						"type": "string",
						"defaultValue": "myFactory"
					},
					"PipelineName": {
						"type": "string",
						"defaultValue": "myPipeline"
					},
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 test.xlsx"
					},
					"Asset_ID": {
						"type": "string",
						"defaultValue": "WFP"
					},
					"Fund_ID": {
						"type": "string",
						"defaultValue": "ANZFOF2"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookUpdateSourceRegister_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CollateOpsError",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT ERROR_COUNT,\n  CASE WHEN ERROR_COUNT = 0 THEN 'SUCCESS'\n  ELSE 'FAIL'\n  END RUN_STATUS,\n  CASE WHEN ERROR_COUNT = 0 THEN NULL\n  ELSE 'Not all Excel sheets have been loaded with no error'\n  END COMMENT_MSG\n  FROM (\n       SELECT SUM(ERROR_COUNT) ERROR_COUNT FROM (\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Certifications' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Certification_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Certifications' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n             UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Timber Sales' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Timber_Sales_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Timber Sales' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n\t\t\t UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Contracts' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Contract_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Contracts' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n             UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Harvest Reconcilliation' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Harvest_Reconciliation_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Harvest Reconcilliation' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n\t\t\t UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Major Severe Incidents' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Incident_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Major Severe Incidents' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n             UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Operations' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Operation_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Operations' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n\t\t\t UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Related Party Transactions' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Related_Party_Transaction_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Related Party Transactions' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n             UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Risk Opportunity Register' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Risk_Opportunity_Register_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Risk Opportunity Register' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n\t\t\t UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Other Sales' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Sales_Other_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Other Sales' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n             UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Strategic Projects' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Strategic_Project_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Strategic Projects' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n             UNION ALL\n\t\t\t SELECT CASE WHEN ef.ERROR_COUNT > 0 AND wb.Work_Sheet IS NOT NULL THEN 1 WHEN ef.ERROR_COUNT = 0 AND wb.Work_Sheet IS NOT NULL THEN 0 ELSE 1 END AS ERROR_COUNT\n\t\t\t FROM audit.OPS_Workbook_Worksheet_Asset_List wb\n\t\t\t RIGHT JOIN \n             (SELECT 'Answers_DWH_Export' AS Work_Sheet, '@{pipeline().parameters.WorkbookName}' AS Work_Book, COUNT(*) AS ERROR_COUNT \n\t\t\t  FROM audit.OPS_Answers_Error\n\t\t\t  WHERE SOURCE_SUB_FILE = 'Answers_DWH_Export' AND SOURCE_FILE = '@{pipeline().parameters.WorkbookName}') ef\n\t\t\t ON wb.Work_Sheet = ef.Work_Sheet AND wb.Work_Sheet = ef.Work_Sheet\n)x\n)z",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "InsertSourceRegisterTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CollateOpsError",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[log].[SourceRegisterTableInsert]",
							"storedProcedureParameters": {
								"ArchiveContainer": {
									"value": {
										"value": "sourcearchive",
										"type": "Expression"
									},
									"type": "String"
								},
								"Comment": {
									"value": {
										"value": "@activity('CollateOpsError').output.firstRow.COMMENT_MSG",
										"type": "Expression"
									},
									"type": "String"
								},
								"DatalakeContainer": {
									"value": {
										"value": "nonfinancial",
										"type": "Expression"
									},
									"type": "String"
								},
								"EtlUtcTag": {
									"value": {
										"value": "@pipeline().parameters.MasterUtcTag",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileName": {
									"value": {
										"value": "@pipeline().parameters.WorkbookName",
										"type": "Expression"
									},
									"type": "String"
								},
								"InputDate": {
									"value": {
										"value": "@pipeline().parameters.CurrentQuarterDate",
										"type": "Expression"
									},
									"type": "String"
								},
								"InputMethod": {
									"value": {
										"value": "manual",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessName": {
									"value": {
										"value": "@pipeline().parameters.MasterPipelineName",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunStatus": {
									"value": {
										"value": "@activity('CollateOpsError').output.firstRow.RUN_STATUS",
										"type": "Expression"
									},
									"type": "String"
								},
								"SourceContainer": {
									"value": {
										"value": "sourcelandingraw-ops",
										"type": "Expression"
									},
									"type": "String"
								},
								"TargetContainer": {
									"value": {
										"value": "adf2persistentarea",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQLdbConnection",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"MasterPipelineName": {
						"type": "string"
					},
					"CurrentQuarterDate": {
						"type": "string"
					},
					"MasterUtcTag": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}