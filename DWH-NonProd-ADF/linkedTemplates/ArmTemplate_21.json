{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DWH-NonProd-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/testLoadXlsxContract_Step1_df_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ParquetPersistentOpsWithTabParam_ds",
								"type": "DatasetReference"
							},
							"name": "SourceDataTab"
						},
						{
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference"
							},
							"name": "RelationalContractLkp"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ParquetPersistentOps_ds",
								"type": "DatasetReference"
							},
							"name": "TargetPersistentParquetInsert"
						},
						{
							"dataset": {
								"referenceName": "SQLtableGenericWithParam_ds",
								"type": "DatasetReference"
							},
							"name": "ErrorTable"
						},
						{
							"dataset": {
								"referenceName": "SQLauditopsworkbookworksheetlist_ds",
								"type": "DatasetReference"
							},
							"name": "OpsWorkbookWorksheetList"
						},
						{
							"dataset": {
								"referenceName": "ParquetPersistentOps_ds",
								"type": "DatasetReference"
							},
							"name": "TargetPersistenParquetUpdate"
						}
					],
					"transformations": [
						{
							"name": "ValidateMandatoryColumns",
							"description": "ReportingDateCertificationIDValidateMsg is a test and should be considered as part of the conditional split Insert/Update activity"
						},
						{
							"name": "SegregateValidInvalidRows"
						},
						{
							"name": "SelectedColumnsOutputInsert"
						},
						{
							"name": "ConcatenateInvalidColumnsMessage"
						},
						{
							"name": "SelectedOutputColumnsError"
						},
						{
							"name": "GenerateRowNumber"
						},
						{
							"name": "ExcludeFirstRow"
						},
						{
							"name": "AggregateSetUniqueWorksheetAsset"
						},
						{
							"name": "SelectWorksheetAsset"
						},
						{
							"name": "SelectUniqueWorksheetAsset"
						},
						{
							"name": "DateTypeTransform"
						},
						{
							"name": "SplitInsertAndUpdate",
							"description": "1. The condition assume that the records from the current reporting period are deleted first if any (asset id, fund id, current reporting period)\n2. Records where reporting period equal current reporting period (disregard certification id) are inserted/reinserted after delete in 1\n3. Remaining records are not from current reporting period and the certification ids must not be null. These are updated"
						},
						{
							"name": "SelectColumnsOutputUpdate"
						},
						{
							"name": "UpdateDatetimeValue"
						},
						{
							"name": "SelectContractLkp"
						},
						{
							"name": "LookupContract"
						},
						{
							"name": "FilterBlankAssetFund"
						}
					],
					"script": "parameters{\n\tMasterUtcTag as string,\n\tCurrentRunDateTime as string,\n\tWorkbookName as string,\n\tTabName as string,\n\tCurrentQuarterDate as string,\n\tMasterPipeline as string\n}\nsource(output(\n\t\tContract_ID as string,\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tReporting_Period as string,\n\t\tValidation_Flag as string,\n\t\tExecution_Date as string,\n\t\tTermination_Date as string,\n\t\tContracted_Party_Company_Name as string,\n\t\tEstimated_Maximum_Contract_Value_over_the_course_of_the_contract as string,\n\t\tContract_Currency as string,\n\t\tType_of_goods_or_services as string,\n\t\tExecuted_By_Entity_1 as string,\n\t\tExecuted_By_Entity_2 as string,\n\t\tExecuted_By_Entity_3 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 1)) ~> SourceDataTab\nsource(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tReporting_Period as date,\n\t\tExecution_Date as date,\n\t\tTermination_Date as date,\n\t\tCompany_Name as string,\n\t\tContract_Value as decimal(19,4),\n\t\tContract_Currency as string,\n\t\tContract_Type as string,\n\t\tExecuted_By_Entity1 as string,\n\t\tExecuted_By_Entity2 as string,\n\t\tExecuted_By_Entity3 as string,\n\t\tInsert_Datetime as timestamp,\n\t\tContract_ID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Asset_ID]\\n      ,[Fund_ID]\\n      ,[Reporting_Period]\\n      ,[Execution_Date]\\n      ,[Termination_Date]\\n      ,[Company_Name]\\n      ,[Contract_Value]\\n      ,[Contract_Currency]\\n      ,[Contract_Type]\\n      ,[Executed_By_Entity1]\\n      ,[Executed_By_Entity2]\\n      ,[Executed_By_Entity3]\\n      ,[Insert_Datetime]\\n      ,[Contract_ID]\\n FROM [relational].[OPS_Contract]',\n\tformat: 'query') ~> RelationalContractLkp\nLookupContract derive(AssetReportingDateValidateMsg = iif(isNull(Asset_ID) || isNull(Fund_ID) || isNull(Reporting_Period), \"Invalid Asset or Reporting Period/\", \"\"),\n\t\tReportingDateContractIDValidateMsg = iif(iif(CurrentReportingPeriod != Reporting_Period, true(), false()) && isNull(Contract_ID),\"Null Contract ID for non-current Reporting Period/\",\"\"),\n\t\tLkpRelationalContractIDValidateMsg = iif(not(isNull(Contract_ID_Lkp)),\r\niif(equals(concat(Asset_ID_Lkp,Fund_ID_Lkp), concat(Asset_ID,Fund_ID)),\"\",\"Contract ID not belong to Asset/\"),\"\"),\n\t\tContractValueValidateMsg = iif(isNull(Estimated_Maximum_Contract_Value_over_the_course_of_the_contract_toDecimal), \"Contract Value/\", \"\"),\n\t\tExecutionDateValidateMsg = iif(not(isNull(Execution_Date)),iif(not(isNull(Execution_Date_toDate)),\"\",\"Execution Date/\"),\"Execution Date/\"),\n\t\tTerminationDateValidateMsg = iif(not(isNull(Termination_Date)),iif(not(isNull(Termination_Date_toDate)),\"\",\"Termination Date/\"),\"Termination Date/\"),\n\t\tTypeOfGoodsAndServiceValidateMsg = iif(isNull(Type_of_goods_or_services),\"Type of Goods and Services/\",\"\"),\n\t\tContractCurrencyValidateMsg = iif(isNull(Contract_Currency),\"Contract Currency/\",\"\"),\n\t\tEntity1ValidateMsg = iif(isNull(Executed_By_Entity_1),\"Entity 1/\",\"\")) ~> ValidateMandatoryColumns\nValidateMandatoryColumns split(length(concatWS('',AssetReportingDateValidateMsg,\r\nLkpRelationalContractIDValidateMsg,\r\nReportingDateContractIDValidateMsg,\r\nContractValueValidateMsg,\r\nExecutionDateValidateMsg,\r\nTerminationDateValidateMsg,\r\nTypeOfGoodsAndServiceValidateMsg,\r\nContractCurrencyValidateMsg,\r\nEntity1ValidateMsg)) == 0,\n\tdisjoint: false) ~> SegregateValidInvalidRows@(ValidRows, InvalidRows)\nSplitInsertAndUpdate@Insert select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\tExecution_Date = Execution_Date_toDate,\n\t\tTermination_Date = Termination_Date_toDate,\n\t\tCompany_Name = Contracted_Party_Company_Name,\n\t\tContract_Value = Estimated_Maximum_Contract_Value_over_the_course_of_the_contract_toDecimal,\n\t\tContract_Currency,\n\t\tContract_Type = Type_of_goods_or_services,\n\t\tExecuted_By_Entity1 = Executed_By_Entity_1,\n\t\tExecuted_By_Entity2 = Executed_By_Entity_2,\n\t\tExecuted_By_Entity3 = Executed_By_Entity_3,\n\t\tInsert_Datetime,\n\t\tUpdate_Datetime,\n\t\tProcess_Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectedColumnsOutputInsert\nSegregateValidInvalidRows@InvalidRows derive(ConcatenatedMessage = concat(AssetReportingDateValidateMsg, ReportingDateContractIDValidateMsg, LkpRelationalContractIDValidateMsg, ContractValueValidateMsg,\r\nExecutionDateValidateMsg,TerminationDateValidateMsg,TypeOfGoodsAndServiceValidateMsg,ContractCurrencyValidateMsg,Entity1ValidateMsg)) ~> ConcatenateInvalidColumnsMessage\nConcatenateInvalidColumnsMessage select(mapColumn(\n\t\tContract_ID,\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\tExecution_Date,\n\t\tTermination_Date,\n\t\tCompany_Name = Contracted_Party_Company_Name,\n\t\tContract_Value = Estimated_Maximum_Contract_Value_over_the_course_of_the_contract,\n\t\tContract_Currency,\n\t\tContract_Type = Type_of_goods_or_services,\n\t\tExecuted_By_Entity1 = Executed_By_Entity_1,\n\t\tExecuted_By_Entity2 = Executed_By_Entity_2,\n\t\tExecuted_By_Entity3 = Executed_By_Entity_3,\n\t\tInsert_Datetime,\n\t\tUpdate_Datetime,\n\t\tSource_File = Work_Book,\n\t\tSource_Sub_File = Work_Sheet,\n\t\tProcess_Name,\n\t\tError_Desc = ConcatenatedMessage\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectedOutputColumnsError\nDateTypeTransform keyGenerate(output(RowNumber as long),\n\tstartAt: 1L,\n\tpartitionBy('hash', 1)) ~> GenerateRowNumber\nGenerateRowNumber filter(RowNumber > 1 && \r\nnot(isNull(Asset_ID)) && not(isNull(Fund_ID)) && not(isNull(Reporting_Period)) && \r\n(not(isNull(Contract_ID)) || not(isNull(Execution_Date)) || not(isNull(Termination_Date)) || \r\nnot(isNull(Contracted_Party_Company_Name)) || not(isNull(Estimated_Maximum_Contract_Value_over_the_course_of_the_contract)) || not(isNull(Contract_Currency)) || \r\nnot(isNull(Type_of_goods_or_services)) || not(isNull(Executed_By_Entity_1)) || not(isNull(Executed_By_Entity_2)) || not(isNull(Executed_By_Entity_3))\r\n)) ~> ExcludeFirstRow\nSelectWorksheetAsset aggregate(groupBy(Asset_ID,\n\t\tFund_ID,\n\t\tWork_Book,\n\t\tWork_Sheet,\n\t\tCurrentReportingPeriod),\n\tAggCount = count()) ~> AggregateSetUniqueWorksheetAsset\nDateTypeTransform select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tWork_Book,\n\t\tWork_Sheet,\n\t\tCurrentReportingPeriod\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectWorksheetAsset\nFilterBlankAssetFund select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tWork_Book,\n\t\tWork_Sheet,\n\t\tCurrentReportingPeriod\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectUniqueWorksheetAsset\nSourceDataTab derive(Reporting_Period = toDate(Reporting_Period),\n\t\tExecution_Date_toDate = toDate(Execution_Date),\n\t\tTermination_Date_toDate = toDate(Termination_Date),\n\t\tEstimated_Maximum_Contract_Value_over_the_course_of_the_contract_toDecimal = toDecimal(Estimated_Maximum_Contract_Value_over_the_course_of_the_contract, 19, 4),\n\t\tContract_ID = toInteger(Contract_ID),\n\t\tInsert_Datetime = fromUTC(currentUTC(), 'Australia/Sydney'),\n\t\tUpdate_Datetime = toTimestamp('9999-12-31 00:00:00'),\n\t\tWork_Book = $WorkbookName,\n\t\tWork_Sheet = $TabName,\n\t\tProcess_Name = concatWS('-',$MasterPipeline,$WorkbookName,$TabName),\n\t\tCurrentReportingPeriod = toDate($CurrentQuarterDate)) ~> DateTypeTransform\nSegregateValidInvalidRows@ValidRows split(equals(Reporting_Period, CurrentReportingPeriod),\n\tdisjoint: false) ~> SplitInsertAndUpdate@(Insert, Update)\nUpdateDatetimeValue select(mapColumn(\n\t\tContract_ID,\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\tExecution_Date = Execution_Date_toDate,\n\t\tTermination_Date = Termination_Date_toDate,\n\t\tCompany_Name = Contracted_Party_Company_Name,\n\t\tContract_Value = Estimated_Maximum_Contract_Value_over_the_course_of_the_contract_toDecimal,\n\t\tContract_Currency,\n\t\tContract_Type = Type_of_goods_or_services,\n\t\tExecuted_By_Entity1 = Executed_By_Entity_1,\n\t\tExecuted_By_Entity2 = Executed_By_Entity_2,\n\t\tExecuted_By_Entity3 = Executed_By_Entity_3,\n\t\tInsert_Datetime,\n\t\tUpdate_Datetime,\n\t\tProcess_Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumnsOutputUpdate\nSplitInsertAndUpdate@Update derive(Update_Datetime = fromUTC(currentUTC(), 'Australia/Sydney'),\n\t\tInsert_Datetime = Insert_Datetime_Lkp) ~> UpdateDatetimeValue\nRelationalContractLkp select(mapColumn(\n\t\tAsset_ID_Lkp = Asset_ID,\n\t\tFund_ID_Lkp = Fund_ID,\n\t\tReporting_Period_Lkp = Reporting_Period,\n\t\tExecution_Date_Lkp = Execution_Date,\n\t\tTermination_Date_Lkp = Termination_Date,\n\t\tCompany_Name_Lkp = Company_Name,\n\t\tContract_Value_Lkp = Contract_Value,\n\t\tContract_Currency_Lkp = Contract_Currency,\n\t\tContract_Type_Lkp = Contract_Type,\n\t\tExecuted_By_Entity1_Lkp = Executed_By_Entity1,\n\t\tExecuted_By_Entity2_Lkp = Executed_By_Entity2,\n\t\tExecuted_By_Entity3_Lkp = Executed_By_Entity3,\n\t\tInsert_Datetime_Lkp = Insert_Datetime,\n\t\tContract_ID_Lkp = Contract_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectContractLkp\nExcludeFirstRow, SelectContractLkp lookup(Contract_ID == Contract_ID_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupContract\nAggregateSetUniqueWorksheetAsset filter(not(isNull(Asset_ID)) && not(isNull(Fund_ID))) ~> FilterBlankAssetFund\nSelectedColumnsOutputInsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:[(concatWS(\"_\", $WorkbookName, $TabName,$CurrentQuarterDate,'LoadReady'))],\n\tmapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\tExecution_Date,\n\t\tTermination_Date,\n\t\tCompany_Name,\n\t\tContract_Value,\n\t\tContract_Currency,\n\t\tContract_Type,\n\t\tExecuted_By_Entity1,\n\t\tExecuted_By_Entity2,\n\t\tExecuted_By_Entity3,\n\t\tInsert_Datetime,\n\t\tUpdate_Datetime,\n\t\tProcess_Name\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TargetPersistentParquetInsert\nSelectedOutputColumnsError sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tContract_ID,\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\tExecution_Date,\n\t\tTermination_Date,\n\t\tCompany_Name,\n\t\tContract_Value,\n\t\tContract_Currency,\n\t\tContract_Type,\n\t\tExecuted_By_Entity1,\n\t\tExecuted_By_Entity2,\n\t\tExecuted_By_Entity3,\n\t\tInsert_Datetime,\n\t\tUpdate_Datetime,\n\t\tSource_File,\n\t\tSource_Sub_File,\n\t\tProcess_Name,\n\t\tError_Desc\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ErrorTable\nSelectUniqueWorksheetAsset sink(input(\n\t\tWork_Book as string,\n\t\tWork_Sheet as string,\n\t\tAsset_Id as string,\n\t\tFund_Id as string,\n\t\tCurrentQuarterDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tWork_Book,\n\t\tWork_Sheet,\n\t\tAsset_Id = Asset_ID,\n\t\tFund_Id = Fund_ID,\n\t\tCurrentQuarterDate = CurrentReportingPeriod\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OpsWorkbookWorksheetList\nSelectColumnsOutputUpdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:[(concatWS(\"_\", $WorkbookName, $TabName,$CurrentQuarterDate,'Update'))],\n\tmapColumn(\n\t\tContract_ID,\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\tExecution_Date,\n\t\tTermination_Date,\n\t\tCompany_Name,\n\t\tContract_Value,\n\t\tContract_Currency,\n\t\tContract_Type,\n\t\tExecuted_By_Entity1,\n\t\tExecuted_By_Entity2,\n\t\tExecuted_By_Entity3,\n\t\tInsert_Datetime,\n\t\tUpdate_Datetime,\n\t\tProcess_Name\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TargetPersistenParquetUpdate"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessMktUpdateDimDataSource_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ProcessDimData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadMktDimDataSource_InsertUpdate_df",
								"type": "DataFlowReference",
								"parameters": {
									"GeneratedBatchDate": {
										"value": "'@{pipeline().parameters.GeneratedBatchDate}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"WorksheetName": {
										"value": "'@{pipeline().parameters.WorksheetName}'",
										"type": "Expression"
									},
									"MasterPipelineName": {
										"value": "'@{pipeline().parameters.MasterPipelineName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ReadSource": {
										"FileName": {
											"value": "@pipeline().parameters.ScrubbedFileName",
											"type": "Expression"
										}
									},
									"DatamartDimDataSourceLkp": {},
									"TargetDim": {
										"Schema": {
											"value": "@pipeline().parameters.DimSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortDimTableName",
											"type": "Expression"
										}
									},
									"ErrorTable": {
										"Schema": {
											"value": "@pipeline().parameters.ErrorSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortErrorTableName",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string"
					},
					"WorksheetName": {
						"type": "string"
					},
					"GeneratedBatchDate": {
						"type": "string"
					},
					"MasterPipelineName": {
						"type": "string"
					},
					"ScrubbedFileName": {
						"type": "string"
					},
					"DimSchemaName": {
						"type": "string"
					},
					"ShortDimTableName": {
						"type": "string"
					},
					"ErrorSchemaName": {
						"type": "string"
					},
					"ShortErrorTableName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessMktUpdateDimDeliveryPoint_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ProcessDimData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadMktDimDeliveryPoint_InsertUpdate_df",
								"type": "DataFlowReference",
								"parameters": {
									"GeneratedBatchDate": {
										"value": "'@{pipeline().parameters.GeneratedBatchDate}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"WorksheetName": {
										"value": "'@{pipeline().parameters.WorksheetName}'",
										"type": "Expression"
									},
									"MasterPipelineName": {
										"value": "'@{pipeline().parameters.MasterPipelineName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ReadSource": {
										"FileName": {
											"value": "@pipeline().parameters.ScrubbedFileName",
											"type": "Expression"
										}
									},
									"RelationalDimDeliveryPointLkp": {},
									"TargetDim": {
										"Schema": {
											"value": "@pipeline().parameters.DimSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortDimTableName",
											"type": "Expression"
										}
									},
									"ErrorTable": {
										"Schema": {
											"value": "@pipeline().parameters.ErrorSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortErrorTableName",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string"
					},
					"WorksheetName": {
						"type": "string"
					},
					"GeneratedBatchDate": {
						"type": "string"
					},
					"MasterPipelineName": {
						"type": "string"
					},
					"ScrubbedFileName": {
						"type": "string"
					},
					"DimSchemaName": {
						"type": "string"
					},
					"ShortDimTableName": {
						"type": "string"
					},
					"ErrorSchemaName": {
						"type": "string"
					},
					"ShortErrorTableName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessMktUpdateDimIndicator_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ProcessDimData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadMktDimIndicator_InsertUpdate_df",
								"type": "DataFlowReference",
								"parameters": {
									"GeneratedBatchDate": {
										"value": "'@{pipeline().parameters.GeneratedBatchDate}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"WorksheetName": {
										"value": "'@{pipeline().parameters.WorksheetName}'",
										"type": "Expression"
									},
									"MasterPipelineName": {
										"value": "'@{pipeline().parameters.MasterPipelineName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ReadSource": {
										"FileName": {
											"value": "@pipeline().parameters.ScrubbedFileName",
											"type": "Expression"
										}
									},
									"DatamartDimIndicatorLkp": {},
									"TargetDim": {
										"Schema": {
											"value": "@pipeline().parameters.DimSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortDimTableName",
											"type": "Expression"
										}
									},
									"ErrorTable": {
										"Schema": {
											"value": "@pipeline().parameters.ErrorSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortErrorTableName",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string"
					},
					"WorksheetName": {
						"type": "string"
					},
					"GeneratedBatchDate": {
						"type": "string"
					},
					"MasterPipelineName": {
						"type": "string"
					},
					"ScrubbedFileName": {
						"type": "string"
					},
					"DimSchemaName": {
						"type": "string"
					},
					"ShortDimTableName": {
						"type": "string"
					},
					"ErrorSchemaName": {
						"type": "string"
					},
					"ShortErrorTableName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessMktUpdateDimProduct_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ProcessDimData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadMktDimProduct_InsertUpdate_df",
								"type": "DataFlowReference",
								"parameters": {
									"GeneratedBatchDate": {
										"value": "'@{pipeline().parameters.GeneratedBatchDate}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"WorksheetName": {
										"value": "'@{pipeline().parameters.WorksheetName}'",
										"type": "Expression"
									},
									"MasterPipelineName": {
										"value": "'@{pipeline().parameters.MasterPipelineName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ReadSource": {
										"FileName": {
											"value": "@pipeline().parameters.ScrubbedFileName",
											"type": "Expression"
										}
									},
									"DatamartDimProductLkp": {},
									"DatamartSpeciesLkp": {},
									"RelationalChartOfAccountLkp": {},
									"TargetDim": {
										"Schema": {
											"value": "@pipeline().parameters.DimSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortDimTableName",
											"type": "Expression"
										}
									},
									"ErrorTable": {
										"Schema": {
											"value": "@pipeline().parameters.ErrorSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortErrorTableName",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string"
					},
					"WorksheetName": {
						"type": "string"
					},
					"GeneratedBatchDate": {
						"type": "string"
					},
					"MasterPipelineName": {
						"type": "string"
					},
					"ScrubbedFileName": {
						"type": "string"
					},
					"DimSchemaName": {
						"type": "string"
					},
					"ShortDimTableName": {
						"type": "string"
					},
					"ErrorSchemaName": {
						"type": "string"
					},
					"ShortErrorTableName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessMktUpdateDimSpecies_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ProcessDimData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadMktDimSpecies_InsertUpdate_df",
								"type": "DataFlowReference",
								"parameters": {
									"GeneratedBatchDate": {
										"value": "'@{pipeline().parameters.GeneratedBatchDate}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"WorksheetName": {
										"value": "'@{pipeline().parameters.WorksheetName}'",
										"type": "Expression"
									},
									"MasterPipelineName": {
										"value": "'@{pipeline().parameters.MasterPipelineName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ReadSource": {
										"FileName": {
											"value": "@pipeline().parameters.ScrubbedFileName",
											"type": "Expression"
										}
									},
									"DatamartDimSpeciesLkp": {},
									"TargetDim": {
										"Schema": {
											"value": "@pipeline().parameters.DimSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortDimTableName",
											"type": "Expression"
										}
									},
									"ErrorTable": {
										"Schema": {
											"value": "@pipeline().parameters.ErrorSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortErrorTableName",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string"
					},
					"WorksheetName": {
						"type": "string"
					},
					"GeneratedBatchDate": {
						"type": "string"
					},
					"MasterPipelineName": {
						"type": "string"
					},
					"ScrubbedFileName": {
						"type": "string"
					},
					"DimSchemaName": {
						"type": "string"
					},
					"ShortDimTableName": {
						"type": "string"
					},
					"ErrorSchemaName": {
						"type": "string"
					},
					"ShortErrorTableName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessMktUpdateDimType_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ProcessDimData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadMktDimType_InsertUpdate_df",
								"type": "DataFlowReference",
								"parameters": {
									"GeneratedBatchDate": {
										"value": "'@{pipeline().parameters.GeneratedBatchDate}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"WorksheetName": {
										"value": "'@{pipeline().parameters.WorksheetName}'",
										"type": "Expression"
									},
									"MasterPipelineName": {
										"value": "'@{pipeline().parameters.MasterPipelineName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ReadSource": {
										"FileName": {
											"value": "@pipeline().parameters.ScrubbedFileName",
											"type": "Expression"
										}
									},
									"RelationalDimTypeLkp": {},
									"TargetDim": {
										"Schema": {
											"value": "@pipeline().parameters.DimSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortDimTableName",
											"type": "Expression"
										}
									},
									"ErrorTable": {
										"Schema": {
											"value": "@pipeline().parameters.ErrorSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortErrorTableName",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string"
					},
					"WorksheetName": {
						"type": "string"
					},
					"GeneratedBatchDate": {
						"type": "string"
					},
					"MasterPipelineName": {
						"type": "string"
					},
					"ScrubbedFileName": {
						"type": "string"
					},
					"DimSchemaName": {
						"type": "string"
					},
					"ShortDimTableName": {
						"type": "string"
					},
					"ErrorSchemaName": {
						"type": "string"
					},
					"ShortErrorTableName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessMktUpdateDimUom_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ProcessDimData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadMktDimUom_InsertUpdate_df",
								"type": "DataFlowReference",
								"parameters": {
									"GeneratedBatchDate": {
										"value": "'@{pipeline().parameters.GeneratedBatchDate}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"WorksheetName": {
										"value": "'@{pipeline().parameters.WorksheetName}'",
										"type": "Expression"
									},
									"MasterPipelineName": {
										"value": "'@{pipeline().parameters.MasterPipelineName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ReadSource": {
										"FileName": {
											"value": "@pipeline().parameters.ScrubbedFileName",
											"type": "Expression"
										}
									},
									"RelationalDimUomLkp": {},
									"TargetDim": {
										"Schema": {
											"value": "@pipeline().parameters.DimSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortDimTableName",
											"type": "Expression"
										}
									},
									"ErrorTable": {
										"Schema": {
											"value": "@pipeline().parameters.ErrorSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortErrorTableName",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string"
					},
					"WorksheetName": {
						"type": "string"
					},
					"GeneratedBatchDate": {
						"type": "string"
					},
					"MasterPipelineName": {
						"type": "string"
					},
					"ScrubbedFileName": {
						"type": "string"
					},
					"DimSchemaName": {
						"type": "string"
					},
					"ShortDimTableName": {
						"type": "string"
					},
					"ErrorSchemaName": {
						"type": "string"
					},
					"ShortErrorTableName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessMktUpdateFactMarket_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Pass2_ProcessAndPopulate_df",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Pass1_InsertNewSpeciesProductDims_df",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadMktFactMarket_Pass2_ProcessAndPopulate_df",
								"type": "DataFlowReference",
								"parameters": {
									"GeneratedBatchDate": {
										"value": "'@{pipeline().parameters.GeneratedBatchDate}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"WorksheetName": {
										"value": "'@{pipeline().parameters.WorksheetName}'",
										"type": "Expression"
									},
									"MasterPipelineName": {
										"value": "'@{pipeline().parameters.MasterPipelineName}'",
										"type": "Expression"
									},
									"Product_Group": {
										"value": "'@{pipeline().parameters.Product_Group}'",
										"type": "Expression"
									},
									"DimSchemaName": {
										"value": "'@{pipeline().parameters.DimSchemaName}'",
										"type": "Expression"
									},
									"ErrorSchemaName": {
										"value": "'@{pipeline().parameters.ErrorSchemaName}'",
										"type": "Expression"
									},
									"ShortFactTableName": {
										"value": "'@{pipeline().parameters.ShortFactTableName}'",
										"type": "Expression"
									},
									"ShortErrorTableName": {
										"value": "'@{pipeline().parameters.ShortErrorTableName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ReadSource": {
										"FileName": {
											"value": "@pipeline().parameters.ScrubbedFileName",
											"type": "Expression"
										}
									},
									"DatamartDimProductLkp": {},
									"DatamartDimSpeciesLkp": {},
									"DatamartDimDataSource": {},
									"DatamartDimTypePartial": {},
									"DatamartDimRegion": {},
									"RelationalDateDimension": {},
									"DatamartDimUom": {},
									"DatamartDimDeliveryPoint": {},
									"DatamartDimCurrency": {},
									"DatamartDimIndicator": {},
									"DatamartDimType": {},
									"FactErrorTable": {
										"Schema": {
											"value": "@pipeline().parameters.ErrorSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortErrorTableName",
											"type": "Expression"
										}
									},
									"TargetFactInsert": {
										"Schema": {
											"value": "@pipeline().parameters.DimSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortFactTableName",
											"type": "Expression"
										}
									},
									"TargetFactDelete": {
										"Schema": {
											"value": "@pipeline().parameters.DimSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@pipeline().parameters.ShortFactTableName",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "Pass1_InsertNewSpeciesProductDims_df",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadMktFactMarket_Pass1_InsertNewSpeciesProductDims_df",
								"type": "DataFlowReference",
								"parameters": {
									"GeneratedBatchDate": {
										"value": "'@{pipeline().parameters.GeneratedBatchDate}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"WorksheetName": {
										"value": "'@{pipeline().parameters.WorksheetName}'",
										"type": "Expression"
									},
									"MasterPipelineName": {
										"value": "'@{pipeline().parameters.MasterPipelineName}'",
										"type": "Expression"
									},
									"Product_Group": {
										"value": "'@{pipeline().parameters.Product_Group}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ReadSource": {
										"FileName": {
											"value": "@pipeline().parameters.ScrubbedFileName",
											"type": "Expression"
										}
									},
									"DatamartDimProductLkp": {},
									"DatamartDimSpeciesLkp": {},
									"InsertNewSpeciesDim": {
										"Schema": {
											"value": "@pipeline().parameters.DimSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "Dim_Species",
											"type": "Expression"
										}
									},
									"InsertNewProductDim": {
										"Schema": {
											"value": "@pipeline().parameters.DimSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "Dim_Product",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string"
					},
					"WorksheetName": {
						"type": "string"
					},
					"GeneratedBatchDate": {
						"type": "string"
					},
					"MasterPipelineName": {
						"type": "string"
					},
					"ScrubbedFileName": {
						"type": "string"
					},
					"DimSchemaName": {
						"type": "string"
					},
					"ShortFactTableName": {
						"type": "string"
					},
					"ErrorSchemaName": {
						"type": "string"
					},
					"ShortErrorTableName": {
						"type": "string"
					},
					"Product_Group": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabAnswers_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Operations tab",
				"activities": [
					{
						"name": "ProcessExcelWorkbookTab",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadXlsxAnswers_Step1_df",
								"type": "DataFlowReference",
								"parameters": {
									"MasterUtcTag": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"CurrentRunDateTime": {
										"value": "'@{pipeline().parameters.CurrentRunDateTime}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"TabName": {
										"value": "'@{pipeline().parameters.Answers}'",
										"type": "Expression"
									},
									"CurrentQuarterDate": {
										"value": "'@{pipeline().parameters.CurrentQuarterDate}'",
										"type": "Expression"
									},
									"MasterPipeline": {
										"value": "'@{pipeline().parameters.MasterPipeline}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SourceDataTab": {
										"ParquetFile": {
											"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Answers,'_',pipeline().parameters.CurrentQuarterDate,'_Extract')",
											"type": "Expression"
										}
									},
									"TargetPersistentParquetInsert": {},
									"ErrorTable": {
										"Schema": {
											"value": "audit",
											"type": "Expression"
										},
										"TableName": {
											"value": "OPS_Answers_Error",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"Answers": {
						"type": "string",
						"defaultValue": "Answers_DWH_Export"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					},
					"MasterPipeline": {
						"type": "string",
						"defaultValue": "pipeline"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabAnswers_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Timber_Sales_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.Answers}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT, 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteOperationTableByAssetFundReportingDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxAnswers_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Answers}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Answers,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Answers",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteOperationTableByAssetFundReportingDate",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxAnswers_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Answers}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Answers,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Answers",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"Answers": {
						"type": "string",
						"defaultValue": "Answers_DWH_Export"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabCertificates_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "ProcessExcelWorkbookTab",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadXlsxCertificates_Step1_df",
								"type": "DataFlowReference",
								"parameters": {
									"MasterUtcTag": {
										"value": "'@{pipeline().parameters.MasterUtcTag}'",
										"type": "Expression"
									},
									"CurrentRunDateTime": {
										"value": "'@{pipeline().parameters.CurrentRunDateTime}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"TabName": {
										"value": "'@{pipeline().parameters.Certifications}'",
										"type": "Expression"
									},
									"CurrentQuarterDate": {
										"value": "'@{pipeline().parameters.CurrentQuarterDate}'",
										"type": "Expression"
									},
									"MasterPipeline": {
										"value": "'@{pipeline().parameters.MasterPipeline}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SourceDataTab": {
										"ParquetFile": {
											"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Certifications,'_',pipeline().parameters.CurrentQuarterDate,'_Extract')",
											"type": "Expression"
										}
									},
									"RelationalOpsCertificationType": {},
									"RelationalCertification": {},
									"TargetPersistentParquetInsert": {},
									"ErrorTable": {
										"Schema": {
											"value": "audit",
											"type": "Expression"
										},
										"TableName": {
											"value": "OPS_Certification_Error",
											"type": "Expression"
										}
									},
									"TargetPersistenParquetUpdate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"Certifications": {
						"type": "string",
						"defaultValue": "Certifications"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					},
					"MasterPipeline": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx-Certifications"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabCertificates_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Certification_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.Certifications}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT, 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteExistingRowsForCurrentPeriod",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxCertificates_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Certifications}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Certifications,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Certification",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "UpdateValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "LoadValidatedDataset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxCertificates_Step4_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Certifications}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceUpdate": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Certifications,'_',pipeline().parameters.CurrentQuarterDate,'_Update')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Certification",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteExistingRowsForCurrentPeriod",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxCertificates_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Certifications}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Certifications,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelationalDelete": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Certification",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "30/09/2020"
					},
					"Certifications": {
						"type": "string",
						"defaultValue": "Certifications"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabContracts_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "ProcessExcelWorkbookTab",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadXlsxContract_Step1_df",
								"type": "DataFlowReference",
								"parameters": {
									"MasterUtcTag": {
										"value": "'@{pipeline().parameters.MasterUtcTag}'",
										"type": "Expression"
									},
									"CurrentRunDateTime": {
										"value": "'@{pipeline().parameters.CurrentRunDateTime}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"TabName": {
										"value": "'@{pipeline().parameters.Contracts}'",
										"type": "Expression"
									},
									"CurrentQuarterDate": {
										"value": "'@{pipeline().parameters.CurrentQuarterDate}'",
										"type": "Expression"
									},
									"MasterPipeline": {
										"value": "'@{pipeline().parameters.MasterPipeline}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SourceDataTab": {
										"ParquetFile": {
											"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Contracts,'_',pipeline().parameters.CurrentQuarterDate,'_Extract')",
											"type": "Expression"
										}
									},
									"RelationalContractLkp": {},
									"TargetPersistentParquetInsert": {},
									"ErrorTable": {
										"Schema": {
											"value": "audit",
											"type": "Expression"
										},
										"TableName": {
											"value": "OPS_Contract_Error",
											"type": "Expression"
										}
									},
									"TargetPersistenParquetUpdate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"Contracts": {
						"type": "string",
						"defaultValue": "Contracts"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					},
					"MasterPipeline": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx-Certifications"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabContracts_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Certification_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.Contracts}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT, 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteExistingRowsForCurrentPeriod",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxContract_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Contracts}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Contracts,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Contract",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "UpdateValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "LoadValidatedDataset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxContract_Step4_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Contracts}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceUpdate": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Contracts,'_',pipeline().parameters.CurrentQuarterDate,'_Update')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Contract",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteExistingRowsForCurrentPeriod",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxContract_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.Contracts}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Contracts,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelationalDelete": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Contract",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "30/09/2020"
					},
					"Contracts": {
						"type": "string",
						"defaultValue": "Contracts"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabHarvestReconcilliation_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Operations tab",
				"activities": [
					{
						"name": "ProcessExcelWorkbookTab",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadXlsxHarvestReconcilliation_Step1_df",
								"type": "DataFlowReference",
								"parameters": {
									"MasterUtcTag": {
										"value": "'@{pipeline().parameters.MasterUtcTag}'",
										"type": "Expression"
									},
									"CurrentRunDateTime": {
										"value": "'@{pipeline().parameters.CurrentRunDateTime}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"TabName": {
										"value": "'@{pipeline().parameters.HarvestReconcilliation}'",
										"type": "Expression"
									},
									"CurrentQuarterDate": {
										"value": "'@{pipeline().parameters.CurrentQuarterDate}'",
										"type": "Expression"
									},
									"MasterPipeline": {
										"value": "'@{pipeline().parameters.MasterPipeline}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SourceDataTab": {
										"ParquetFile": {
											"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.HarvestReconcilliation,'_',pipeline().parameters.CurrentQuarterDate,'_Extract')",
											"type": "Expression"
										}
									},
									"RelationalOperationType": {},
									"RelationalSpeciesType": {},
									"TargetPersistentParquetInsert": {},
									"ErrorTable": {
										"Schema": {
											"value": "audit",
											"type": "Expression"
										},
										"TableName": {
											"value": "OPS_Harvest_Reconciliation_Error",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"HarvestReconcilliation": {
						"type": "string",
						"defaultValue": "Harvest Reconcilliation"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					},
					"MasterPipeline": {
						"type": "string",
						"defaultValue": "pipeline"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabHarvestReconcilliation_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Timber_Sales_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.HarvestReconciliation}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT, 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteOperationTableByAssetFundReportingDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxHarvestReconcilliation_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.HarvestReconciliation}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.HarvestReconciliation,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Harvest_Reconciliation",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteOperationTableByAssetFundReportingDate",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxHarvestReconcilliation_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.HarvestReconciliation}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.HarvestReconciliation,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Harvest_Reconciliation",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"HarvestReconciliation": {
						"type": "string",
						"defaultValue": "Harvest Reconcilliation"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabMajorSevereIncidents_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Certificates tab",
				"activities": [
					{
						"name": "ProcessExcelWorkbookTab",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadXlsxMajorSevereIncidents_Step1_df",
								"type": "DataFlowReference",
								"parameters": {
									"MasterUtcTag": {
										"value": "'@{pipeline().parameters.MasterUtcTag}'",
										"type": "Expression"
									},
									"CurrentRunDateTime": {
										"value": "'@{pipeline().parameters.CurrentRunDateTime}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"TabName": {
										"value": "'@{pipeline().parameters.MajorSevereIncidents}'",
										"type": "Expression"
									},
									"CurrentQuarterDate": {
										"value": "'@{pipeline().parameters.CurrentQuarterDate}'",
										"type": "Expression"
									},
									"MasterPipeline": {
										"value": "'@{pipeline().parameters.MasterPipeline}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SourceDataTab": {
										"ParquetFile": {
											"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.MajorSevereIncidents,'_',pipeline().parameters.CurrentQuarterDate,'_Extract')",
											"type": "Expression"
										}
									},
									"RelationalOpsIncidentType": {},
									"RelationalIncident": {},
									"TargetPersistentParquetInsert": {},
									"ErrorTable": {
										"Schema": "Audit",
										"TableName": "OPS_Incident_Error"
									},
									"TargetPersistenParquetUpdate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"MajorSevereIncidents": {
						"type": "string",
						"defaultValue": "Major Severe Incidents"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					},
					"MasterPipeline": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx-Certifications"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabMajorSevereIncidents_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Major Severe Incidents tab",
				"activities": [
					{
						"name": "GetTableErrorCount",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT COUNT(*) AS ERROR_COUNT FROM (\n SELECT DISTINCT LIS.Work_Book, LIS.Work_Sheet FROM \n audit.OPS_Workbook_Worksheet_Asset_List LIS\n JOIN audit.OPS_Incident_Error ERR\n ON LIS.Work_Book = ERR.Source_File  \n AND LIS.Work_Sheet = ERR.Source_Sub_File\n WHERE LIS.Work_Book = '@{pipeline().parameters.WorkbookName}'\n AND LIS.Work_Sheet = '@{pipeline().parameters.MajorSevereIncidents}'\n)x",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQLtableGeneric_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CheckConditionIfErrorExist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetTableErrorCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('GetTableErrorCount').output.firstRow.ERROR_COUNT, 0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "DeleteExistingRowsForCurrentPeriod",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxMajorSevereIncidents_Step3_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.MajorSevereIncidents}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.MajorSevereIncidents,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Incident",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "UpdateValidatedDataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "LoadValidatedDataset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxMajorSevereIncidents_Step4_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.MajorSevereIncidents}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceUpdate": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.MajorSevereIncidents,'_',pipeline().parameters.CurrentQuarterDate,'_Update')",
														"type": "Expression"
													}
												},
												"TargetRelational": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Incident",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "DeleteExistingRowsForCurrentPeriod",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadXlsxMajorSevereIncidents_Step2_df",
											"type": "DataFlowReference",
											"parameters": {
												"WorkbookName": {
													"value": "'@{pipeline().parameters.WorkbookName}'",
													"type": "Expression"
												},
												"TabName": {
													"value": "'@{pipeline().parameters.MajorSevereIncidents}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"SourceReadyLoad": {
													"ParquetFile": {
														"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.MajorSevereIncidents,'_',pipeline().parameters.CurrentQuarterDate,'_LoadReady')",
														"type": "Expression"
													}
												},
												"TargetRelationalDelete": {
													"Schema": {
														"value": "relational",
														"type": "Expression"
													},
													"TableName": {
														"value": "OPS_Incident",
														"type": "Expression"
													}
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "30/09/2020"
					},
					"MajorSevereIncidents": {
						"type": "string",
						"defaultValue": "Major Severe Incidents"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessOpsWorkbookTabOperations_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Operations tab",
				"activities": [
					{
						"name": "ProcessExcelWorkbookTab",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LoadXlsxOperations_Step1_df",
								"type": "DataFlowReference",
								"parameters": {
									"MasterUtcTag": {
										"value": "'@{pipeline().parameters.MasterUtcTag}'",
										"type": "Expression"
									},
									"CurrentRunDateTime": {
										"value": "'@{pipeline().parameters.CurrentRunDateTime}'",
										"type": "Expression"
									},
									"WorkbookName": {
										"value": "'@{pipeline().parameters.WorkbookName}'",
										"type": "Expression"
									},
									"TabName": {
										"value": "'@{pipeline().parameters.Operations}'",
										"type": "Expression"
									},
									"CurrentQuarterDate": {
										"value": "'@{pipeline().parameters.CurrentQuarterDate}'",
										"type": "Expression"
									},
									"MasterPipeline": {
										"value": "'@{pipeline().parameters.MasterPipeline}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SourceDataTab": {
										"ParquetFile": {
											"value": "@concat(pipeline().parameters.WorkbookName,'_',pipeline().parameters.Operations,'_',pipeline().parameters.CurrentQuarterDate,'_Extract')",
											"type": "Expression"
										}
									},
									"RelationalOperationType": {},
									"TargetPersistentParquetInsert": {},
									"ErrorTable": {
										"Schema": {
											"value": "audit",
											"type": "Expression"
										},
										"TableName": {
											"value": "OPS_Operation_Error",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"WorkbookName": {
						"type": "string",
						"defaultValue": "Wenita Forestry Products Q4 FY20 V2.xlsx"
					},
					"CurrentQuarterDate": {
						"type": "string",
						"defaultValue": "2020-06-30"
					},
					"Operations": {
						"type": "string",
						"defaultValue": "Operations"
					},
					"CurrentRunDateTime": {
						"type": "string",
						"defaultValue": "2020-08-01"
					},
					"MasterUtcTag": {
						"type": "string",
						"defaultValue": "2020-08-28T06:05:53.4181322Z"
					},
					"MasterPipeline": {
						"type": "string",
						"defaultValue": "pipeline"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}