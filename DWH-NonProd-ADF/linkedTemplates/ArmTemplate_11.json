{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DWH-NonProd-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LoadTxtToDBstaging_opsstrategicdeliverable_df')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText_sourcelandingscrubbed_opsstrategicdeliverable_ds",
								"type": "DatasetReference"
							},
							"name": "LoadFromScrubbedToStagingDB",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "SQLrelationasset_ds",
								"type": "DatasetReference"
							},
							"name": "RelationalAsset",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLstagingopsstrategicdeliverable_ds",
								"type": "DatasetReference"
							},
							"name": "StagingDB"
						}
					],
					"transformations": [
						{
							"name": "LookupRelationAsset"
						},
						{
							"name": "SelectValidRecord"
						},
						{
							"name": "ValidatedDatesAndNumbers"
						},
						{
							"name": "ConvertDateAndNumbers"
						},
						{
							"name": "SelectInvalidDateOrNumber"
						},
						{
							"name": "InvalidDateOrNumberErrormessage"
						},
						{
							"name": "ValidatedAsset"
						},
						{
							"name": "InvalidFundOrAsseterrormessage"
						},
						{
							"name": "SelectInvalidFundOrAsset"
						},
						{
							"name": "UnionAll"
						},
						{
							"name": "SelectRelationalAsset"
						}
					],
					"script": "source(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tProject_ID as string,\n\t\tDeliverable as string,\n\t\tProject_Weighting as string,\n\t\tExpected_Completion_Date as string,\n\t\tPlanned_Completion_Date as string,\n\t\tCurrent_Progress_Perc_Complete as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> LoadFromScrubbedToStagingDB\nsource(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Asset_ID],[Fund_ID]\\nFROM [relational].[Asset]\\nWHERE record_deleted_flag = 0',\n\tformat: 'query') ~> RelationalAsset\nValidatedDatesAndNumbers@ValidDateAndNumber, SelectRelationalAsset lookup(Asset_ID == Relation_Asset_ID\n\t&& Fund_ID == Relation_Fund_ID,\n\tmultiple: true,\n\tbroadcast: 'none')~> LookupRelationAsset\nValidatedAsset@ValidFundAndAsset select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tProject_ID,\n\t\tDeliverable,\n\t\tProject_Weighting,\n\t\tExpected_Completion_Date,\n\t\tPlanned_Completion_Date,\n\t\tCurrent_Progress_Perc_Complete\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectValidRecord\nConvertDateAndNumbers split(not(isNull(Derived_Project_ID)) && \r\niif(not(isNull(Project_Weighting)),not(isNull(Derived_Project_Weighting)),true()) && \r\niif(not(isNull(Expected_Completion_Date)),not(isNull(Derived_Expected_Completion_Date)),true()) && \r\niif(not(isNull(Planned_Completion_Date)),not(isNull(Derived_Planned_Completion_Date)),true()) && \r\niif(not(isNull(Current_Progress_Perc_Complete)),not(isNull(Derived_Current_Progress_Perc_Complete)),true()),\n\tdisjoint: false) ~> ValidatedDatesAndNumbers@(ValidDateAndNumber, InvalidDateOrNumber)\nLoadFromScrubbedToStagingDB derive(Derived_Project_ID = toInteger(Project_ID),\n\t\tDerived_Project_Weighting = toShort(Project_Weighting),\n\t\tDerived_Expected_Completion_Date = toDate(Expected_Completion_Date,\"dd/MM/yyyy\"),\n\t\tDerived_Planned_Completion_Date = toDate(Planned_Completion_Date,\"dd/MM/yyyy\"),\n\t\tDerived_Current_Progress_Perc_Complete = toShort(Current_Progress_Perc_Complete)) ~> ConvertDateAndNumbers\nInvalidDateOrNumberErrormessage select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tProject_ID,\n\t\tDeliverable,\n\t\tProject_Weighting,\n\t\tExpected_Completion_Date,\n\t\tPlanned_Completion_Date,\n\t\tCurrent_Progress_Perc_Complete,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidDateOrNumber\nValidatedDatesAndNumbers@InvalidDateOrNumber derive(Validation_Error = toString(\"Invalid Project ID / Dates / Numbers\")) ~> InvalidDateOrNumberErrormessage\nLookupRelationAsset split(not(isNull(Relation_Asset_ID)),\n\tdisjoint: false) ~> ValidatedAsset@(ValidFundAndAsset, InvalidFundOrAsset)\nValidatedAsset@InvalidFundOrAsset derive(Validation_Error = toString(\"Invalid Fund Or Asset\")) ~> InvalidFundOrAsseterrormessage\nInvalidFundOrAsseterrormessage select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tProject_ID,\n\t\tDeliverable,\n\t\tProject_Weighting,\n\t\tExpected_Completion_Date,\n\t\tPlanned_Completion_Date,\n\t\tCurrent_Progress_Perc_Complete,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidFundOrAsset\nSelectValidRecord, SelectInvalidDateOrNumber, SelectInvalidFundOrAsset union(byName: true)~> UnionAll\nRelationalAsset select(mapColumn(\n\t\tRelation_Asset_ID = Asset_ID,\n\t\tRelation_Fund_ID = Fund_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRelationalAsset\nUnionAll sink(input(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tProject_ID as string,\n\t\tDeliverable as string,\n\t\tProject_Weighting as string,\n\t\tExpected_Completion_Date as string,\n\t\tPlanned_Completion_Date as string,\n\t\tCurrent_Progress_Perc_Complete as string,\n\t\tValidation_Error as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tProject_ID,\n\t\tDeliverable,\n\t\tProject_Weighting,\n\t\tExpected_Completion_Date,\n\t\tPlanned_Completion_Date,\n\t\tCurrent_Progress_Perc_Complete,\n\t\tValidation_Error\n\t)) ~> StagingDB"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadTxtToDBstaging_opsstrategicproject_df')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText_sourcelandingscrubbed_opsstrategicproject_ds",
								"type": "DatasetReference"
							},
							"name": "LoadFromScrubbedToStagingDB",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "SQLrelationasset_ds",
								"type": "DatasetReference"
							},
							"name": "RelationalAsset",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLstagingopsstrategicproject_ds",
								"type": "DatasetReference"
							},
							"name": "StagingDB"
						}
					],
					"transformations": [
						{
							"name": "LookupRelationAsset"
						},
						{
							"name": "SelectValidRecord"
						},
						{
							"name": "ValidatedDateAndID"
						},
						{
							"name": "ConvertDateAndIncidentID"
						},
						{
							"name": "SelectInvalidDateOrID"
						},
						{
							"name": "InvalidDateOrIDErrormessage"
						},
						{
							"name": "SelectRelationalAsset"
						},
						{
							"name": "ValidatedAsset"
						},
						{
							"name": "InvalidFundOrAsseterrormessage"
						},
						{
							"name": "SelectInvalidFundOrAsset"
						},
						{
							"name": "UnionAll"
						}
					],
					"script": "source(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tProject_ID as string,\n\t\tReporting_Period as string,\n\t\tPrimary_Management_Activity as string,\n\t\tProject_Objectives as string,\n\t\tExpected_Value_Impact as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> LoadFromScrubbedToStagingDB\nsource(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Asset_ID],[Fund_ID]\\nFROM [relational].[Asset]\\nWHERE record_deleted_flag = 0',\n\tformat: 'query') ~> RelationalAsset\nValidatedDateAndID@ValidDateAndID, SelectRelationalAsset lookup(Asset_ID == Relation_Asset_ID\n\t&& Fund_ID == Relation_Fund_ID,\n\tmultiple: true,\n\tbroadcast: 'none')~> LookupRelationAsset\nValidatedAsset@ValidFundAndAsset select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tProject_ID,\n\t\tReporting_Period,\n\t\tPrimary_Management_Activity,\n\t\tProject_Objectives,\n\t\tExpected_Value_Impact\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectValidRecord\nConvertDateAndIncidentID split(not(isNull(Derived_Project_ID)) && not(isNull(Derived_Reporting_Period)),\n\tdisjoint: false) ~> ValidatedDateAndID@(ValidDateAndID, InvalidDateOrID)\nLoadFromScrubbedToStagingDB derive(Derived_Reporting_Period = toDate(Reporting_Period,\"dd/MM/yyyy\"),\n\t\tDerived_Project_ID = toInteger(Project_ID)) ~> ConvertDateAndIncidentID\nInvalidDateOrIDErrormessage select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tProject_ID,\n\t\tReporting_Period,\n\t\tPrimary_Management_Activity,\n\t\tProject_Objectives,\n\t\tExpected_Value_Impact,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidDateOrID\nValidatedDateAndID@InvalidDateOrID derive(Validation_Error = toString(\"Invalid Reporting Period / Project ID\")) ~> InvalidDateOrIDErrormessage\nRelationalAsset select(mapColumn(\n\t\tRelation_Asset_ID = Asset_ID,\n\t\tRelation_Fund_ID = Fund_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRelationalAsset\nLookupRelationAsset split(not(isNull(Relation_Asset_ID)),\n\tdisjoint: false) ~> ValidatedAsset@(ValidFundAndAsset, InvalidFundOrAsset)\nValidatedAsset@InvalidFundOrAsset derive(Validation_Error = toString(\"Invalid Fund Or Asset\")) ~> InvalidFundOrAsseterrormessage\nInvalidFundOrAsseterrormessage select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tProject_ID,\n\t\tReporting_Period,\n\t\tPrimary_Management_Activity,\n\t\tProject_Objectives,\n\t\tExpected_Value_Impact,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidFundOrAsset\nSelectValidRecord, SelectInvalidDateOrID, SelectInvalidFundOrAsset union(byName: true)~> UnionAll\nUnionAll sink(input(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tProject_ID as string,\n\t\tReporting_Period as string,\n\t\tPrimary_Management_Activity as string,\n\t\tProject_Objectives as string,\n\t\tExpected_Value_Impact as string,\n\t\tValidation_Error as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tProject_ID,\n\t\tReporting_Period,\n\t\tPrimary_Management_Activity,\n\t\tProject_Objectives,\n\t\tExpected_Value_Impact,\n\t\tValidation_Error\n\t)) ~> StagingDB"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadTxtToDBstaging_opstimbersales_df')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText_sourcelandingscrubbed_opstimbersales_ds",
								"type": "DatasetReference"
							},
							"name": "LoadFromScrubbedToStagingDB",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "SQLrelationasset_ds",
								"type": "DatasetReference"
							},
							"name": "RelationalAsset",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "SQLrelationopsspeciestype_ds",
								"type": "DatasetReference"
							},
							"name": "RelationalSpeciesType",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "SQLrelationopsproducttype_ds",
								"type": "DatasetReference"
							},
							"name": "RelationalProductType",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "SQLrelationopspricepoint_ds",
								"type": "DatasetReference"
							},
							"name": "RelationalPricePoint",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "SQLrelationopssales_unit_ds",
								"type": "DatasetReference"
							},
							"name": "RelationalSalesUnit",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLstagingopstimbersales_ds",
								"type": "DatasetReference"
							},
							"name": "StagingDB"
						}
					],
					"transformations": [
						{
							"name": "LookupRelationAsset"
						},
						{
							"name": "SelectValidRecord"
						},
						{
							"name": "ValidatedTimberSalesIDandDateandDecimal"
						},
						{
							"name": "ConvertDateAndTimberSalesID"
						},
						{
							"name": "SelectInvalidDateOrTimberSlaesIDOrNumbers"
						},
						{
							"name": "InvalidDateOrTimberSalesIDOrNumbererrormessage"
						},
						{
							"name": "SelectRelationalAsset"
						},
						{
							"name": "ValidatedAsset"
						},
						{
							"name": "InvalidFundOrAsseterrormessage"
						},
						{
							"name": "SelectInvalidFundOrAsset"
						},
						{
							"name": "UnionAll"
						},
						{
							"name": "LookupRelationalSpeciesType"
						},
						{
							"name": "SelectRelationalSpeciesType"
						},
						{
							"name": "IsValidSpeciesType"
						},
						{
							"name": "InvalidSpeciesTypeerrormessage"
						},
						{
							"name": "SelectInvalidSpeciesType"
						},
						{
							"name": "SelectRelationalProductType"
						},
						{
							"name": "SelectRelationalPricePoint"
						},
						{
							"name": "SelectRelationalSalesUnit"
						},
						{
							"name": "LookupRelationalProductType"
						},
						{
							"name": "IsValidProductType"
						},
						{
							"name": "InvalidProductTypeerrormessage"
						},
						{
							"name": "SelectInvalidProductType"
						},
						{
							"name": "LookupPricePoint"
						},
						{
							"name": "IsValidPricePoint"
						},
						{
							"name": "LookupSalesUnit"
						},
						{
							"name": "IsValidSalesUnit"
						},
						{
							"name": "InvalidPricePointerrormessage"
						},
						{
							"name": "SelectInvalidPricePoint"
						},
						{
							"name": "InvalidSaleUniterrormessage"
						},
						{
							"name": "SelectInvalidSalesUnit"
						}
					],
					"script": "source(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tTimber_Sale_ID as string,\n\t\tReporting_Period as string,\n\t\tSpecies_Code as string,\n\t\tCustomer as string,\n\t\tDomestic_Export as string,\n\t\tProduct_Type_Code as string,\n\t\tPrice_Point_Code as string,\n\t\tSales_Unit_Code as string,\n\t\tSales_Quantity as string,\n\t\tSales_Revenue as string,\n\t\tProduction_Cost as string,\n\t\tStumpage as string,\n\t\tUnit_Stumpage as string,\n\t\tCurrency_Code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> LoadFromScrubbedToStagingDB\nsource(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Asset_ID],[Fund_ID]\\nFROM [relational].[Asset]\\nWHERE record_deleted_flag = 0',\n\tformat: 'query') ~> RelationalAsset\nsource(output(\n\t\tSpecies_Code as string,\n\t\tSpecies as string,\n\t\tSpecies_Group as string,\n\t\tActive_YN as string,\n\t\tInsert_Datetime as timestamp,\n\t\tUpdate_Datetime as timestamp,\n\t\tProcess_Name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> RelationalSpeciesType\nsource(output(\n\t\tProduct_Type_Code as string,\n\t\tProduct_Type as string,\n\t\tActive_YN as string,\n\t\tInsert_Datetime as timestamp,\n\t\tUpdate_Datetime as timestamp,\n\t\tProcess_Name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> RelationalProductType\nsource(output(\n\t\tPrice_Point_Code as string,\n\t\tPrice_Point as string,\n\t\tActive_YN as string,\n\t\tInsert_Datetime as timestamp,\n\t\tUpdate_Datetime as timestamp,\n\t\tProcess_Name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> RelationalPricePoint\nsource(output(\n\t\tSales_Unit_Code as string,\n\t\tSales_Unit as string,\n\t\tActive_YN as string,\n\t\tInsert_Datetime as timestamp,\n\t\tUpdate_Datetime as timestamp,\n\t\tProcess_Name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> RelationalSalesUnit\nValidatedTimberSalesIDandDateandDecimal@ValidDateAndTimberSalesIDandNumbers, SelectRelationalAsset lookup(Asset_ID == Relation_Asset_ID\n\t&& Fund_ID == Relation_Fund_ID,\n\tmultiple: true,\n\tbroadcast: 'none')~> LookupRelationAsset\nIsValidSalesUnit@ValidSalesUnit select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tTimber_Sale_ID,\n\t\tReporting_Period,\n\t\tSpecies_Code,\n\t\tCustomer,\n\t\tDomestic_Export,\n\t\tProduct_Type_Code,\n\t\tPrice_Point_Code,\n\t\tSales_Unit_Code,\n\t\tSales_Quantity,\n\t\tSales_Revenue,\n\t\tProduction_Cost,\n\t\tStumpage,\n\t\tUnit_Stumpage,\n\t\tCurrency_Code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectValidRecord\nConvertDateAndTimberSalesID split(not(isNull(Derived_Timber_Sales_ID)) && not(isNull(Derived_Reporting_Period)) && \r\niif(not(isNull(Sales_Quantity)),not(isNull(Derived_Sales_Quantity)),true()) &&\r\niif(not(isNull(Sales_Revenue)),not(isNull(Derived_Sales_Revenue)),true()) &&\r\niif(not(isNull(Derived_Production_Cost)),not(isNull(Production_Cost)),true()) &&\r\niif(not(isNull(Stumpage)),not(isNull(Derived_Stumpage)),true()) &&\r\niif(not(isNull(Unit_Stumpage)),not(isNull(Derived_Unit_Stumpage)),true()),\n\tdisjoint: false) ~> ValidatedTimberSalesIDandDateandDecimal@(ValidDateAndTimberSalesIDandNumbers, InvalidDateOrTimberSlaesIDOrNumbers)\nLoadFromScrubbedToStagingDB derive(Derived_Reporting_Period = toDate(Reporting_Period,\"dd/MM/yyyy\"),\n\t\tDerived_Timber_Sales_ID = toInteger(Timber_Sale_ID),\n\t\tDerived_Sales_Quantity = toDecimal(Sales_Quantity, 19, 4, \"###,###.####\"),\n\t\tDerived_Sales_Revenue = toDecimal(Sales_Revenue, 19, 4, \"###,###.####\"),\n\t\tDerived_Production_Cost = toDecimal(Production_Cost, 19, 4, \"###,###.####\"),\n\t\tDerived_Stumpage = toDecimal(Stumpage, 19, 4, \"###,###.####\"),\n\t\tDerived_Unit_Stumpage = toDecimal(Unit_Stumpage, 19, 4, \"###,###.####\")) ~> ConvertDateAndTimberSalesID\nInvalidDateOrTimberSalesIDOrNumbererrormessage select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tTimber_Sale_ID,\n\t\tReporting_Period,\n\t\tSpecies_Code,\n\t\tCustomer,\n\t\tDomestic_Export,\n\t\tProduct_Type_Code,\n\t\tPrice_Point_Code,\n\t\tSales_Unit_Code,\n\t\tSales_Quantity,\n\t\tSales_Revenue,\n\t\tProduction_Cost,\n\t\tStumpage,\n\t\tUnit_Stumpage,\n\t\tCurrency_Code,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidDateOrTimberSlaesIDOrNumbers\nValidatedTimberSalesIDandDateandDecimal@InvalidDateOrTimberSlaesIDOrNumbers derive(Validation_Error = toString(\"Invalid Reporting Period  / Timber Sales ID / Sales Quantity / Sales Revenue / Production Cost / Stumpage / Unit Stumpage\")) ~> InvalidDateOrTimberSalesIDOrNumbererrormessage\nRelationalAsset select(mapColumn(\n\t\tRelation_Asset_ID = Asset_ID,\n\t\tRelation_Fund_ID = Fund_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRelationalAsset\nLookupRelationAsset split(not(isNull(Relation_Asset_ID)),\n\tdisjoint: false) ~> ValidatedAsset@(ValidFundAndAsset, InvalidFundOrAsset)\nValidatedAsset@InvalidFundOrAsset derive(Validation_Error = toString(\"Invalid Fund Or Asset\")) ~> InvalidFundOrAsseterrormessage\nInvalidFundOrAsseterrormessage select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tTimber_Sale_ID,\n\t\tReporting_Period,\n\t\tSpecies_Code,\n\t\tCustomer,\n\t\tDomestic_Export,\n\t\tProduct_Type_Code,\n\t\tPrice_Point_Code,\n\t\tSales_Unit_Code,\n\t\tSales_Quantity,\n\t\tSales_Revenue,\n\t\tProduction_Cost,\n\t\tStumpage,\n\t\tUnit_Stumpage,\n\t\tCurrency_Code,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidFundOrAsset\nSelectValidRecord, SelectInvalidDateOrTimberSlaesIDOrNumbers, SelectInvalidFundOrAsset, SelectInvalidSpeciesType, SelectInvalidProductType, SelectInvalidPricePoint, SelectInvalidSalesUnit union(byName: true)~> UnionAll\nValidatedAsset@ValidFundAndAsset, SelectRelationalSpeciesType lookup(Species_Code == Relation_Species_Code,\n\tmultiple: true,\n\tbroadcast: 'none')~> LookupRelationalSpeciesType\nRelationalSpeciesType select(mapColumn(\n\t\tRelation_Species_Code = Species_Code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRelationalSpeciesType\nLookupRelationalSpeciesType split(not(isNull(Relation_Species_Code)),\n\tdisjoint: false) ~> IsValidSpeciesType@(ValidSpeciesType, InvalidSpeciesType)\nIsValidSpeciesType@InvalidSpeciesType derive(Validation_Error = toString(\"Invalid Species Code\")) ~> InvalidSpeciesTypeerrormessage\nInvalidSpeciesTypeerrormessage select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tTimber_Sale_ID,\n\t\tReporting_Period,\n\t\tSpecies_Code,\n\t\tCustomer,\n\t\tDomestic_Export,\n\t\tProduct_Type_Code,\n\t\tPrice_Point_Code,\n\t\tSales_Unit_Code,\n\t\tSales_Quantity,\n\t\tSales_Revenue,\n\t\tProduction_Cost,\n\t\tStumpage,\n\t\tUnit_Stumpage,\n\t\tCurrency_Code,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidSpeciesType\nRelationalProductType select(mapColumn(\n\t\tRelation_Product_Type_Code = Product_Type_Code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRelationalProductType\nRelationalPricePoint select(mapColumn(\n\t\tRelation_Price_Point_Code = Price_Point_Code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRelationalPricePoint\nRelationalSalesUnit select(mapColumn(\n\t\tRelation_Sales_Unit_Code = Sales_Unit_Code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRelationalSalesUnit\nIsValidSpeciesType@ValidSpeciesType, SelectRelationalProductType lookup(Product_Type_Code == Relation_Product_Type_Code,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupRelationalProductType\nLookupRelationalProductType split(not(isNull(Relation_Product_Type_Code)),\n\tdisjoint: false) ~> IsValidProductType@(ValidProductType, InvalidProductType)\nIsValidProductType@InvalidProductType derive(Validation_Error = toString(\"Invalid Product Type\")) ~> InvalidProductTypeerrormessage\nInvalidProductTypeerrormessage select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tTimber_Sale_ID,\n\t\tReporting_Period,\n\t\tSpecies_Code,\n\t\tCustomer,\n\t\tDomestic_Export,\n\t\tProduct_Type_Code,\n\t\tPrice_Point_Code,\n\t\tSales_Unit_Code,\n\t\tSales_Quantity,\n\t\tSales_Revenue,\n\t\tProduction_Cost,\n\t\tStumpage,\n\t\tUnit_Stumpage,\n\t\tCurrency_Code,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidProductType\nIsValidProductType@ValidProductType, SelectRelationalPricePoint lookup(Price_Point_Code == Relation_Price_Point_Code,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupPricePoint\nLookupPricePoint split(not(isNull(Relation_Price_Point_Code)),\n\tdisjoint: false) ~> IsValidPricePoint@(ValidPricePoint, InvalidPricePoint)\nIsValidPricePoint@ValidPricePoint, SelectRelationalSalesUnit lookup(Sales_Unit_Code == Relation_Sales_Unit_Code,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupSalesUnit\nLookupSalesUnit split(not(isNull(Relation_Sales_Unit_Code)),\n\tdisjoint: false) ~> IsValidSalesUnit@(ValidSalesUnit, InvalidSalesUnit)\nIsValidPricePoint@InvalidPricePoint derive(Validation_Error = toString(\"Invalid Price Point\")) ~> InvalidPricePointerrormessage\nInvalidPricePointerrormessage select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tTimber_Sale_ID,\n\t\tReporting_Period,\n\t\tSpecies_Code,\n\t\tCustomer,\n\t\tDomestic_Export,\n\t\tProduct_Type_Code,\n\t\tPrice_Point_Code,\n\t\tSales_Unit_Code,\n\t\tSales_Quantity,\n\t\tSales_Revenue,\n\t\tProduction_Cost,\n\t\tStumpage,\n\t\tUnit_Stumpage,\n\t\tCurrency_Code,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidPricePoint\nIsValidSalesUnit@InvalidSalesUnit derive(Validation_Error = toString(\"Invalid Sales Unit Code\")) ~> InvalidSaleUniterrormessage\nInvalidSaleUniterrormessage select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tTimber_Sale_ID,\n\t\tReporting_Period,\n\t\tSpecies_Code,\n\t\tCustomer,\n\t\tDomestic_Export,\n\t\tProduct_Type_Code,\n\t\tPrice_Point_Code,\n\t\tSales_Unit_Code,\n\t\tSales_Quantity,\n\t\tSales_Revenue,\n\t\tProduction_Cost,\n\t\tStumpage,\n\t\tUnit_Stumpage,\n\t\tCurrency_Code,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidSalesUnit\nUnionAll sink(input(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tTimber_Sale_ID as string,\n\t\tReporting_Period as string,\n\t\tSpecies_Code as string,\n\t\tCustomer as string,\n\t\tDomestic_Export as string,\n\t\tProduct_Type_Code as string,\n\t\tPrice_Point_Code as string,\n\t\tSales_Unit_Code as string,\n\t\tSales_Quantity as string,\n\t\tSales_Revenue as string,\n\t\tProduction_Cost as string,\n\t\tStumpage as string,\n\t\tUnit_Stumpage as string,\n\t\tCurrency_Code as string,\n\t\tValidation_Error as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tTimber_Sale_ID,\n\t\tReporting_Period,\n\t\tSpecies_Code,\n\t\tCustomer,\n\t\tDomestic_Export,\n\t\tProduct_Type_Code,\n\t\tPrice_Point_Code,\n\t\tSales_Unit_Code,\n\t\tSales_Quantity,\n\t\tSales_Revenue,\n\t\tProduction_Cost,\n\t\tStumpage,\n\t\tUnit_Stumpage,\n\t\tCurrency_Code,\n\t\tValidation_Error\n\t)) ~> StagingDB"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_adjustment_n_actual_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupStagingAdjustment",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT count(*) Total_Error\n  FROM [staging].[COA_Adjustments]\n  WHERE [validation_error] IS NOT NULL"
							},
							"dataset": {
								"referenceName": "SQLstagingadjustment_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupStagingAdjustment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('LookupStagingAdjustment').output.firstRow.TOTAL_ERROR,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "LoadStagingDBtoRelationDB_adjustment_n_actual_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_adjustment_n_actual_df",
											"type": "DataFlowReference",
											"parameters": {
												"ProcessName": {
													"value": "'@{pipeline().parameters.ProcessName}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{pipeline().parameters.FileName}'",
													"type": "Expression"
												},
												"Etl_Utc_Tag": {
													"value": "'@{pipeline().parameters.Etl_Utc_Tag}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"StagingDB": {},
												"RelationDB": {},
												"RelationDBbeginningbalanceonly": {},
												"InsertRecords": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "UpdateSourceRegisterTableAbort",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
										"storedProcedureParameters": {
											"EtlUtcTag": {
												"value": {
													"value": "@pipeline().parameters.Etl_Utc_Tag",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().parameters.OriginalBlobName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQLdbConnection",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ProcessName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"Etl_Utc_Tag": {
						"type": "string"
					},
					"OriginalBlobName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_adjustment_splx')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupStagingAdjustment",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT count(*) Total_Error\n  FROM [staging].[COA_Adjustments]\n  WHERE [validation_error] IS NOT NULL"
							},
							"dataset": {
								"referenceName": "SQLstagingadjustment_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupStagingAdjustment",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('LookupStagingAdjustment').output.firstRow.TOTAL_ERROR,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "LoadStagingDBtoRelationDB_adjustment_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_adjustment_dfx",
											"type": "DataFlowReference",
											"parameters": {
												"ProcessName": {
													"value": "'@{pipeline().parameters.ProcessName}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{pipeline().parameters.FileName}'",
													"type": "Expression"
												},
												"Etl_Utc_Tag": {
													"value": "'@{pipeline().parameters.Etl_Utc_Tag}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"StagingDB": {},
												"RelationDB": {},
												"InsertUpdateRecords": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "UpdateSourceRegisterTableAbort",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
										"storedProcedureParameters": {
											"EtlUtcTag": {
												"value": {
													"value": "@pipeline().parameters.Etl_Utc_Tag",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().parameters.OriginalBlobName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQLdbConnection",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ProcessName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"Etl_Utc_Tag": {
						"type": "string"
					},
					"OriginalBlobName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_asset_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetUnprocessedBlobFromRegister",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetEtlUtcTag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [ORIGINAL_BLOB_LANDING_CONTAINER],\n\t[ORIGINAL_BLOB_NAME],\n\t[ORIGINAL_BLOP_FULLPATH],\n\t[TARGET_BLOB_LANDING_CONTAINER],\n\t[TARGET_BLOB_NAME],\n\t[DATALAKE_CONTAINER],\n\t[DATALAKE_FILE_PATH],\n\t[ORIGINAL_BLOB_ARCHIVE_CONTAINER],\n\t[ORIGINAL_BLOB_ARCHIVE_FULLPATH],\n\tCONCAT(DATALAKE_CONTAINER,'/',DATALAKE_FILE_PATH,'/',TARGET_BLOB_NAME) AS DATALAKE_FULL_PATHFILE\nFROM [log].[SOURCE_REGISTER_TABLE]\nWHERE [ETL_IS_PROCESSED] = 'N'\nAND [ORIGINAL_BLOB_NAME] LIKE 'MAS_MNL_ASSET_%'\nORDER BY [ORIGINAL_BLOB_NAME];"
							},
							"dataset": {
								"referenceName": "SQLsourceRegisterTable_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "CheckProcessArchiveBlobUpdateRegister",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetUnprocessedBlobFromRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetUnprocessedBlobFromRegister').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetBlopPath",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DelimitedText_sourcelandingraw_ds",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"itemName",
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "IsPhysicalFileExist",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetBlopPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetBlopPath').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "UpdateSourceRegisterNoFile",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbedNoFile",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterNoFile]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "DeleteFromScrubbedNoFile",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_asset_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "UpdateSourceRegisterRun",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterRun]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterPassed",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbed",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterPassed]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyScrubbedToDataLake",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_df",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingscrubbed_asset_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_datalake_financial_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "LoadTxtToDBstaging_ds",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "UpdateSourceRegisterRun",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadTxtToDBstaging_asset_df",
														"type": "DataFlowReference",
														"parameters": {},
														"datasetParameters": {
															"LoadFromScrubbedToStagingDB": {},
															"StagingDB": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "LoadStagingDBtoRelationDB_df",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "LoadTxtToDBstaging_ds",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadStagingDBtoRelationDB_asset_df",
														"type": "DataFlowReference",
														"parameters": {
															"ProcessName": {
																"value": "'@{pipeline().Pipeline}'",
																"type": "Expression"
															},
															"FileName": {
																"value": "'@{item().DATALAKE_FULL_PATHFILE}'",
																"type": "Expression"
															},
															"Etl_Utc_Tag": {
																"value": "'@{variables('Etl_Utc_Tag')}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"StagingDB": {},
															"RelationDB": {},
															"InsertUpdateRow": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_CopyToArchive",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyOriginalToArchive",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_sourcearchive_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "DeleteSourceRaw",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											},
											{
												"name": "DeleteFromScrubbed",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "DeleteSourceRaw",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_asset_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_Staging",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "LoadTxtToDBstaging_ds",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_LoadDW",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_df",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_CopyToDL",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SetEtlUtcTag",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Etl_Utc_Tag",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SendPipelineMailSuccess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "***SUCCESS***",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MAS_MNL_ASSET_%"
							}
						}
					},
					{
						"name": "SendPipelineMailFail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "!!!FAILED!!!",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MAS_MNL_ASSET_%"
							}
						}
					}
				],
				"variables": {
					"Success_Fail_Header": {
						"type": "String",
						"defaultValue": "***SUCCESS***"
					},
					"Etl_Utc_Tag": {
						"type": "String",
						"defaultValue": "2019-10-22"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_budget_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupStagingBudget",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT count(*) Total_Error\n  FROM [staging].[COA_Budgets]\n  WHERE [validation_error] IS NOT NULL"
							},
							"dataset": {
								"referenceName": "SQLstagingbudget_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupStagingBudget",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('LookupStagingBudget').output.firstRow.TOTAL_ERROR,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "LoadStagingDBtoRelationDB_budget_insert_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "LoadStagingDBtoRelationDB_budget_delete_df",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_budget_insert_df",
											"type": "DataFlowReference",
											"parameters": {
												"ProcessName": {
													"value": "'@{pipeline().parameters.ProcessName}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{pipeline().parameters.FileName}'",
													"type": "Expression"
												},
												"Etl_Utc_Tag": {
													"value": "'@{pipeline().parameters.Etl_Utc_Tag}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"StagingDB": {},
												"InsertBudget": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "LoadStagingDBtoRelationDB_budget_delete_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_budget_delete_df",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"StagingDB": {},
												"DeleteRecords": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "UpdateSourceRegisterTableAbort",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
										"storedProcedureParameters": {
											"EtlUtcTag": {
												"value": {
													"value": "@pipeline().parameters.Etl_Utc_Tag",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().parameters.OriginalBlobName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQLdbConnection",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ProcessName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"Etl_Utc_Tag": {
						"type": "string"
					},
					"OriginalBlobName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_coa_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetUnprocessedBlobFromRegister",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetEtlUtcTag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [ORIGINAL_BLOB_LANDING_CONTAINER],\n\t[ORIGINAL_BLOB_NAME],\n\t[ORIGINAL_BLOP_FULLPATH],\n\t[TARGET_BLOB_LANDING_CONTAINER],\n\t[TARGET_BLOB_NAME],\n\t[DATALAKE_CONTAINER],\n\t[DATALAKE_FILE_PATH],\n\t[ORIGINAL_BLOB_ARCHIVE_CONTAINER],\n\t[ORIGINAL_BLOB_ARCHIVE_FULLPATH],\n\tCONCAT(DATALAKE_CONTAINER,'/',DATALAKE_FILE_PATH,'/',TARGET_BLOB_NAME) AS DATALAKE_FULL_PATHFILE\nFROM [log].[SOURCE_REGISTER_TABLE]\nWHERE [ETL_IS_PROCESSED] = 'N'\nAND [ORIGINAL_BLOB_NAME] LIKE 'MAS_MNL_COA_%'\nORDER BY [ORIGINAL_BLOB_NAME];"
							},
							"dataset": {
								"referenceName": "SQLsourceRegisterTable_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "CheckProcessArchiveBlobUpdateRegister",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetUnprocessedBlobFromRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetUnprocessedBlobFromRegister').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetBlopPath",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DelimitedText_sourcelandingraw_ds",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"itemName",
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "IsPhysicalFileExist",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetBlopPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetBlopPath').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "UpdateSourceRegisterNoFile",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbedNoFile",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterNoFile]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "DeleteFromScrubbedNoFile",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_coa_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "UpdateSourceRegisterRun",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterRun]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterPassed",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbed",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterPassed]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyScrubbedToDataLake",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_coa_df",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingscrubbed_coa_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_datalake_financial_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_CopyToArchive",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyOriginalToArchive",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_sourcearchive_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "DeleteSourceRaw",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											},
											{
												"name": "DeleteFromScrubbed",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "DeleteSourceRaw",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_coa_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											},
											{
												"name": "LoadTxtToDBstaging_coa_df",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "UpdateSourceRegisterRun",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadTxtToDBstaging_coa_df",
														"type": "DataFlowReference",
														"parameters": {},
														"datasetParameters": {
															"LoadFromScrubbedToStagingDB": {},
															"StagingDB": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "LoadStagingDBtoRelationDB_coa_df",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "LoadTxtToDBstaging_coa_df",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadStagingDBtoRelationDB_coa_df",
														"type": "DataFlowReference",
														"parameters": {
															"ProcessName": {
																"value": "'@{pipeline().Pipeline}'",
																"type": "Expression"
															},
															"FileName": {
																"value": "'@{item().DATALAKE_FULL_PATHFILE}'",
																"type": "Expression"
															},
															"Etl_Utc_Tag": {
																"value": "'@{variables('Etl_Utc_Tag')}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"StagingDB": {},
															"RelationDB": {},
															"InsertUpdateRow": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_Staging",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "LoadTxtToDBstaging_coa_df",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_LoadDW",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_coa_df",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_CopyToDL",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SetEtlUtcTag",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Etl_Utc_Tag",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SendPipelineMailSuccess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "***SUCCESS***",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MAS_MNL_COA_%"
							}
						}
					},
					{
						"name": "SendPipelineMailFail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "!!!FAILED!!!",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MAS_MNL_COA_%"
							}
						}
					}
				],
				"variables": {
					"Success_Fail_Header": {
						"type": "String",
						"defaultValue": "***SUCCESS***"
					},
					"Etl_Utc_Tag": {
						"type": "String",
						"defaultValue": "2999-12-31"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_coa_trx_common_old_plx')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetUnprocessedBlobFromRegister",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetEtlUtcTag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [ORIGINAL_BLOB_LANDING_CONTAINER],\n\t[ORIGINAL_BLOB_NAME],\n\t[ORIGINAL_BLOP_FULLPATH],\n\t[TARGET_BLOB_LANDING_CONTAINER],\n\t[TARGET_BLOB_NAME],\n\t[DATALAKE_CONTAINER],\n\t[DATALAKE_FILE_PATH],\n\t[ORIGINAL_BLOB_ARCHIVE_CONTAINER],\n\t[ORIGINAL_BLOB_ARCHIVE_FULLPATH],\n\tCONCAT(DATALAKE_CONTAINER,'/',DATALAKE_FILE_PATH,'/',TARGET_BLOB_NAME) AS DATALAKE_FULL_PATHFILE\nFROM [log].[SOURCE_REGISTER_TABLE]\nWHERE [ETL_IS_PROCESSED] = 'N'\nAND [ORIGINAL_BLOB_NAME] LIKE 'MYO_%'\nORDER BY [ORIGINAL_BLOB_NAME];"
							},
							"dataset": {
								"referenceName": "SQLsourceRegisterTable_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "CheckProcessArchiveBlobUpdateRegister",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetUnprocessedBlobFromRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetUnprocessedBlobFromRegister').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetBlopPath",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DelimitedText_sourcelandingraw_ds",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"itemName",
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "IsPhysicalFileExist",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetBlopPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetBlopPath').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "UpdateSourceRegisterNoFile",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbedNoFile",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterNoFile]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "DeleteFromScrubbedNoFile",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_coa_trx_common_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "UpdateSourceRegisterRun",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterRun]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterPassed",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbed",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterPassed]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyScrubbedToDataLake",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_df",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingscrubbed_coa_trx_common_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_datalake_financial_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "LoadTxtToDBstaging_ds",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "UpdateSourceRegisterRun",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadTxtToDBstaging_coa_trx_common_old_dfx",
														"type": "DataFlowReference",
														"parameters": {},
														"datasetParameters": {
															"LoadFromScrubbedToStagingDB": {},
															"StagingDB": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "LoadStagingDBtoRelationDB_df",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "LoadTxtToDBstaging_ds",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadStagingDBtoRelationDB_coa_trx_common_old_dfx",
														"type": "DataFlowReference",
														"parameters": {
															"ProcessName": {
																"value": "'@{pipeline().Pipeline}'",
																"type": "Expression"
															},
															"FileName": {
																"value": "'@{item().DATALAKE_FULL_PATHFILE}'",
																"type": "Expression"
															},
															"Etl_Utc_Tag": {
																"value": "'@{variables('Etl_Utc_Tag')}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"StagingDB": {},
															"RelationDB": {},
															"RelationDBbeginningbalanceonly": {},
															"InsertRow": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_df",
														"dependencyConditions": [
															"Failed"
														]
													},
													{
														"activity": "LoadTxtToDBstaging_ds",
														"dependencyConditions": [
															"Failed"
														]
													},
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Failed"
														]
													},
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyOriginalToArchive",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_sourcearchive_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "DeleteSourceRaw",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											},
											{
												"name": "DeleteFromScrubbed",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "DeleteSourceRaw",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_coa_trx_common_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SetEtlUtcTag",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Etl_Utc_Tag",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SendPipelineMailSuccess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "***SUCCESS***",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MYO_%"
							}
						}
					},
					{
						"name": "SendPipelineMailFail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "!!!FAILED!!!",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MYO_%"
							}
						}
					}
				],
				"variables": {
					"Success_Fail_Header": {
						"type": "String",
						"defaultValue": "***SUCCESS***"
					},
					"Etl_Utc_Tag": {
						"type": "String",
						"defaultValue": "2999-12-31"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_fctrefasset_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupStagingForecastReference",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT count(*) Total_Error\n  FROM staging.Forecast_Asset_reference\n  WHERE Validation_Error IS NOT NULL"
							},
							"dataset": {
								"referenceName": "SQLstagingfctrefasset_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupStagingForecastReference",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('LookupStagingForecastReference').output.firstRow.TOTAL_ERROR,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "LoadStagingDBtoRelationDB_fctrefasset_Insert_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "LoadStagingDBtoRelationDB_fctrefasset_delete_df",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_fctrefasset_insert_df",
											"type": "DataFlowReference",
											"parameters": {
												"ProcessName": {
													"value": "'@{pipeline().parameters.ProcessName}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{pipeline().parameters.FileName}'",
													"type": "Expression"
												},
												"Etl_Utc_Tag": {
													"value": "'@{pipeline().parameters.Etl_Utc_Tag}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"StagingDB": {},
												"InsertRecords": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "LoadStagingDBtoRelationDB_fctrefasset_delete_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_fctrefasset_delete_df",
											"type": "DataFlowReference",
											"parameters": {
												"ProcessName": {
													"value": "'@{pipeline().parameters.ProcessName}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{pipeline().parameters.FileName}'",
													"type": "Expression"
												},
												"Etl_Utc_Tag": {
													"value": "'@{pipeline().parameters.Etl_Utc_Tag}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"StagingDB": {},
												"DeleteRecords": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "UpdateSourceRegisterTableAbort",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
										"storedProcedureParameters": {
											"EtlUtcTag": {
												"value": {
													"value": "@pipeline().parameters.Etl_Utc_Tag",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().parameters.OriginalBlobName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQLdbConnection",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ProcessName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"Etl_Utc_Tag": {
						"type": "string"
					},
					"OriginalBlobName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_forex_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetUnprocessedBlobFromRegister",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetEtlUtcTag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [ORIGINAL_BLOB_LANDING_CONTAINER],\n\t[ORIGINAL_BLOB_NAME],\n\t[ORIGINAL_BLOP_FULLPATH],\n\t[TARGET_BLOB_LANDING_CONTAINER],\n\t[TARGET_BLOB_NAME],\n\t[DATALAKE_CONTAINER],\n\t[DATALAKE_FILE_PATH],\n\t[ORIGINAL_BLOB_ARCHIVE_CONTAINER],\n\t[ORIGINAL_BLOB_ARCHIVE_FULLPATH],\n\tCONCAT(DATALAKE_CONTAINER,'/',DATALAKE_FILE_PATH,'/',TARGET_BLOB_NAME) AS DATALAKE_FULL_PATHFILE\nFROM [log].[SOURCE_REGISTER_TABLE]\nWHERE [ETL_IS_PROCESSED] = 'N'\nAND [ORIGINAL_BLOB_NAME] LIKE 'MAS_MNL_FX_%'\nORDER BY [ORIGINAL_BLOB_NAME];"
							},
							"dataset": {
								"referenceName": "SQLsourceRegisterTable_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "CheckProcessArchiveBlobUpdateRegister",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetUnprocessedBlobFromRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetUnprocessedBlobFromRegister').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetBlopPath",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DelimitedText_sourcelandingraw_ds",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"itemName",
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "IsPhysicalFileExist",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetBlopPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetBlopPath').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "UpdateSourceRegisterNoFile",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbedNoFile",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterNoFile]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "DeleteFromScrubbedNoFile",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_forex_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "UpdateSourceRegisterRun",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterRun]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterPassed",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbed",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterPassed]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyScrubbedToDataLake",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_df",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingscrubbed_forex_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_datalake_financial_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "LoadTxtToDBstaging_ds",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "UpdateSourceRegisterRun",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadTxtToDBstaging_forex_df",
														"type": "DataFlowReference",
														"parameters": {},
														"datasetParameters": {
															"LoadFromScrubbedToStagingDB": {},
															"StagingDB": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "LoadStagingDBtoRelationDB_df",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "LoadTxtToDBstaging_ds",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadStagingDBtoRelationDB_forex_df",
														"type": "DataFlowReference",
														"parameters": {
															"ProcessName": {
																"value": "'@{pipeline().Pipeline}'",
																"type": "Expression"
															},
															"FileName": {
																"value": "'@{item().DATALAKE_FULL_PATHFILE}'",
																"type": "Expression"
															},
															"Etl_Utc_Tag": {
																"value": "'@{variables('Etl_Utc_Tag')}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"StagingDB": {},
															"RelationDB": {},
															"InsertUpdateRow": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_CopyToArchive",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyOriginalToArchive",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_sourcearchive_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "DeleteSourceRaw",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											},
											{
												"name": "DeleteFromScrubbed",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "DeleteSourceRaw",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_forex_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_Staging",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "LoadTxtToDBstaging_ds",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_LoadDW",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_df",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_CopyToDL",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SetEtlUtcTag",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Etl_Utc_Tag",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SendPipelineMailSuccess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "***SUCCESS***",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MAS_MNL_FX_%"
							}
						}
					},
					{
						"name": "SendPipelineMailFail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "!!!FAILED!!!",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MAS_MNL_FX_%"
							}
						}
					}
				],
				"variables": {
					"Success_Fail_Header": {
						"type": "String",
						"defaultValue": "***SUCCESS***"
					},
					"Etl_Utc_Tag": {
						"type": "String",
						"defaultValue": "2019-10-22"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_fund_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetUnprocessedBlobFromRegister",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetEtlUtcTag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [ORIGINAL_BLOB_LANDING_CONTAINER],\n\t[ORIGINAL_BLOB_NAME],\n\t[ORIGINAL_BLOP_FULLPATH],\n\t[TARGET_BLOB_LANDING_CONTAINER],\n\t[TARGET_BLOB_NAME],\n\t[DATALAKE_CONTAINER],\n\t[DATALAKE_FILE_PATH],\n\t[ORIGINAL_BLOB_ARCHIVE_CONTAINER],\n\t[ORIGINAL_BLOB_ARCHIVE_FULLPATH],\n\tCONCAT(DATALAKE_CONTAINER,'/',DATALAKE_FILE_PATH,'/',TARGET_BLOB_NAME) AS DATALAKE_FULL_PATHFILE\nFROM [log].[SOURCE_REGISTER_TABLE]\nWHERE [ETL_IS_PROCESSED] = 'N'\nAND [ORIGINAL_BLOB_NAME] LIKE 'MAS_MNL_FUND_%'\nORDER BY [ORIGINAL_BLOB_NAME];"
							},
							"dataset": {
								"referenceName": "SQLsourceRegisterTable_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "CheckProcessArchiveBlobUpdateRegister",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetUnprocessedBlobFromRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetUnprocessedBlobFromRegister').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetBlopPath",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DelimitedText_sourcelandingraw_ds",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"itemName",
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "IsPhysicalFileExist",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetBlopPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetBlopPath').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "UpdateSourceRegisterNoFile",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbedNoFile",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterNoFile]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "DeleteFromScrubbedNoFile",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_fund_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "UpdateSourceRegisterRun",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterRun]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterPassed",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbed",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterPassed]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyScrubbedToDataLake",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_df",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingscrubbed_fund_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_datalake_financial_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "LoadTxtToDBstaging_ds",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "UpdateSourceRegisterRun",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadTxtToDBstaging_fund_df",
														"type": "DataFlowReference",
														"parameters": {},
														"datasetParameters": {
															"LoadFromScrubbedToStagingDB": {},
															"StagingDB": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "LoadStagingDBtoRelationDB_df",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "LoadTxtToDBstaging_ds",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadStagingDBtoRelationDB_fund_df",
														"type": "DataFlowReference",
														"parameters": {
															"ProcessName": {
																"value": "'@{pipeline().Pipeline}'",
																"type": "Expression"
															},
															"FileName": {
																"value": "'@{item().DATALAKE_FULL_PATHFILE}'",
																"type": "Expression"
															},
															"Etl_Utc_Tag": {
																"value": "'@{variables('Etl_Utc_Tag')}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"StagingDB": {},
															"RelationDB": {},
															"InsertUpdateRow": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_CopyToArchive",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyOriginalToArchive",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_sourcearchive_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "DeleteSourceRaw",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											},
											{
												"name": "DeleteFromScrubbed",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "DeleteSourceRaw",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_fund_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_Staging",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "LoadTxtToDBstaging_ds",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_LoadDW",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_df",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_CopyToDL",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SetEtlUtcTag",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Etl_Utc_Tag",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SendPipelineMailSuccess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "***SUCCESS***",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MAS_MNL_FUND_%"
							}
						}
					},
					{
						"name": "SendPipelineMailFail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "!!!FAILED!!!",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MAS_MNL_FUND_%"
							}
						}
					}
				],
				"variables": {
					"Success_Fail_Header": {
						"type": "String",
						"defaultValue": "***SUCCESS***"
					},
					"Etl_Utc_Tag": {
						"type": "String",
						"defaultValue": "2999-12-31"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_glallocate_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetUnprocessedBlobFromRegister",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetEtlUtcTag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [ORIGINAL_BLOB_LANDING_CONTAINER],\n\t[ORIGINAL_BLOB_NAME],\n\t[ORIGINAL_BLOP_FULLPATH],\n\t[TARGET_BLOB_LANDING_CONTAINER],\n\t[TARGET_BLOB_NAME],\n\t[DATALAKE_CONTAINER],\n\t[DATALAKE_FILE_PATH],\n\t[ORIGINAL_BLOB_ARCHIVE_CONTAINER],\n\t[ORIGINAL_BLOB_ARCHIVE_FULLPATH],\n\tCONCAT(DATALAKE_CONTAINER,'/',DATALAKE_FILE_PATH,'/',TARGET_BLOB_NAME) AS DATALAKE_FULL_PATHFILE\nFROM [log].[SOURCE_REGISTER_TABLE]\nWHERE [ETL_IS_PROCESSED] = 'N'\nAND [ORIGINAL_BLOB_NAME] LIKE 'MAS_MNL_GLALLOCATE_%'\nORDER BY [ORIGINAL_BLOB_NAME];"
							},
							"dataset": {
								"referenceName": "SQLsourceRegisterTable_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "CheckProcessArchiveBlobUpdateRegister",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetUnprocessedBlobFromRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetUnprocessedBlobFromRegister').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetBlopPath",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DelimitedText_sourcelandingraw_ds",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"itemName",
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "IsPhysicalFileExist",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetBlopPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetBlopPath').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "UpdateSourceRegisterNoFile",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbedNoFile",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterNoFile]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "DeleteFromScrubbedNoFile",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_glallocate_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "UpdateSourceRegisterRun",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterRun]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterPassed",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbed",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterPassed]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyScrubbedToDataLake",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_df",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingscrubbed_glallocate_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_datalake_financial_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "LoadTxtToDBstaging_ds",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "UpdateSourceRegisterRun",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadTxtToDBstaging_glallocate_df",
														"type": "DataFlowReference",
														"parameters": {},
														"datasetParameters": {
															"LoadFromScrubbedToStagingDB": {},
															"StagingDB": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "LoadStagingDBtoRelationDB_df",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "LoadTxtToDBstaging_ds",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadStagingDBtoRelationDB_glallocate_df",
														"type": "DataFlowReference",
														"parameters": {
															"ProcessName": {
																"value": "'@{pipeline().Pipeline}'",
																"type": "Expression"
															},
															"FileName": {
																"value": "'@{item().DATALAKE_FULL_PATHFILE}'",
																"type": "Expression"
															},
															"Etl_Utc_Tag": {
																"value": "'@{variables('Etl_Utc_Tag')}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"StagingDB": {},
															"RelationDB": {},
															"InsertUpdateRow": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_CopyToArchive",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyOriginalToArchive",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_sourcearchive_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "DeleteSourceRaw",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											},
											{
												"name": "DeleteFromScrubbed",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "DeleteSourceRaw",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_glallocate_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_Staging",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "LoadTxtToDBstaging_ds",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_LoadDW",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_df",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_CopyToDL",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SetEtlUtcTag",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Etl_Utc_Tag",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SendPipelineMailSuccess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "***SUCCESS***",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MAS_MNL_GLALLOCATE_%"
							}
						}
					},
					{
						"name": "SendPipelineMailFail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "!!!FAILED!!!",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MAS_MNL_GLALLOCATE_%"
							}
						}
					}
				],
				"variables": {
					"Success_Fail_Header": {
						"type": "String",
						"defaultValue": "***SUCCESS***"
					},
					"Etl_Utc_Tag": {
						"type": "String",
						"defaultValue": "2019-10-22"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_glproduct_pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetUnprocessedBlobFromRegister",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetEtlUtcTag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [ORIGINAL_BLOB_LANDING_CONTAINER],\n\t[ORIGINAL_BLOB_NAME],\n\t[ORIGINAL_BLOP_FULLPATH],\n\t[TARGET_BLOB_LANDING_CONTAINER],\n\t[TARGET_BLOB_NAME],\n\t[DATALAKE_CONTAINER],\n\t[DATALAKE_FILE_PATH],\n\t[ORIGINAL_BLOB_ARCHIVE_CONTAINER],\n\t[ORIGINAL_BLOB_ARCHIVE_FULLPATH],\n\tCONCAT(DATALAKE_CONTAINER,'/',DATALAKE_FILE_PATH,'/',TARGET_BLOB_NAME) AS DATALAKE_FULL_PATHFILE\nFROM [log].[SOURCE_REGISTER_TABLE]\nWHERE [ETL_IS_PROCESSED] = 'N'\nAND [ORIGINAL_BLOB_NAME] LIKE 'MAS_MNL_GLPRODUCT_%'\nORDER BY [ORIGINAL_BLOB_NAME];"
							},
							"dataset": {
								"referenceName": "SQLsourceRegisterTable_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "CheckProcessArchiveBlobUpdateRegister",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetUnprocessedBlobFromRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetUnprocessedBlobFromRegister').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "GetBlopPath",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DelimitedText_sourcelandingraw_ds",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"itemName",
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "IsPhysicalFileExist",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetBlopPath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetBlopPath').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "UpdateSourceRegisterNoFile",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbedNoFile",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterNoFile]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "DeleteFromScrubbedNoFile",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_glproduct_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "UpdateSourceRegisterRun",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterRun]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														},
														"JobName": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterPassed",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeleteFromScrubbed",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterPassed]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyScrubbedToDataLake",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_df",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingscrubbed_glproduct_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_datalake_financial_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "LoadTxtToDBstaging_ds",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "UpdateSourceRegisterRun",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadTxtToDBstaging_glproduct_df",
														"type": "DataFlowReference",
														"parameters": {},
														"datasetParameters": {
															"LoadFromScrubbedToStagingDB": {},
															"StagingDB": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "LoadStagingDBtoRelationDB_df",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "LoadTxtToDBstaging_ds",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "LoadStagingDBtoRelationDB_glproduct_df",
														"type": "DataFlowReference",
														"parameters": {
															"ProcessName": {
																"value": "'@{pipeline().Pipeline}'",
																"type": "Expression"
															},
															"FileName": {
																"value": "'@{item().DATALAKE_FULL_PATHFILE}'",
																"type": "Expression"
															},
															"Etl_Utc_Tag": {
																"value": "'@{variables('Etl_Utc_Tag')}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"StagingDB": {},
															"RelationDB": {},
															"InsertUpdateRow": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													}
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_CopyToArchive",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "CopyOriginalToArchive",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": false,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText_sourcearchive_ds",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "DeleteSourceRaw",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "CopyOriginalToArchive",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingraw_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											},
											{
												"name": "DeleteFromScrubbed",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "DeleteSourceRaw",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DelimitedText_sourcelandingscrubbed_glproduct_ds",
														"type": "DatasetReference",
														"parameters": {}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": false
													}
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_Staging",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "LoadTxtToDBstaging_ds",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_LoadDW",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "LoadStagingDBtoRelationDB_df",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "UpdateSourceRegisterFailedAbort_CopyToDL",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "CopyScrubbedToDataLake",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
													"storedProcedureParameters": {
														"EtlUtcTag": {
															"value": {
																"value": "@variables('Etl_Utc_Tag')",
																"type": "Expression"
															},
															"type": "String"
														},
														"FileName": {
															"value": {
																"value": "@{item().ORIGINAL_BLOB_NAME}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "SQLdbConnection",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "SetEtlUtcTag",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Etl_Utc_Tag",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SendPipelineMailSuccess",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "***SUCCESS***",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MAS_MNL_GLPRODUCT_%"
							}
						}
					},
					{
						"name": "SendPipelineMailFail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CheckProcessArchiveBlobUpdateRegister",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PipelineSendMail_pl",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Parent_DataFactory": {
									"value": "@pipeline().DataFactory",
									"type": "Expression"
								},
								"Parent_Pipeline": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Success_Fail_Header": "!!!FAILED!!!",
								"Etl_Utc_Tag": {
									"value": "@variables('Etl_Utc_Tag')",
									"type": "Expression"
								},
								"File_Pattern": "MAS_MNL_GLPRODUCT_%"
							}
						}
					}
				],
				"variables": {
					"Success_Fail_Header": {
						"type": "String",
						"defaultValue": "***SUCCESS***"
					},
					"Etl_Utc_Tag": {
						"type": "String",
						"defaultValue": "2019-10-22"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_myob_actuals_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupStagingMyob",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT count(*) Total_Error\n  FROM [staging].[Myob_Actuals]\n  WHERE [validation_error] IS NOT NULL"
							},
							"dataset": {
								"referenceName": "SQLstagingmyobactuals_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupStagingMyob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('LookupStagingMyob').output.firstRow.TOTAL_ERROR,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "LoadStagingDBtoRelationDB_myob_actuals_Insert_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "LoadStagingDBtoRelationDB_myob_actuals_delete_df",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_myob_actuals_insert_df",
											"type": "DataFlowReference",
											"parameters": {
												"ProcessName": {
													"value": "'@{pipeline().parameters.ProcessName}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{pipeline().parameters.FileName}'",
													"type": "Expression"
												},
												"Etl_Utc_Tag": {
													"value": "'@{pipeline().parameters.Etl_Utc_Tag}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"StagingDB": {},
												"InsertRecords": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "LoadStagingDBtoRelationDB_myob_actuals_delete_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_myob_actuals_delete_df",
											"type": "DataFlowReference",
											"parameters": {
												"ProcessName": {
													"value": "'@{pipeline().parameters.ProcessName}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{pipeline().parameters.FileName}'",
													"type": "Expression"
												},
												"Etl_Utc_Tag": {
													"value": "'@{pipeline().parameters.Etl_Utc_Tag}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"StagingDB": {},
												"DeleteRecords": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "UpdateSourceRegister_FailedAbort_Delete",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LoadStagingDBtoRelationDB_myob_actuals_delete_df",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
										"storedProcedureParameters": {
											"EtlUtcTag": {
												"value": {
													"value": "@pipeline().parameters.Etl_Utc_Tag",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().parameters.FileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQLdbConnection",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "UpdateSourceRegister_FailedAbort_Insert",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LoadStagingDBtoRelationDB_myob_actuals_Insert_df",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
										"storedProcedureParameters": {
											"EtlUtcTag": {
												"value": {
													"value": "@pipeline().parameters.Etl_Utc_Tag",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().parameters.FileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQLdbConnection",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "UpdateSourceRegisterTableAbort",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
										"storedProcedureParameters": {
											"EtlUtcTag": {
												"value": {
													"value": "@pipeline().parameters.Etl_Utc_Tag",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().parameters.OriginalBlobName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQLdbConnection",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ProcessName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"Etl_Utc_Tag": {
						"type": "string"
					},
					"OriginalBlobName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_opsanswers_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupStagingOpsAnswers",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT count(*) Total_Error\n  FROM [staging].[OPS_Answers]\n  WHERE [Validation_Error] IS NOT NULL"
							},
							"dataset": {
								"referenceName": "SQLstagingopsanswers_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupStagingOpsAnswers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('LookupStagingOpsAnswers').output.firstRow.TOTAL_ERROR,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "LoadStagingDBtoRelationDB_opsanswers_delete_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_opsanswers_delete_df",
											"type": "DataFlowReference",
											"parameters": {
												"ProcessName": {
													"value": "'@{pipeline().parameters.ProcessName}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{pipeline().parameters.FileName}'",
													"type": "Expression"
												},
												"Etl_Utc_Tag": {
													"value": "'@{pipeline().parameters.Etl_Utc_Tag}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"StagingDB": {},
												"DeleteRecords": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								},
								{
									"name": "LoadStagingDBtoRelationDB_opsanswers_insert_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "LoadStagingDBtoRelationDB_opsanswers_delete_df",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_opsanswers_insert_df",
											"type": "DataFlowReference",
											"parameters": {
												"ProcessName": {
													"value": "'@{pipeline().parameters.ProcessName}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{pipeline().parameters.FileName}'",
													"type": "Expression"
												},
												"Etl_Utc_Tag": {
													"value": "'@{pipeline().parameters.Etl_Utc_Tag}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"StagingDB": {},
												"InsertRecords": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "UpdateSourceRegisterTableAbort",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
										"storedProcedureParameters": {
											"EtlUtcTag": {
												"value": {
													"value": "@pipeline().parameters.Etl_Utc_Tag",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().parameters.OriginalBlobName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQLdbConnection",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ProcessName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"Etl_Utc_Tag": {
						"type": "string"
					},
					"OriginalBlobName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_opsaudit_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupStagingOpsIncident",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT count(*) Total_Error\n  FROM [staging].[OPS_Audit]\n  WHERE [Validation_Error] IS NOT NULL"
							},
							"dataset": {
								"referenceName": "SQLstagingopsaudit_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupStagingOpsIncident",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('LookupStagingOpsIncident').output.firstRow.TOTAL_ERROR,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "LoadStagingDBtoRelationDB_opsaudit_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_opsaudit_df",
											"type": "DataFlowReference",
											"parameters": {
												"ProcessName": {
													"value": "'@{pipeline().parameters.ProcessName}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{pipeline().parameters.FileName}'",
													"type": "Expression"
												},
												"Etl_Utc_Tag": {
													"value": "'@{pipeline().parameters.Etl_Utc_Tag}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"StagingDB": {},
												"RelationalAudit": {},
												"UpserttRow": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "UpdateSourceRegisterTableAbort",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
										"storedProcedureParameters": {
											"EtlUtcTag": {
												"value": {
													"value": "@pipeline().parameters.Etl_Utc_Tag",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().parameters.OriginalBlobName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQLdbConnection",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ProcessName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"Etl_Utc_Tag": {
						"type": "string"
					},
					"OriginalBlobName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_opscertification_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupStagingOpsIncident",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT count(*) Total_Error\n  FROM [staging].[OPS_Certification]\n  WHERE [Validation_Error] IS NOT NULL"
							},
							"dataset": {
								"referenceName": "SQLstagingopscertification_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupStagingOpsIncident",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('LookupStagingOpsIncident').output.firstRow.TOTAL_ERROR,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "LoadStagingDBtoRelationDB_opscertification_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_opscertification_df",
											"type": "DataFlowReference",
											"parameters": {
												"ProcessName": {
													"value": "'@{pipeline().parameters.ProcessName}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{pipeline().parameters.FileName}'",
													"type": "Expression"
												},
												"Etl_Utc_Tag": {
													"value": "'@{pipeline().parameters.Etl_Utc_Tag}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"StagingDB": {},
												"RelationalCertification": {},
												"UpserttRow": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "UpdateSourceRegisterTableAbort",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
										"storedProcedureParameters": {
											"EtlUtcTag": {
												"value": {
													"value": "@pipeline().parameters.Etl_Utc_Tag",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().parameters.OriginalBlobName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQLdbConnection",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ProcessName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"Etl_Utc_Tag": {
						"type": "string"
					},
					"OriginalBlobName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_opscontract_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupStagingOpsIncident",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT count(*) Total_Error\n  FROM [staging].[OPS_Contract]\n  WHERE [Validation_Error] IS NOT NULL"
							},
							"dataset": {
								"referenceName": "SQLstagingopscontract_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupStagingOpsIncident",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('LookupStagingOpsIncident').output.firstRow.TOTAL_ERROR,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "LoadStagingDBtoRelationDB_opscontract_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_opscontract_df",
											"type": "DataFlowReference",
											"parameters": {
												"ProcessName": {
													"value": "'@{pipeline().parameters.ProcessName}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{pipeline().parameters.FileName}'",
													"type": "Expression"
												},
												"Etl_Utc_Tag": {
													"value": "'@{pipeline().parameters.Etl_Utc_Tag}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"StagingDB": {},
												"RelationalContract": {},
												"UpserttRow": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "UpdateSourceRegisterTableAbort",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
										"storedProcedureParameters": {
											"EtlUtcTag": {
												"value": {
													"value": "@pipeline().parameters.Etl_Utc_Tag",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().parameters.OriginalBlobName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQLdbConnection",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ProcessName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"Etl_Utc_Tag": {
						"type": "string"
					},
					"OriginalBlobName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessSourceBlob_opsharvestrecon_spl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupStagingOpsIncident",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT count(*) Total_Error\n  FROM [staging].[OPS_Harvest_Reconciliation]\n  WHERE [Validation_Error] IS NOT NULL"
							},
							"dataset": {
								"referenceName": "SQLstagingopsharvestrecon_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupStagingOpsIncident",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('LookupStagingOpsIncident').output.firstRow.TOTAL_ERROR,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "LoadStagingDBtoRelationDB_opsharvestrecon_df",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "LoadStagingDBtoRelationDB_opsharvestrecon_df",
											"type": "DataFlowReference",
											"parameters": {
												"ProcessName": {
													"value": "'@{pipeline().parameters.ProcessName}'",
													"type": "Expression"
												},
												"FileName": {
													"value": "'@{pipeline().parameters.FileName}'",
													"type": "Expression"
												},
												"Etl_Utc_Tag": {
													"value": "'@{pipeline().parameters.Etl_Utc_Tag}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"StagingDB": {},
												"RelationalHarvestReconciliation": {},
												"UpserttRow": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "UpdateSourceRegisterTableAbort",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[log].[UpdateSourceRegisterFailedAbort]",
										"storedProcedureParameters": {
											"EtlUtcTag": {
												"value": {
													"value": "@pipeline().parameters.Etl_Utc_Tag",
													"type": "Expression"
												},
												"type": "String"
											},
											"FileName": {
												"value": {
													"value": "@pipeline().parameters.OriginalBlobName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQLdbConnection",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ProcessName": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					},
					"Etl_Utc_Tag": {
						"type": "string"
					},
					"OriginalBlobName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}