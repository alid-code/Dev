{
	"name": "LoadTxtToDBstaging_adjustment_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText_sourcelandingscrubbed_adjustment_ds",
						"type": "DatasetReference"
					},
					"name": "LoadFromScrubbedToStagingDB"
				},
				{
					"dataset": {
						"referenceName": "SQLrelationasset_ds",
						"type": "DatasetReference"
					},
					"name": "GetAssetMaster"
				},
				{
					"dataset": {
						"referenceName": "SQLrelationcoa_ds",
						"type": "DatasetReference"
					},
					"name": "GetGLCodes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQLstagingadjustment_ds",
						"type": "DatasetReference"
					},
					"name": "StagingDB"
				}
			],
			"transformations": [
				{
					"name": "SelectSourceColumns"
				},
				{
					"name": "SetDerivations"
				},
				{
					"name": "SelectForTarget"
				},
				{
					"name": "LookupFundAndAsset"
				},
				{
					"name": "SelectFundColumns"
				},
				{
					"name": "LookupGLcode"
				},
				{
					"name": "SelectCOAcolumns"
				},
				{
					"name": "ConditionalSplitGLvsCF"
				},
				{
					"name": "ConditionalSplitValidVsInvalidFundAsset"
				}
			],
			"script": "\n\nsource(output(\n\t\tDate as string,\n\t\tTransaction_Code as string,\n\t\tCashflow_Code as string,\n\t\tFund_ID as string,\n\t\tAsset_ID as string,\n\t\tTrx_Type as string,\n\t\tGL_Code as string,\n\t\tGL_Description as string,\n\t\tAmount as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> LoadFromScrubbedToStagingDB\nsource(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [Asset_ID]\\n      ,[Fund_ID]\\n  FROM [relational].[Asset]\\n  WHERE [record_deleted_flag] = 0',\n\tformat: 'query') ~> GetAssetMaster\nsource(output(\n\t\tGL_Code as string,\n\t\tCategory as string,\n\t\tCash_Flow_Code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [GL_Code]\\n      ,[Category]\\n      ,[Cash_Flow_Code]\\n  FROM [relational].[Chart_of_Account]\\n  WHERE [record_deleted_flag] = 0',\n\tformat: 'query') ~> GetGLCodes\nLoadFromScrubbedToStagingDB select(mapColumn(\n\t\tDate,\n\t\tTransaction_Code,\n\t\tCashflow_Code,\n\t\tFund_ID,\n\t\tAsset_ID,\n\t\tTrx_Type,\n\t\tGL_Code,\n\t\tGL_Description,\n\t\tAmount\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectSourceColumns\nLookupGLcode derive(Debit_Credit = case(greaterOrEqual(toDecimal(Amount),0),'DR','CR'),\n\t\tTrx_Amount = toDecimal(Amount),\n\t\tDate = toTimestamp(Date,'dd/MM/yyyy')) ~> SetDerivations\nSetDerivations select(mapColumn(\n\t\tDate,\n\t\tTransaction_Code,\n\t\tCashflow_Code,\n\t\tFund_ID = Relation_Fund_ID,\n\t\tAsset_ID = Relation_Asset_ID,\n\t\tTrx_Type,\n\t\tGL_Code = SelectSourceColumns@GL_Code,\n\t\tGL_Description,\n\t\tAmount,\n\t\tDebit_Credit,\n\t\tTrx_Amount\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectForTarget\nSelectSourceColumns, SelectFundColumns lookup(Asset_ID == Relation_Asset_ID\n\t&& Fund_ID == Relation_Fund_ID,\n\tbroadcast: 'none')~> LookupFundAndAsset\nGetAssetMaster select(mapColumn(\n\t\tRelation_Asset_ID = Asset_ID,\n\t\tRelation_Fund_ID = Fund_ID\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectFundColumns\nConditionalSplitGLvsCF@GLcodeAvailable, SelectCOAcolumns lookup(SelectSourceColumns@GL_Code == Relation_GL_Code,\n\tbroadcast: 'none')~> LookupGLcode\nGetGLCodes select(mapColumn(\n\t\tRelation_GL_Code = GL_Code,\n\t\tRelation_Category = Category,\n\t\tRelation_Cash_Flow_Code = Cash_Flow_Code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCOAcolumns\nConditionalSplitValidVsInvalidFundAsset@ValidFundAsset split(not(isNull(GL_Code)),\n\tdisjoint: false) ~> ConditionalSplitGLvsCF@(GLcodeAvailable, GLcodeNotAvailable)\nLookupFundAndAsset split(ERROR_FUNCTION(''),\n\tdisjoint: false) ~> ConditionalSplitValidVsInvalidFundAsset@(ValidFundAsset, InvalidFundAsset)\nSelectForTarget sink(input(\n\t\tTrx_Code as string,\n\t\tFund_ID as string,\n\t\tAsset_ID as string,\n\t\tGL_Code as string,\n\t\tCash_Flow_Code as string,\n\t\tDebit_Credit as string,\n\t\tTrx_Date as timestamp,\n\t\tTrx_Desc as string,\n\t\tTrx_Type as string,\n\t\tTrx_Amount as decimal(18,2)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tTrx_Code = Transaction_Code,\n\t\tFund_ID,\n\t\tAsset_ID,\n\t\tGL_Code,\n\t\tCash_Flow_Code = Cashflow_Code,\n\t\tDebit_Credit,\n\t\tTrx_Date = Date,\n\t\tTrx_Desc = GL_Description,\n\t\tTrx_Type,\n\t\tTrx_Amount\n\t)) ~> StagingDB"
		}
	}
}