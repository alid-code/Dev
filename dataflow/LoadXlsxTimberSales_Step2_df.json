{
	"name": "LoadXlsxTimberSales_Step2_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ParquetPersistentOpsWithTabParam_ds",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "testCSVoutputFromParquet",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"script": "parameters{\n\tWorkbookName as string,\n\tTabName as string\n}\nsource(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tReporting_Period as date,\n\t\tCustomer as string,\n\t\tDomestic_or_Export as string,\n\t\tSpecies as string,\n\t\tProduct_Type as string,\n\t\tDelivery_Point as string,\n\t\tPrice_Point as double,\n\t\tSales_Unit as string,\n\t\tSales_Quantity as double,\n\t\tAverage_Sales_Price as double,\n\t\tSales_Revenue as double,\n\t\tProduction_Cost as double,\n\t\tStumpage as double,\n\t\tUnit_Stumpage as double,\n\t\tCurrency as string,\n\t\tMonth as date,\n\t\tBudget_Sales_Quantity as double,\n\t\tBudget_Sales_Revenue as double,\n\t\tBudget_Production_Cost as double,\n\t\tBudget_Unit_Stumpage as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 1)) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['testoutputfromParquetTimberSales.csv'],\n\tmapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\tCustomer,\n\t\tDomestic_or_Export,\n\t\tSpecies,\n\t\tProduct_Type,\n\t\tDelivery_Point,\n\t\tPrice_Point,\n\t\tSales_Unit,\n\t\tSales_Quantity,\n\t\tAverage_Sales_Price,\n\t\tSales_Revenue,\n\t\tProduction_Cost,\n\t\tStumpage,\n\t\tUnit_Stumpage,\n\t\tCurrency,\n\t\tMonth,\n\t\tBudget_Sales_Quantity,\n\t\tBudget_Sales_Revenue,\n\t\tBudget_Production_Cost,\n\t\tBudget_Unit_Stumpage\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}