{
	"name": "LoadTxtToDBstaging_myob_actuals_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Forecast_Test_ds",
						"type": "DatasetReference"
					},
					"name": "RawForecast"
				},
				{
					"dataset": {
						"referenceName": "SQLrelationasset_ds",
						"type": "DatasetReference"
					},
					"name": "GetAssetMaster"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQLstagingmyobactuals_ds",
						"type": "DatasetReference"
					},
					"name": "StagingDB"
				}
			],
			"transformations": [
				{
					"name": "SelectSourceColumns"
				},
				{
					"name": "SetDerivations"
				},
				{
					"name": "SelectForTarget"
				},
				{
					"name": "LookupFundAndAsset"
				},
				{
					"name": "SelectFundColumns"
				},
				{
					"name": "LookupGLcode"
				},
				{
					"name": "SelectGLData"
				},
				{
					"name": "ConditionalSplitValidGL"
				},
				{
					"name": "TransactionValidFundAsset"
				},
				{
					"name": "SelectInvalidFundAssetData"
				},
				{
					"name": "DerivedColumnValidationErrorFund"
				},
				{
					"name": "DerivedColumnValidationErrorGL"
				},
				{
					"name": "SelectInvalidGLdata"
				},
				{
					"name": "SelectValidGLdata"
				},
				{
					"name": "UnionAll"
				},
				{
					"name": "TrimSingleQuoteFromGLcode"
				},
				{
					"name": "ConvertAmountToValidFormat"
				},
				{
					"name": "CheckVersionNotNull"
				},
				{
					"name": "DerivedInvalidNullVersion"
				},
				{
					"name": "SelectInvalidAmountOrDateOrTrxCode"
				},
				{
					"name": "UnpivotForecast"
				}
			],
			"script": "source(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tForecast_Version as string,\n\t\tCPM_Code as string,\n\t\t{Jul-2021} as short,\n\t\t{Jul-2022} as short,\n\t\t{Jul-2023} as short,\n\t\t{Jul-2024} as short,\n\t\t{Jul-2025} as short,\n\t\t{Jul-2026} as short,\n\t\t{Jul-2027} as short,\n\t\t{Jul-2028} as short,\n\t\t{Jul-2029} as short,\n\t\t{Jul-1930} as short,\n\t\t{Jul-1931} as short,\n\t\t{Jul-1932} as short,\n\t\t{Jul-1933} as short,\n\t\t{Jul-1934} as short,\n\t\t{Jul-1935} as short,\n\t\t{Jul-1936} as short,\n\t\t{Jul-1937} as short,\n\t\t{Jul-1938} as short,\n\t\t{Jul-1939} as short,\n\t\t{Jul-1940} as short,\n\t\t{Jul-1941} as short,\n\t\t{Jul-1942} as short,\n\t\t{Jul-1943} as short,\n\t\t{Jul-1944} as short,\n\t\t{Jul-1945} as short,\n\t\t{Jul-1946} as short,\n\t\t{Jul-1947} as short,\n\t\t{Jul-1948} as short,\n\t\t{Jul-1949} as short,\n\t\t{Jul-1950} as short,\n\t\t{Jul-1951} as short,\n\t\t{Jul-1952} as short,\n\t\t{Jul-1953} as short,\n\t\t{Jul-1954} as short,\n\t\t{Jul-1955} as short,\n\t\t{Jul-1956} as short,\n\t\t{Jul-1957} as short,\n\t\t{Jul-1958} as short,\n\t\t{Jul-1959} as short,\n\t\t{Jul-1960} as short,\n\t\t{Jul-1961} as short,\n\t\t{Jul-1962} as short,\n\t\t{Jul-1963} as short,\n\t\t{Jul-1964} as short,\n\t\t{Jul-1965} as short,\n\t\t{Jul-1966} as short,\n\t\t{Jul-1967} as short,\n\t\t{Jul-1968} as short,\n\t\t{Jul-1969} as short,\n\t\t{Jul-1970} as short,\n\t\t{Jul-1971} as short,\n\t\t{Jul-1972} as short,\n\t\t{Jul-1973} as short,\n\t\t{Jul-1974} as short,\n\t\t{Jul-1975} as short,\n\t\t{Jul-1976} as short,\n\t\t{Jul-1977} as short,\n\t\t{Jul-1978} as short,\n\t\t{Jul-1979} as short,\n\t\t{Jul-1980} as short,\n\t\t{Jul-1981} as short,\n\t\t{Jul-1982} as short,\n\t\t{Jul-1983} as short,\n\t\t{Jul-1984} as short,\n\t\t{Jul-1985} as short,\n\t\t{Jul-1986} as short,\n\t\t{Jul-1987} as short,\n\t\t{Jul-1988} as short,\n\t\t{Jul-1989} as short,\n\t\t{Jul-1990} as short,\n\t\t{Jul-1991} as short,\n\t\t{Jul-1992} as short,\n\t\t{Jul-1993} as short,\n\t\t{Jul-1994} as short,\n\t\t{Jul-1995} as short,\n\t\t{Jul-1996} as short,\n\t\t{Jul-1997} as short,\n\t\t{Jul-1998} as short,\n\t\t{Jul-1999} as short,\n\t\t{Jul-2000} as short,\n\t\t{Jul-2001} as short,\n\t\t{Jul-2002} as short,\n\t\t{Jul-2003} as short,\n\t\t{Jul-2004} as short,\n\t\t{Jul-2005} as short,\n\t\t{Jul-2006} as short,\n\t\t{Jul-2007} as short,\n\t\t{Jul-2008} as short,\n\t\t{Jul-2009} as short,\n\t\t{Jul-2010} as short,\n\t\t{Jul-2011} as short,\n\t\t{Jul-2012} as short,\n\t\t{Jul-2013} as short,\n\t\t{Jul-2014} as short,\n\t\t{Jul-2015} as short,\n\t\t{Jul-2016} as short,\n\t\t{Jul-2017} as short,\n\t\t{Jul-2018} as short,\n\t\t{Jul-2019} as short,\n\t\t{Jul-2020} as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> RawForecast\nsource(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [Asset_ID]\\n      ,[Fund_ID]\\n  FROM [relational].[Asset]\\n  WHERE [record_deleted_flag] = 0',\n\tformat: 'query') ~> GetAssetMaster\nCheckVersionNotNull@CompleteVersionName select(mapColumn(\n\t\tDate,\n\t\tTransaction_Code,\n\t\tCashflow_Code,\n\t\tFund_ID,\n\t\tAsset_ID,\n\t\tTrx_Type,\n\t\tGL_Code,\n\t\tGL_Description,\n\t\tAmount,\n\t\tDebit_Credit,\n\t\tStart_Date,\n\t\tEnd_Date\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectSourceColumns\nUnionAll derive(Debit_Credit = upper(Debit_Credit),\n\t\tTrx_Amount = abs(toDecimal(Amount,18,2))) ~> SetDerivations\nSetDerivations select(mapColumn(\n\t\tTrx_Date = Date,\n\t\tTrx_Code = Transaction_Code,\n\t\tCash_Flow_Code = Cashflow_Code,\n\t\tFund_ID,\n\t\tAsset_ID,\n\t\tTrx_Type,\n\t\tGL_Code,\n\t\tTrx_Desc = GL_Description,\n\t\tvalidation_error = Validation_Error,\n\t\tDebit_Credit,\n\t\tTrx_Amount,\n\t\tStart_Date,\n\t\tEnd_Date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectForTarget\nSelectSourceColumns, SelectFundColumns lookup(Asset_ID == Relation_Asset_ID\n\t&& Fund_ID == Relation_Fund_ID,\n\tmultiple: true,\n\tbroadcast: 'auto')~> LookupFundAndAsset\nGetAssetMaster select(mapColumn(\n\t\tRelation_Asset_ID = Asset_ID,\n\t\tRelation_Fund_ID = Fund_ID\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectFundColumns\nSelectGLData lookup(GL_Code == Relation_GL_Code,\n\tmultiple: true,\n\tbroadcast: 'auto')~> LookupGLcode\nTrimSingleQuoteFromGLcode select(mapColumn(\n\t\tDate,\n\t\tTransaction_Code,\n\t\tCashflow_Code,\n\t\tFund_ID,\n\t\tAsset_ID,\n\t\tTrx_Type,\n\t\tGL_Code,\n\t\tGL_Description,\n\t\tAmount,\n\t\tDebit_Credit,\n\t\tStart_Date,\n\t\tEnd_Date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectGLData\nLookupGLcode split(not(isNull(Relation_GL_Code)),\n\tdisjoint: false) ~> ConditionalSplitValidGL@(ValidGL, NotValidGL)\nLookupFundAndAsset split(not(isNull(Relation_Fund_ID)),\n\tdisjoint: false) ~> TransactionValidFundAsset@(ValidFundAsset, InvalidFundAsset)\nDerivedColumnValidationErrorFund select(mapColumn(\n\t\tDate,\n\t\tTransaction_Code,\n\t\tCashflow_Code,\n\t\tFund_ID = Derived_Fund,\n\t\tAsset_ID = Derived_Asset,\n\t\tTrx_Type,\n\t\tGL_Code,\n\t\tGL_Description,\n\t\tAmount,\n\t\tDebit_Credit,\n\t\tStart_Date,\n\t\tEnd_Date,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidFundAssetData\nTransactionValidFundAsset@InvalidFundAsset derive(Validation_Error = toString('Invalid Fund or Asset'),\n\t\tDerived_Fund = iif(isNull(Fund_ID),toString('Invalid'),Fund_ID),\n\t\tDerived_Asset = iif(isNull(Asset_ID),toString('Invalid'),Asset_ID)) ~> DerivedColumnValidationErrorFund\nConditionalSplitValidGL@NotValidGL derive(Validation_Error = toString('Invalid GL Code')) ~> DerivedColumnValidationErrorGL\nDerivedColumnValidationErrorGL select(mapColumn(\n\t\tDate,\n\t\tTransaction_Code,\n\t\tCashflow_Code,\n\t\tFund_ID,\n\t\tAsset_ID,\n\t\tTrx_Type,\n\t\tGL_Code,\n\t\tGL_Description,\n\t\tAmount,\n\t\tDebit_Credit,\n\t\tStart_Date,\n\t\tEnd_Date,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidGLdata\nConditionalSplitValidGL@ValidGL select(mapColumn(\n\t\tDate,\n\t\tTransaction_Code,\n\t\tCashflow_Code,\n\t\tFund_ID,\n\t\tAsset_ID,\n\t\tTrx_Type,\n\t\tGL_Code,\n\t\tGL_Description,\n\t\tAmount,\n\t\tDebit_Credit,\n\t\tStart_Date,\n\t\tEnd_Date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectValidGLdata\nSelectValidGLdata, SelectInvalidAmountOrDateOrTrxCode, SelectInvalidFundAssetData, SelectInvalidGLdata union(byName: true)~> UnionAll\nTransactionValidFundAsset@ValidFundAsset derive(GL_Code = trim(GL_Code,'\\'')) ~> TrimSingleQuoteFromGLcode\nUnpivotForecast derive(Value = toDecimal(abs(Value),18,2,'###,###.##')) ~> ConvertAmountToValidFormat\nConvertAmountToValidFormat split(not(isNull(Forecast_Version)),\n\tdisjoint: false) ~> CheckVersionNotNull@(CompleteVersionName, NullVersionName)\nCheckVersionNotNull@NullVersionName derive(Validation_Error = toString('No Version Name Provided')) ~> DerivedInvalidNullVersion\nDerivedInvalidNullVersion select(mapColumn(\n\t\tDate = Forecast_Period,\n\t\tTransaction_Code = Derived_TrxCode,\n\t\tCashflow_Code,\n\t\tFund_ID,\n\t\tAsset_ID,\n\t\tTrx_Type = Derived_Trx_Type,\n\t\tGL_Code,\n\t\tGL_Description,\n\t\tAmount = Derived_Amount,\n\t\tDebit_Credit = Derived_Debit_Credit,\n\t\tStart_Date,\n\t\tEnd_Date,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidAmountOrDateOrTrxCode\nRawForecast unpivot(output(\n\t\tForecast_Period as date,\n\t\tValue as short\n\t),\n\tungroupBy(Asset_ID,\n\t\tFund_ID,\n\t\tCPM_Code,\n\t\tForecast_Version),\n\tlateral: true,\n\tignoreNullPivots: false) ~> UnpivotForecast\nSelectForTarget sink(input(\n\t\tTrx_Code as string,\n\t\tFund_ID as string,\n\t\tAsset_ID as string,\n\t\tGL_Code as string,\n\t\tCash_Flow_Code as string,\n\t\tDebit_Credit as string,\n\t\tTrx_Date as timestamp,\n\t\tTrx_Desc as string,\n\t\tTrx_Type as string,\n\t\tTrx_Amount as decimal(18,2),\n\t\tStart_Date_Tag as date,\n\t\tEnd_Date_Tag as date,\n\t\tvalidation_error as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tTrx_Code,\n\t\tFund_ID,\n\t\tAsset_ID,\n\t\tGL_Code,\n\t\tCash_Flow_Code,\n\t\tDebit_Credit,\n\t\tTrx_Date,\n\t\tTrx_Desc,\n\t\tTrx_Type,\n\t\tTrx_Amount,\n\t\tStart_Date_Tag = Start_Date,\n\t\tEnd_Date_Tag = End_Date,\n\t\tvalidation_error\n\t)) ~> StagingDB"
		}
	}
}