{
	"name": "LoadXlsx_OtherSales_Step1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ParquetPersistentOpsWithTabParam_ds",
						"type": "DatasetReference"
					},
					"name": "SourceDataTab"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ParquetPersistentOps_ds",
						"type": "DatasetReference"
					},
					"name": "TargetPersistentParquetInsert"
				},
				{
					"dataset": {
						"referenceName": "Sales_Other_Error",
						"type": "DatasetReference"
					},
					"name": "ErrorTable"
				},
				{
					"dataset": {
						"referenceName": "SQLauditopsworkbookworksheetlist_ds",
						"type": "DatasetReference"
					},
					"name": "OpsWorkbookWorksheetList"
				}
			],
			"transformations": [
				{
					"name": "ValidateMandatoryColumns",
					"description": "ReportingDateCertificationIDValidateMsg is a test and should be considered as part of the conditional split Insert/Update activity"
				},
				{
					"name": "SegregateValidInvalidRows"
				},
				{
					"name": "SelectedColumnsOutputInsert"
				},
				{
					"name": "ConcatenateInvalidColumnsMessage"
				},
				{
					"name": "SelectedOutputColumnsError"
				},
				{
					"name": "GenerateRowNumber"
				},
				{
					"name": "ExcludeFirstRowandEmpty"
				},
				{
					"name": "AggregateSetUniqueWorksheetAsset"
				},
				{
					"name": "SelectWorksheetAsset"
				},
				{
					"name": "SelectUniqueWorksheetAsset"
				},
				{
					"name": "DataTypeTransformations"
				},
				{
					"name": "FilterBlankAssetFund"
				}
			],
			"script": "parameters{\n\tMasterUtcTag as string,\n\tCurrentRunDateTime as string,\n\tWorkbookName as string,\n\tTabName as string,\n\tCurrentQuarterDate as string,\n\tMasterPipeline as string\n}\nsource(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tReporting_Period as string,\n\t\tValidation_Flag as string,\n\t\tSales_Type as string,\n\t\tSales_UOM as string,\n\t\tSales_Point as string,\n\t\tTotal_Units_Sold as string,\n\t\tTotal_Revenue as string,\n\t\tTotal_Sales_Costs as string,\n\t\tTotal_Net_Revenue as string,\n\t\tSales_Net_Revenue_Per_Unit as string,\n\t\tCurrency_Code as string,\n\t\tBudget_Units_Sold as string,\n\t\tBudget_Sales_Revenue as string,\n\t\tBudget_Sales_Costs as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 1)) ~> SourceDataTab\nExcludeFirstRowandEmpty derive(Sales_Type_Validate_Msg = iif(isNull(Sales_Type),'/Sales Type',''),\n\t\tTotal_Revenue_Validate_Msg = iif(isNull(Total_Revenue),'/Total_Revenue','')) ~> ValidateMandatoryColumns\nValidateMandatoryColumns split(length(concatWS('',Sales_Type_Validate_Msg,Total_Revenue_Validate_Msg)) == 0,\n\tdisjoint: false) ~> SegregateValidInvalidRows@(ValidRows, InvalidRows)\nSegregateValidInvalidRows@ValidRows select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\tSales_Type,\n\t\tSales_UOM,\n\t\tSales_Point,\n\t\tTotal_Units_Sold,\n\t\tSales_revenue = Total_Revenue,\n\t\tSales_Cost = Total_Sales_Costs,\n\t\tSales_Net_Revenue = Total_Net_Revenue,\n\t\tSales_Net_Revenue_Per_Unit,\n\t\tCurrency_Code,\n\t\tBudget_Sales_Quantity = Budget_Units_Sold,\n\t\tBudget_Sales_Revenue,\n\t\tBudget_Sales_Costs,\n\t\tInsert_Datetime,\n\t\tProcess_Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectedColumnsOutputInsert\nSegregateValidInvalidRows@InvalidRows derive(ConcatenatedMessage = concat(Sales_Type_Validate_Msg,Total_Revenue_Validate_Msg)) ~> ConcatenateInvalidColumnsMessage\nConcatenateInvalidColumnsMessage select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\tValidation_Flag,\n\t\tSales_Type,\n\t\tSales_UOM,\n\t\tSales_Point,\n\t\tTotal_Units_Sold,\n\t\tTotal_Revenue,\n\t\tTotal_Sales_Costs,\n\t\tTotal_Net_Revenue,\n\t\tSales_Net_Revenue_Per_Unit,\n\t\tCurrency_Code,\n\t\tBudget_Units_Sold,\n\t\tBudget_Sales_Revenue,\n\t\tBudget_Sales_Costs,\n\t\tInsert_Datetime,\n\t\tWork_Book,\n\t\tWork_Sheet,\n\t\tProcess_Name,\n\t\tCurrentReportingPeriod,\n\t\tRowNumber,\n\t\tSales_Type_Validate_Msg,\n\t\tTotal_Revenue_Validate_Msg,\n\t\tConcatenatedMessage\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectedOutputColumnsError\nDataTypeTransformations keyGenerate(output(RowNumber as long),\n\tstartAt: 1L,\n\tpartitionBy('hash', 1)) ~> GenerateRowNumber\nGenerateRowNumber filter(RowNumber > 1 && \r\nnot(isNull(Asset_ID)) && not(isNull(Fund_ID)) && not(isNull(Reporting_Period)) && \r\n(not(isNull(Sales_Type)) || not(isNull(Sales_UOM)) || not(isNull(Sales_Point)) || \r\nnot(isNull(Total_Units_Sold)) || not(isNull(Total_Revenue)) || not(isNull(Total_Sales_Costs)) || \r\nnot(isNull(Total_Net_Revenue)) || not(isNull(Sales_Net_Revenue_Per_Unit)) || not(isNull(Currency_Code)) || not(isNull(Budget_Units_Sold)) || \r\nnot(isNull(Budget_Sales_Revenue)) || not(isNull(Budget_Sales_Costs))\r\n)) ~> ExcludeFirstRowandEmpty\nSelectWorksheetAsset aggregate(groupBy(Asset_ID,\n\t\tFund_ID,\n\t\tWork_Book,\n\t\tWork_Sheet),\n\tAggCount = count()) ~> AggregateSetUniqueWorksheetAsset\nExcludeFirstRowandEmpty select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tWork_Book,\n\t\tWork_Sheet\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectWorksheetAsset\nFilterBlankAssetFund select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tWork_Book,\n\t\tWork_Sheet\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectUniqueWorksheetAsset\nSourceDataTab derive(Reporting_Period = toDate(Reporting_Period),\n\t\tInsert_Datetime = fromUTC(currentUTC(), 'Australia/Sydney'),\n\t\tWork_Book = $WorkbookName,\n\t\tWork_Sheet = $TabName,\n\t\tProcess_Name = concatWS('-',$MasterPipeline,$WorkbookName,$TabName),\n\t\tCurrentReportingPeriod = toDate($CurrentQuarterDate),\n\t\tTotal_Units_Sold = toDecimal(Total_Units_Sold,19,4),\n\t\tTotal_Revenue = toDecimal(Total_Revenue,19,4),\n\t\tTotal_Sales_Costs = toDecimal(Total_Sales_Costs,19,4),\n\t\tTotal_Net_Revenue = toDecimal(Total_Net_Revenue,19,4),\n\t\tSales_Net_Revenue_Per_Unit = toDecimal(Sales_Net_Revenue_Per_Unit,19,4),\n\t\tBudget_Units_Sold = toDecimal(Budget_Units_Sold,19,4),\n\t\tBudget_Sales_Revenue = toDecimal(Budget_Sales_Revenue,19,4),\n\t\tBudget_Sales_Costs = toDecimal(Budget_Sales_Costs,19,4)) ~> DataTypeTransformations\nAggregateSetUniqueWorksheetAsset filter(not(isNull(Asset_ID)) && not(isNull(Fund_ID))) ~> FilterBlankAssetFund\nSelectedColumnsOutputInsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:[(concatWS(\"_\", $WorkbookName, $TabName,$CurrentQuarterDate,'LoadReady'))],\n\tmapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\tValidation_Flag,\n\t\tSales_Type,\n\t\tSales_UOM,\n\t\tSales_Point,\n\t\tTotal_Units_Sold,\n\t\tTotal_Revenue = Sales_revenue,\n\t\tTotal_Sales_Costs = Sales_Cost,\n\t\tTotal_Net_Revenue = Sales_Net_Revenue,\n\t\tSales_Net_Revenue_Per_Unit,\n\t\tCurrency_Code,\n\t\tBudget_Units_Sold = Budget_Sales_Quantity,\n\t\tBudget_Sales_Revenue,\n\t\tBudget_Sales_Costs,\n\t\tInsert_Datetime,\n\t\tWork_Book,\n\t\tWork_Sheet,\n\t\tProcess_Name,\n\t\tCurrentReportingPeriod,\n\t\tRowNumber,\n\t\tSales_Type_Validate_Msg,\n\t\tTotal_Revenue_Validate_Msg\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TargetPersistentParquetInsert\nSelectedOutputColumnsError sink(input(\n\t\tError_ID as long,\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tReporting_Period as string,\n\t\tSale_Type as string,\n\t\tSales_UOM as string,\n\t\tSales_Point as string,\n\t\tTotal_Units_Sold as string,\n\t\tSales_revenue as string,\n\t\tSales_Cost as string,\n\t\tSales_Net_Revenue as string,\n\t\tSales_Net_Revenue_Per_Unit as string,\n\t\tCurrency_Code as string,\n\t\tBudget_Sales_Quantity as string,\n\t\tBudget_Sales_Revenue as string,\n\t\tBudget_Sales_Cost as string,\n\t\tInsert_Datetime as timestamp,\n\t\tProcess_Name as string,\n\t\tSales_Type as string,\n\t\tSource_File as string,\n\t\tSource_Sub_File as string,\n\t\tError_Desc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\tSale_Type = Sales_Type,\n\t\tSales_UOM,\n\t\tSales_Point,\n\t\tTotal_Units_Sold,\n\t\tSales_revenue = Total_Revenue,\n\t\tSales_Cost = Total_Sales_Costs,\n\t\tSales_Net_Revenue = Total_Net_Revenue,\n\t\tSales_Net_Revenue_Per_Unit,\n\t\tCurrency_Code,\n\t\tBudget_Sales_Quantity = Budget_Units_Sold,\n\t\tBudget_Sales_Revenue,\n\t\tBudget_Sales_Cost = Budget_Sales_Costs,\n\t\tInsert_Datetime,\n\t\tProcess_Name,\n\t\tSales_Type,\n\t\tSource_File = Work_Book,\n\t\tSource_Sub_File = Work_Sheet,\n\t\tError_Desc = ConcatenatedMessage\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ErrorTable\nSelectUniqueWorksheetAsset sink(input(\n\t\tWork_Book as string,\n\t\tWork_Sheet as string,\n\t\tAsset_Id as string,\n\t\tFund_Id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tWork_Book,\n\t\tWork_Sheet,\n\t\tAsset_Id = Asset_ID,\n\t\tFund_Id = Fund_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OpsWorkbookWorksheetList"
		}
	}
}