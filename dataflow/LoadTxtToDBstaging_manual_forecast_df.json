{
	"name": "LoadTxtToDBstaging_manual_forecast_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Forecast_Test_ds",
						"type": "DatasetReference"
					},
					"name": "LoadFromScrubbed"
				},
				{
					"dataset": {
						"referenceName": "SQLrelationasset_ds",
						"type": "DatasetReference"
					},
					"name": "GetAssetMaster"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "GetCPMCodes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQLStagingManualForecast",
						"type": "DatasetReference"
					},
					"name": "StagingDB"
				}
			],
			"transformations": [
				{
					"name": "SelectSourceColumns"
				},
				{
					"name": "LookupFundAndAsset"
				},
				{
					"name": "SelectFundColumns"
				},
				{
					"name": "LookupCPMCode"
				},
				{
					"name": "ConditionalSplitValidCPMCode"
				},
				{
					"name": "TransactionValidFundAsset"
				},
				{
					"name": "SelectInvalidFundAssetData"
				},
				{
					"name": "DerivedColumnValidationErrorFund"
				},
				{
					"name": "DerivedColumnValidationErrorGL"
				},
				{
					"name": "SelectInvalidCPMdata"
				},
				{
					"name": "SelectValidCPMdata"
				},
				{
					"name": "UnionAll"
				},
				{
					"name": "CheckVersionNotNull"
				},
				{
					"name": "DerivedInvalidNullVersion"
				},
				{
					"name": "SelectNullVersion"
				},
				{
					"name": "UnpivotForecast"
				},
				{
					"name": "CreditDebitType"
				}
			],
			"script": "source(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tForecast_Version as string,\n\t\tCPM_Code as string,\n\t\t{Jul-21} as string,\n\t\t{Jul-22} as string,\n\t\t{Jul-23} as string,\n\t\t{Jul-24} as string,\n\t\t{Jul-25} as string,\n\t\t{Jul-26} as string,\n\t\t{Jul-27} as string,\n\t\t{Jul-28} as string,\n\t\t{Jul-29} as string,\n\t\t{Jul-30} as string,\n\t\t{Jul-31} as string,\n\t\t{Jul-32} as string,\n\t\t{Jul-33} as string,\n\t\t{Jul-34} as string,\n\t\t{Jul-35} as string,\n\t\t{Jul-36} as string,\n\t\t{Jul-37} as string,\n\t\t{Jul-38} as string,\n\t\t{Jul-39} as string,\n\t\t{Jul-40} as string,\n\t\t{Jul-41} as string,\n\t\t{Jul-42} as string,\n\t\t{Jul-43} as string,\n\t\t{Jul-44} as string,\n\t\t{Jul-45} as string,\n\t\t{Jul-46} as string,\n\t\t{Jul-47} as string,\n\t\t{Jul-48} as string,\n\t\t{Jul-49} as string,\n\t\t{Jul-50} as string,\n\t\t{Jul-51} as string,\n\t\t{Jul-52} as string,\n\t\t{Jul-53} as string,\n\t\t{Jul-54} as string,\n\t\t{Jul-55} as string,\n\t\t{Jul-56} as string,\n\t\t{Jul-57} as string,\n\t\t{Jul-58} as string,\n\t\t{Jul-59} as string,\n\t\t{Jul-60} as string,\n\t\t{Jul-61} as string,\n\t\t{Jul-62} as string,\n\t\t{Jul-63} as string,\n\t\t{Jul-64} as string,\n\t\t{Jul-65} as string,\n\t\t{Jul-66} as string,\n\t\t{Jul-67} as string,\n\t\t{Jul-68} as string,\n\t\t{Jul-69} as string,\n\t\t{Jul-70} as string,\n\t\t{Jul-71} as string,\n\t\t{Jul-72} as string,\n\t\t{Jul-73} as string,\n\t\t{Jul-74} as string,\n\t\t{Jul-75} as string,\n\t\t{Jul-76} as string,\n\t\t{Jul-77} as string,\n\t\t{Jul-78} as string,\n\t\t{Jul-79} as string,\n\t\t{Jul-80} as string,\n\t\t{Jul-81} as string,\n\t\t{Jul-82} as string,\n\t\t{Jul-83} as string,\n\t\t{Jul-84} as string,\n\t\t{Jul-85} as string,\n\t\t{Jul-86} as string,\n\t\t{Jul-87} as string,\n\t\t{Jul-88} as string,\n\t\t{Jul-89} as string,\n\t\t{Jul-90} as string,\n\t\t{Jul-91} as string,\n\t\t{Jul-92} as string,\n\t\t{Jul-93} as string,\n\t\t{Jul-94} as string,\n\t\t{Jul-95} as string,\n\t\t{Jul-96} as string,\n\t\t{Jul-97} as string,\n\t\t{Jul-98} as string,\n\t\t{Jul-99} as string,\n\t\t{Jul-00} as string,\n\t\t{Jul-01} as string,\n\t\t{Jul-02} as string,\n\t\t{Jul-03} as string,\n\t\t{Jul-04} as string,\n\t\t{Jul-05} as string,\n\t\t{Jul-06} as string,\n\t\t{Jul-07} as string,\n\t\t{Jul-08} as string,\n\t\t{Jul-09} as string,\n\t\t{Jul-10} as string,\n\t\t{Jul-11} as string,\n\t\t{Jul-12} as string,\n\t\t{Jul-13} as string,\n\t\t{Jul-14} as string,\n\t\t{Jul-15} as string,\n\t\t{Jul-16} as string,\n\t\t{Jul-17} as string,\n\t\t{Jul-18} as string,\n\t\t{Jul-19} as string,\n\t\t{Jul-20} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\twildcardPaths:['MAS_MNL_FORECAST_*']) ~> LoadFromScrubbed\nsource(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [Asset_ID]\\n      ,[Fund_ID]\\n  FROM [relational].[Asset]\\n  WHERE [record_deleted_flag] = 0',\n\tformat: 'query') ~> GetAssetMaster\nsource(output(\n\t\tCPM_Code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [CPM_Code]\\n  FROM [relational].[CPM_Codes]',\n\tformat: 'query') ~> GetCPMCodes\nCheckVersionNotNull@CompleteVersionName select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tCPM_Code,\n\t\tForecast_Version,\n\t\tForecast_Period,\n\t\tValue\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectSourceColumns\nSelectSourceColumns, SelectFundColumns lookup(Asset_ID == Relation_Asset_ID\n\t&& Fund_ID == Relation_Fund_ID,\n\tmultiple: true,\n\tbroadcast: 'auto')~> LookupFundAndAsset\nGetAssetMaster select(mapColumn(\n\t\tRelation_Asset_ID = Asset_ID,\n\t\tRelation_Fund_ID = Fund_ID\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectFundColumns\nTransactionValidFundAsset@ValidFundAsset, GetCPMCodes lookup(TransactionValidFundAsset@ValidFundAsset@CPM_Code == GetCPMCodes@CPM_Code,\n\tmultiple: true,\n\tbroadcast: 'auto')~> LookupCPMCode\nLookupCPMCode split(not(isNull(GetCPMCodes@CPM_Code)),\n\tdisjoint: false) ~> ConditionalSplitValidCPMCode@(ValidCPM, NotValidCPM)\nLookupFundAndAsset split(not(isNull(Relation_Fund_ID)),\n\tdisjoint: false) ~> TransactionValidFundAsset@(ValidFundAsset, InvalidFundAsset)\nDerivedColumnValidationErrorFund select(mapColumn(\n\t\tAsset_ID = Relation_Asset_ID,\n\t\tFund_ID = Relation_Fund_ID,\n\t\tCPM_Code,\n\t\tForecast_Version,\n\t\tForecast_Period,\n\t\tValue,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidFundAssetData\nTransactionValidFundAsset@InvalidFundAsset derive(Validation_Error = toString('Invalid Fund or Asset'),\n\t\tDerived_Fund = iif(isNull(Fund_ID),toString('Invalid'),Fund_ID),\n\t\tDerived_Asset = iif(isNull(Asset_ID),toString('Invalid'),Asset_ID)) ~> DerivedColumnValidationErrorFund\nConditionalSplitValidCPMCode@NotValidCPM derive(Validation_Error = toString('Invalid CPM Code')) ~> DerivedColumnValidationErrorGL\nDerivedColumnValidationErrorGL select(mapColumn(\n\t\tAsset_ID = Relation_Asset_ID,\n\t\tFund_ID = Relation_Fund_ID,\n\t\tForecast_Version,\n\t\tForecast_Period,\n\t\tValue,\n\t\tCPM_Code = ConditionalSplitValidCPMCode@NotValidCPM@CPM_Code,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInvalidCPMdata\nConditionalSplitValidCPMCode@ValidCPM select(mapColumn(\n\t\tAsset_ID = Relation_Asset_ID,\n\t\tFund_ID = Relation_Fund_ID,\n\t\tCPM_Code = ConditionalSplitValidCPMCode@ValidCPM@CPM_Code,\n\t\tForecast_Version,\n\t\tForecast_Period,\n\t\tValue\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectValidCPMdata\nSelectValidCPMdata, SelectNullVersion, SelectInvalidFundAssetData, SelectInvalidCPMdata union(byName: true)~> UnionAll\nUnpivotForecast split(not(isNull(Forecast_Version)),\n\tdisjoint: false) ~> CheckVersionNotNull@(CompleteVersionName, NullVersionName)\nCheckVersionNotNull@NullVersionName derive(Validation_Error = toString('No Version Name Provided')) ~> DerivedInvalidNullVersion\nDerivedInvalidNullVersion select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tCPM_Code,\n\t\tForecast_Version,\n\t\tForecast_Period,\n\t\tValue,\n\t\tValidation_Error\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNullVersion\nLoadFromScrubbed unpivot(output(\n\t\tForecast_Period as date,\n\t\tValue as string\n\t),\n\tungroupBy(Asset_ID,\n\t\tFund_ID,\n\t\tCPM_Code,\n\t\tForecast_Version),\n\tlateral: false,\n\tignoreNullPivots: true) ~> UnpivotForecast\nUnionAll derive(Credit_Debit = iif(toDecimal(Value)<0, 'Cr', 'Dr'),\n\t\tType = 'Manual') ~> CreditDebitType\nCreditDebitType sink(input(\n\t\tPeriod_Date as string,\n\t\tFund_ID as string,\n\t\tAsset_ID as string,\n\t\tCPM_Code as string,\n\t\tAmount as decimal(25,10),\n\t\tDebit_Credit as string,\n\t\tForecast_Type as string,\n\t\tVersion_name as string,\n\t\tStart_Date_Tag as date,\n\t\tEnd_Date_Tag as date,\n\t\tvalidation_error as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tPeriod_Date = Forecast_Period,\n\t\tFund_ID,\n\t\tAsset_ID,\n\t\tCPM_Code,\n\t\tAmount = Value,\n\t\tDebit_Credit = Credit_Debit,\n\t\tForecast_Type = Type,\n\t\tVersion_name = Forecast_Version,\n\t\tvalidation_error = Validation_Error\n\t)) ~> StagingDB"
		}
	}
}