{
	"name": "LoadXlsxTimberSales_Step1_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ExcelWorkbook_AllTabs_ds",
						"type": "DatasetReference"
					},
					"name": "SourceDataTab"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ParquetPersistentOps_ds",
						"type": "DatasetReference"
					},
					"name": "TargetPersistentParquet"
				},
				{
					"dataset": {
						"referenceName": "testCSVoutput",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "ValidateMandatoryColumns"
				},
				{
					"name": "SegregateValidInvalidRows"
				},
				{
					"name": "SelectedColumnsOutput"
				},
				{
					"name": "ConcatenateInvalidColumnsMessage"
				},
				{
					"name": "SelectedOutputColumnsError"
				}
			],
			"script": "parameters{\n\tMasterUtcTag as string,\n\tCurrentRunDateTime as string,\n\tWorkbookName as string,\n\tTabName as string,\n\tCurrentQuarterDate as string\n}\nsource(output(\n\t\tAsset_ID as string,\n\t\tFund_ID as string,\n\t\tReporting_Period as date,\n\t\t{Validation Flag} as double,\n\t\tCustomer as string,\n\t\t{Domestic or Export} as string,\n\t\tSpecies as string,\n\t\t{Product Type} as string,\n\t\t{Delivery Point} as string,\n\t\t{Price Point} as double,\n\t\t{Sales Unit} as string,\n\t\t{Sales Quantity} as double,\n\t\t{Average Sales Price} as double,\n\t\t{Sales Revenue} as double,\n\t\t{Production Cost} as double,\n\t\tStumpage as double,\n\t\t{Unit Stumpage} as double,\n\t\tCurrency as string,\n\t\tMonth as date,\n\t\t{Budget Sales Quantity} as double,\n\t\t{Budget Sales Revenue} as double,\n\t\t{Budget Production Cost} as double,\n\t\t{Budget Unit Stumpage} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipLines: 1,\n\tpartitionBy('hash', 1)) ~> SourceDataTab\nSourceDataTab derive(CustomerValidateMsg = iif((length(trim(Customer)) > 0 || not(isNull(Customer))), \"\", \"Customer\"),\n\t\tDomesticExportValidateMsg = iif((length(trim({Domestic or Export})) > 0 || not(isNull({Domestic or Export}))), \"\", \"Domestic or Export\")) ~> ValidateMandatoryColumns\nValidateMandatoryColumns split(length(concatWS('',CustomerValidateMsg,DomesticExportValidateMsg)) == 0,\n\tdisjoint: false) ~> SegregateValidInvalidRows@(ValidRows, InvalidRows)\nSegregateValidInvalidRows@ValidRows select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\t{Validation Flag},\n\t\tCustomer,\n\t\t{Domestic or Export},\n\t\tSpecies,\n\t\t{Product Type},\n\t\t{Delivery Point},\n\t\t{Price Point},\n\t\t{Sales Unit},\n\t\t{Sales Quantity},\n\t\t{Average Sales Price},\n\t\t{Sales Revenue},\n\t\t{Production Cost},\n\t\tStumpage,\n\t\t{Unit Stumpage},\n\t\tCurrency,\n\t\tMonth,\n\t\t{Budget Sales Quantity},\n\t\t{Budget Sales Revenue},\n\t\t{Budget Production Cost},\n\t\t{Budget Unit Stumpage}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectedColumnsOutput\nSegregateValidInvalidRows@InvalidRows derive(ConcatenatedMessage = concatWS(\"/\", CustomerValidateMsg, DomesticExportValidateMsg)) ~> ConcatenateInvalidColumnsMessage\nConcatenateInvalidColumnsMessage select(mapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\t{Validation Flag},\n\t\tCustomer,\n\t\t{Domestic or Export},\n\t\tSpecies,\n\t\t{Product Type},\n\t\t{Delivery Point},\n\t\t{Price Point},\n\t\t{Sales Unit},\n\t\t{Sales Quantity},\n\t\t{Average Sales Price},\n\t\t{Sales Revenue},\n\t\t{Production Cost},\n\t\tStumpage,\n\t\t{Unit Stumpage},\n\t\tCurrency,\n\t\tMonth,\n\t\t{Budget Sales Quantity},\n\t\t{Budget Sales Revenue},\n\t\t{Budget Production Cost},\n\t\t{Budget Unit Stumpage},\n\t\tConcatenatedMessage\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectedOutputColumnsError\nSelectedColumnsOutput sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:[(concatWS(\"-\", $WorkbookName, $TabName))],\n\tmapColumn(\n\t\tCertification_ID,\n\t\tValidation_Flag = {Validation Flag},\n\t\tCertification_Type = {Certification Type},\n\t\tCertification_Number = {Certification Number},\n\t\tNext_Audit_Date = {Next Audit Date},\n\t\tCertifying_Body = {Certifying Body},\n\t\tCertification_Date = {Certification Date},\n\t\tCertification_End_Date = {Certification End Date},\n\t\tCertified_Entity = {Certified Entity},\n\t\tNumber_of_Open_Minor_CARS = {Number of Open Minor CARS},\n\t\tNumber_of_Open_Major_CARS = {Number of Open Major CARS}\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TargetPersistentParquet\nSelectedOutputColumnsError sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['testTimberSalesError,csv'],\n\tmapColumn(\n\t\tAsset_ID,\n\t\tFund_ID,\n\t\tReporting_Period,\n\t\t{Validation Flag},\n\t\tCustomer,\n\t\t{Domestic or Export},\n\t\tSpecies,\n\t\t{Product Type},\n\t\t{Delivery Point},\n\t\t{Price Point},\n\t\t{Sales Unit},\n\t\t{Sales Quantity},\n\t\t{Average Sales Price},\n\t\t{Sales Revenue},\n\t\t{Production Cost},\n\t\tStumpage,\n\t\t{Unit Stumpage},\n\t\tCurrency,\n\t\tMonth,\n\t\t{Budget Sales Quantity},\n\t\t{Budget Sales Revenue},\n\t\t{Budget Production Cost},\n\t\t{Budget Unit Stumpage},\n\t\tConcatenatedMessage\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}