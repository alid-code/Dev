{
	"name": "LoadMktFactMarket_Pass1_ValidateFields_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CSVgenericWithParameter_ds",
						"type": "DatasetReference"
					},
					"name": "ReadSource"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGeneric_ds",
						"type": "DatasetReference"
					},
					"name": "DatamartDimProductLkp"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGeneric_ds",
						"type": "DatasetReference"
					},
					"name": "DatamartDimSpeciesLkp"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGeneric_ds",
						"type": "DatasetReference"
					},
					"name": "DatamartDimDataSource"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGeneric_ds",
						"type": "DatasetReference"
					},
					"name": "DatamartDimType"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGeneric_ds",
						"type": "DatasetReference"
					},
					"name": "DatamartDimRegion"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGeneric_ds",
						"type": "DatasetReference"
					},
					"name": "RelationalDateDimension"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGeneric_ds",
						"type": "DatasetReference"
					},
					"name": "DatamartDimUom"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGeneric_ds",
						"type": "DatasetReference"
					},
					"name": "DatamartDimDeliveryPoint"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGeneric_ds",
						"type": "DatasetReference"
					},
					"name": "DatamartDimCurrency"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGeneric_ds",
						"type": "DatasetReference"
					},
					"name": "DatamartDimIndicator"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CSVgenericWithParameter_ds",
						"type": "DatasetReference"
					},
					"name": "TargetDim"
				},
				{
					"dataset": {
						"referenceName": "SQLtableGenericWithParam_ds",
						"type": "DatasetReference"
					},
					"name": "ErrorTable"
				}
			],
			"transformations": [
				{
					"name": "SelectDimProductLkp"
				},
				{
					"name": "DataTransformation"
				},
				{
					"name": "CheckDimensionRecordExist"
				},
				{
					"name": "AddAdditionalAudit"
				},
				{
					"name": "AlterRowInsertUpdate"
				},
				{
					"name": "CheckInputRecord"
				},
				{
					"name": "AddErrorDetail"
				},
				{
					"name": "RemoveBlankRow"
				},
				{
					"name": "GetNewOrModified"
				},
				{
					"name": "RemoveDuplicate"
				},
				{
					"name": "ReplaceNullToUndefined"
				},
				{
					"name": "SelectDimSpeciesLkp"
				},
				{
					"name": "LookupDimSpecies"
				},
				{
					"name": "LookupDimCurrency"
				},
				{
					"name": "SelectDimDataSourceLkp"
				},
				{
					"name": "SelectDimTypeLkp"
				},
				{
					"name": "SelectDimRegionLkp"
				},
				{
					"name": "SelectDateDimensionLkp"
				},
				{
					"name": "SelectDimUomLkp"
				},
				{
					"name": "SelectDimDeliverPointLkp"
				},
				{
					"name": "SelectDimCurrencyLkp"
				},
				{
					"name": "SelectDimIndicatorLkp"
				},
				{
					"name": "LookupDimProduct"
				},
				{
					"name": "LookupDimDataSource"
				},
				{
					"name": "LookupDateDimension"
				},
				{
					"name": "LookupDimUom"
				},
				{
					"name": "LookupDimDeliveryPoint"
				},
				{
					"name": "LookupDimIndicator"
				},
				{
					"name": "LookupDimRegionUseCountryRegionKeys"
				},
				{
					"name": "LookupDimRegionUseCountryKey"
				},
				{
					"name": "RenameRegionLkpAddCR"
				},
				{
					"name": "RenameRegionLkpAddCO"
				},
				{
					"name": "LookupOriginPort"
				},
				{
					"name": "RenameOriginPortLkpColumnsAddOP"
				},
				{
					"name": "LookupDestinationPort"
				},
				{
					"name": "RenameDestinationPortAddDP"
				}
			],
			"script": "parameters{\n\tGeneratedBatchDate as string,\n\tWorkbookName as string,\n\tWorksheetName as string,\n\tMasterPipelineName as string\n}\nsource(output(\n\t\t{Source Metric} as string,\n\t\t{Period Date} as string,\n\t\tCountry as string,\n\t\tRegion as string,\n\t\tSpecies as string,\n\t\t{Product Global Grade} as string,\n\t\tCurrency as string,\n\t\tUOM as string,\n\t\tMarket as string,\n\t\t{Delivery Point} as string,\n\t\tIndicator as string,\n\t\tType as string,\n\t\tBasis as string,\n\t\t{Origin Port Country} as string,\n\t\t{Origin Port Region} as string,\n\t\t{Origin Port} as string,\n\t\t{Destination Port Country} as string,\n\t\t{Destination Port Region} as string,\n\t\t{Destination Port} as string,\n\t\t{Vessel Name} as string,\n\t\tLow as string,\n\t\tHigh as string,\n\t\tAverage as string,\n\t\tSpot as string,\n\t\tComment as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ReadSource\nsource(output(\n\t\tProduct_Id as integer,\n\t\tProduct_Code as string,\n\t\tProduct_Type as string,\n\t\tProduct_Global_Grade as string,\n\t\tProduct_Desc as string,\n\t\tGL_Code as string,\n\t\tSpecies_Code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Product_Id]\\n      ,[Product_Code]\\n      ,[Product_Type]\\n      ,[Product_Global_Grade]\\n      ,[Product_Desc]\\n      ,[GL_Code]\\n      ,[Species_Code]\\nFROM [datamart].[Dim_Product]\\nWHERE Product_Id != -1',\n\tformat: 'query') ~> DatamartDimProductLkp\nsource(output(\n\t\tSpecies_ID as integer,\n\t\tSpecies_Code as string,\n\t\tSpecies as string,\n\t\tGenus as string,\n\t\tSpecies_Group as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Species_ID]\\n      ,[Species_Code]\\n      ,[Species]\\n      ,[Genus]\\n      ,[Species_Group]\\nFROM [datamart].[Dim_Species]\\nWHERE [Species_ID] != -1',\n\tformat: 'query') ~> DatamartDimSpeciesLkp\nsource(output(\n\t\tData_Source_Id as integer,\n\t\tMetric_Short_Name as string,\n\t\tSource_Name as string,\n\t\tSource_Type as string,\n\t\tSource_Link as string,\n\t\tSource_Data_Type as string,\n\t\tData_Process_Type as string,\n\t\tSource_Status as string,\n\t\tFrequency as string,\n\t\tConfidence_Level as string,\n\t\tPerson_Responsible as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Data_Source_Id]\\n      ,[Metric_Short_Name]\\n      ,[Source_Name]\\n      ,[Source_Type]\\n      ,[Source_Link]\\n      ,[Source_Data_Type]\\n      ,[Data_Process_Type]\\n      ,[Source_Status]\\n      ,[Frequency]\\n      ,[Confidence_Level]\\n      ,[Person_Responsible]\\nFROM [datamart].[Dim_Data_Source]\\nWHERE [Data_Source_Id] != -1',\n\tformat: 'query') ~> DatamartDimDataSource\nsource(output(\n\t\tType_ID as integer,\n\t\tType as string,\n\t\tBasis as string,\n\t\tPrice_Point as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Type_ID]\\n      ,[Type]\\n      ,[Basis]\\n      ,[Price_Point]\\nFROM [datamart].[Dim_Type]\\nWHERE [Type_ID] != -1',\n\tformat: 'query') ~> DatamartDimType\nsource(output(\n\t\tRegion_ID as integer,\n\t\tCountry_Code as string,\n\t\tCountry as string,\n\t\tRegion_Code as string,\n\t\tRegion as string,\n\t\tPort_Loc as string,\n\t\tLong as decimal(20,15),\n\t\tLat as decimal(20,15)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Region_ID]\\n      ,[Country_Code]\\n      ,[Country]\\n      ,[Region_Code]\\n      ,[Region]\\n      ,[Port_Loc]\\n      ,[Long]\\n      ,[Lat]\\nFROM [datamart].[Dim_Region]\\nWHERE [Region_ID] != -1',\n\tformat: 'query') ~> DatamartDimRegion\nsource(output(\n\t\tDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT [Date]\\nFROM [relational].[DateDimension]',\n\tformat: 'query') ~> RelationalDateDimension\nsource(output(\n\t\tUOM_ID as integer,\n\t\tUOM_Name as string,\n\t\tUOM_Desc as string,\n\t\tUOM_Type as string,\n\t\tUOM_Long_Desc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [UOM_ID]\\n      ,[UOM_Name]\\n      ,[UOM_Desc]\\n      ,[UOM_Type]\\n      ,[UOM_Long_Desc]\\nFROM [datamart].[Dim_UOM]\\nWHERE [UOM_ID] != -1',\n\tformat: 'query') ~> DatamartDimUom\nsource(output(\n\t\tDelivery_Point_ID as integer,\n\t\tDeliver_Point_Code as string,\n\t\tDelivery_Point as string,\n\t\tDelivery_Point_Desc as string,\n\t\tDelivery_Point_Long_Desc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Delivery_Point_ID]\\n      ,[Deliver_Point_Code]\\n      ,[Delivery_Point]\\n      ,[Delivery_Point_Desc]\\n      ,[Delivery_Point_Long_Desc]\\nFROM [datamart].[Dim_Delivery_Point]\\nWHERE [Delivery_Point_ID] != -1',\n\tformat: 'query') ~> DatamartDimDeliveryPoint\nsource(output(\n\t\tCurrency_ID as integer,\n\t\tCurrency_Code as string,\n\t\tCurrency_Name as string,\n\t\tCurrency_Numeric_Code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Currency_ID]\\n      ,[Currency_Code]\\n      ,[Currency_Name]\\n      ,[Currency_Numeric_Code]\\nFROM [datamart].[Dim_Currency]\\nWHERE [Currency_ID] != -1',\n\tformat: 'query') ~> DatamartDimCurrency\nsource(output(\n\t\tIndicator_Id as integer,\n\t\tIndicator_Code as string,\n\t\tIndicator_Desc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT [Indicator_Id]\\n      ,[Indicator_Code]\\n      ,[Indicator_Desc]\\nFROM [datamart].[Dim_Indicator]\\nWHERE [Indicator_Id] != -1',\n\tformat: 'query') ~> DatamartDimIndicator\nDatamartDimProductLkp select(mapColumn(\n\t\tProduct_Id_Lkp = Product_Id,\n\t\tProduct_Code_Lkp = Product_Code,\n\t\tProduct_Type_Lkp = Product_Type,\n\t\tProduct_Global_Grade_Lkp = Product_Global_Grade,\n\t\tProduct_Desc_Lkp = Product_Desc,\n\t\tGL_Code_Lkp = GL_Code,\n\t\tSpecies_Code_Lkp = Species_Code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimProductLkp\nReadSource derive(Source_File = concat($WorkbookName,'-', $WorksheetName),\n\t\tBatch_ID = replace(replace(replace($GeneratedBatchDate, \"-\", \"\"),\":\",\"\"),\" \",\"\"),\n\t\tProcess_Name = $MasterPipelineName,\n\t\t{Period Date} = toDate({Period Date},\"dd/MM/yyyy\"),\n\t\tLow = toDecimal(Low, 20, 4),\n\t\tHigh = toDecimal(High, 20, 4),\n\t\tAverage = toDecimal(Average, 20, 4),\n\t\tSpot = toDecimal(Spot, 20, 4),\n\t\tCountry_Redefined_For_Lkp = iifNull(Country, \"Undefined\"),\n\t\tRegion_Redefined_For_Lkp = iifNull(Region, \"Undefined\")) ~> DataTransformation\nRemoveDuplicate, SelectDimProductLkp lookup({Product Code} == Product_Code_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> CheckDimensionRecordExist\nGetNewOrModified derive(InsertUpdateFlag = iif(isNull(Product_Code_Lkp), \"I\", \"U\"),\n\t\tInsert_DateTime = iif(isNull(Product_Code_Lkp), fromUTC(currentUTC(), 'Australia/Sydney'), Insert_DateTime_Lkp),\n\t\tUpdate_DateTime = iif(isNull(Product_Code_Lkp), toTimestamp(\"\"), fromUTC(currentUTC(), 'Australia/Sydney'))) ~> AddAdditionalAudit\nAddAdditionalAudit alterRow(insertIf(equals(InsertUpdateFlag,\"I\")),\n\tupdateIf(equals(InsertUpdateFlag,\"U\"))) ~> AlterRowInsertUpdate\nRenameDestinationPortAddDP split(not(isNull({Product Code})) && \r\n(isNull({Species Code}) || not(isNull(Species_Code_Lkp))) &&\r\n(isNull({GL Code}) || not(isNull(GL_Code))),\n\tdisjoint: false) ~> CheckInputRecord@(Valid, Invalid)\nRemoveBlankRow derive(Error_Desc = toString(\"Product Code cannot be empty or Invalid GL Code or Invalid Species Code\"),\n\t\tInsert_Datetime = fromUTC(currentUTC(), 'Australia/Sydney')) ~> AddErrorDetail\nCheckInputRecord@Invalid filter(not(isNull({Product Code})) || not(isNull({Product Type})) || not(isNull({Product Global Grade})) || \r\nnot(isNull({Product Desc})) || not(isNull({GL Code})) || not(isNull({Species Code}))) ~> RemoveBlankRow\nCheckDimensionRecordExist filter(isNull(Product_Code_Lkp) || \r\nnotEquals({Product Type}, Product_Type_Lkp) || \r\nnotEquals({Product Global Grade}, Product_Global_Grade_Lkp) || \r\nnotEquals({Product Desc}, Product_Desc_Lkp) || \r\nnotEquals({GL Code}, GL_Code_Lkp) || \r\nnotEquals({Species Code}, Species_Code_Lkp)) ~> GetNewOrModified\nReplaceNullToUndefined aggregate(groupBy({Product Code},\n\t\t{Product Type},\n\t\t{Product Global Grade},\n\t\t{Product Desc},\n\t\t{GL Code},\n\t\t{Species Code},\n\t\tSource_File,\n\t\tBatch_ID,\n\t\tProcess_Name),\n\tDuplicateCount = count()) ~> RemoveDuplicate\nCheckInputRecord@Valid derive({Product Type} = iifNull({Product Type}, \"Undefined\"),\n\t\t{Product Desc} = iifNull({Product Desc}, \"Undefined\"),\n\t\t{Product Global Grade} = iifNull({Product Global Grade}, \"Undefined\"),\n\t\t{GL Code} = iifNull({GL Code}, \"Undefined\"),\n\t\t{Species Code} = iifNull({Species Code}, \"Undefined\")) ~> ReplaceNullToUndefined\nDatamartDimSpeciesLkp select(mapColumn(\n\t\tSpecies_ID_Lkp = Species_ID,\n\t\tSpecies_Code_Lkp = Species_Code,\n\t\tSpecies_Lkp = Species,\n\t\tGenus_Lkp = Genus,\n\t\tSpecies_Group_Lkp = Species_Group\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimSpeciesLkp\nDataTransformation, SelectDimSpeciesLkp lookup(Species == Species_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDimSpecies\nLookupDateDimension, SelectDimCurrencyLkp lookup(Currency == Currency_Code_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDimCurrency\nDatamartDimDataSource select(mapColumn(\n\t\tData_Source_Id_Lkp = Data_Source_Id,\n\t\tMetric_Short_Name_Lkp = Metric_Short_Name,\n\t\tSource_Name_Lkp = Source_Name,\n\t\tSource_Type_Lkp = Source_Type,\n\t\tSource_Link_Lkp = Source_Link,\n\t\tSource_Data_Type_Lkp = Source_Data_Type,\n\t\tData_Process_Type_Lkp = Data_Process_Type,\n\t\tSource_Status_Lkp = Source_Status,\n\t\tFrequency_Lkp = Frequency,\n\t\tConfidence_Level_Lkp = Confidence_Level,\n\t\tPerson_Responsible_Lkp = Person_Responsible\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimDataSourceLkp\nDatamartDimType select(mapColumn(\n\t\tType_ID_Lkp = Type_ID,\n\t\tType_Lkp = Type,\n\t\tBasis_Lkp = Basis,\n\t\tPrice_Point_Lkp = Price_Point\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimTypeLkp\nDatamartDimRegion select(mapColumn(\n\t\tRegion_ID_Lkp = Region_ID,\n\t\tCountry_Code_Lkp = Country_Code,\n\t\tCountry_Lkp = Country,\n\t\tRegion_Code_Lkp = Region_Code,\n\t\tRegion_Lkp = Region,\n\t\tPort_Loc_Lkp = Port_Loc,\n\t\tLong_Lkp = Long,\n\t\tLat_Lkp = Lat\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimRegionLkp\nRelationalDateDimension select(mapColumn(\n\t\tDateDimension_Date_Lkp = Date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDateDimensionLkp\nDatamartDimUom select(mapColumn(\n\t\tUOM_ID_Lkp = UOM_ID,\n\t\tUOM_Name_Lkp = UOM_Name,\n\t\tUOM_Desc_Lkp = UOM_Desc,\n\t\tUOM_Type_Lkp = UOM_Type,\n\t\tUOM_Long_Desc_Lkp = UOM_Long_Desc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimUomLkp\nDatamartDimDeliveryPoint select(mapColumn(\n\t\tDelivery_Point_ID_Lkp = Delivery_Point_ID,\n\t\tDeliver_Point_Code_Lkp = Deliver_Point_Code,\n\t\tDelivery_Point_Lkp = Delivery_Point,\n\t\tDelivery_Point_Desc_Lkp = Delivery_Point_Desc,\n\t\tDelivery_Point_Long_Desc_Lkp = Delivery_Point_Long_Desc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimDeliverPointLkp\nDatamartDimCurrency select(mapColumn(\n\t\tCurrency_ID_Lkp = Currency_ID,\n\t\tCurrency_Code_Lkp = Currency_Code,\n\t\tCurrency_Name_Lkp = Currency_Name,\n\t\tCurrency_Numeric_Code_Lkp = Currency_Numeric_Code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimCurrencyLkp\nDatamartDimIndicator select(mapColumn(\n\t\tIndicator_Id_Lkp = Indicator_Id,\n\t\tIndicator_Code_Lkp = Indicator_Code,\n\t\tIndicator_Desc_Lkp = Indicator_Desc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDimIndicatorLkp\nLookupDimSpecies lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDimProduct\nRenameRegionLkpAddCO, SelectDimDataSourceLkp lookup({Source Metric} == Metric_Short_Name_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDimDataSource\nLookupDimDataSource, SelectDateDimensionLkp lookup({Period Date} == DateDimension_Date_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDateDimension\nLookupDimCurrency, SelectDimUomLkp lookup(UOM == UOM_Name_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDimUom\nLookupDimUom, SelectDimDeliverPointLkp lookup({Delivery Point} == Deliver_Point_Code_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDimDeliveryPoint\nLookupDimDeliveryPoint, SelectDimIndicatorLkp lookup(Indicator == Indicator_Code_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDimIndicator\nLookupDimProduct, SelectDimRegionLkp lookup(Country_Redefined_For_Lkp == Country_Code_Lkp\n\t&& Region_Redefined_For_Lkp == Region_Code_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDimRegionUseCountryRegionKeys\nRenameRegionLkpAddCR, SelectDimRegionLkp lookup(Country == Country_Code_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDimRegionUseCountryKey\nLookupDimRegionUseCountryRegionKeys select(mapColumn(\n\t\t{Source Metric},\n\t\t{Period Date},\n\t\tCountry,\n\t\tRegion,\n\t\tSpecies,\n\t\t{Product Global Grade},\n\t\tCurrency,\n\t\tUOM,\n\t\tMarket,\n\t\t{Delivery Point},\n\t\tIndicator,\n\t\tType,\n\t\tBasis,\n\t\t{Origin Port Country},\n\t\t{Origin Port Region},\n\t\t{Origin Port},\n\t\t{Destination Port Country},\n\t\t{Destination Port Region},\n\t\t{Destination Port},\n\t\t{Vessel Name},\n\t\tLow = ReadSource@Low,\n\t\tHigh = ReadSource@High,\n\t\tAverage = ReadSource@Average,\n\t\tSpot = ReadSource@Spot,\n\t\tComment,\n\t\tSource_File,\n\t\tBatch_ID,\n\t\tProcess_Name,\n\t\tSpecies_ID_Lkp,\n\t\tSpecies_Code_Lkp,\n\t\tSpecies_Lkp,\n\t\tGenus_Lkp,\n\t\tSpecies_Group_Lkp,\n\t\tRegion_ID_Lkp_CR = Region_ID_Lkp,\n\t\tCountry_Code_Lkp_CR = Country_Code_Lkp,\n\t\tCountry_Lkpv = Country_Lkp,\n\t\tRegion_Code_Lkp_CR = Region_Code_Lkp,\n\t\tRegion_Lkp_CR = Region_Lkp,\n\t\tPort_Loc_Lkp_CR = Port_Loc_Lkp,\n\t\tLong_Lkp_CR = Long_Lkp,\n\t\tLat_Lkp_CR = Lat_Lkp\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameRegionLkpAddCR\nLookupDimRegionUseCountryKey select(mapColumn(\n\t\t{Source Metric},\n\t\t{Period Date},\n\t\tCountry,\n\t\tRegion,\n\t\tSpecies,\n\t\t{Product Global Grade},\n\t\tCurrency,\n\t\tUOM,\n\t\tMarket,\n\t\t{Delivery Point},\n\t\tIndicator,\n\t\tType,\n\t\tBasis,\n\t\t{Origin Port Country},\n\t\t{Origin Port Region},\n\t\t{Origin Port},\n\t\t{Destination Port Country},\n\t\t{Destination Port Region},\n\t\t{Destination Port},\n\t\t{Vessel Name},\n\t\tLow,\n\t\tHigh,\n\t\tAverage,\n\t\tSpot,\n\t\tComment,\n\t\tSource_File,\n\t\tBatch_ID,\n\t\tProcess_Name,\n\t\tSpecies_ID_Lkp,\n\t\tSpecies_Code_Lkp,\n\t\tSpecies_Lkp,\n\t\tGenus_Lkp,\n\t\tSpecies_Group_Lkp,\n\t\tRegion_ID_Lkp_CR,\n\t\tCountry_Code_Lkp_CR,\n\t\tCountry_Lkpv,\n\t\tRegion_Code_Lkp_CR,\n\t\tRegion_Lkp_CR,\n\t\tPort_Loc_Lkp_CR,\n\t\tLong_Lkp_CR,\n\t\tLat_Lkp_CR,\n\t\tRegion_ID_Lkp_CO = Region_ID_Lkp,\n\t\tCountry_Code_Lkp_CO = Country_Code_Lkp,\n\t\tCountry_Lkp_CO = Country_Lkp,\n\t\tRegion_Code_Lkp_CO = Region_Code_Lkp,\n\t\tRegion_Lkp_CO = Region_Lkp,\n\t\tPort_Loc_Lkp_CO = Port_Loc_Lkp,\n\t\tLong_Lkp_CO = Long_Lkp,\n\t\tLat_Lkp_CO = Lat_Lkp\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameRegionLkpAddCO\nLookupDimIndicator, SelectDimRegionLkp lookup({Origin Port Country} == Country_Code_Lkp\n\t&& {Destination Port Region} == Region_Code_Lkp\n\t&& {Origin Port} == Port_Loc_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupOriginPort\nLookupOriginPort select(mapColumn(\n\t\t{Source Metric},\n\t\t{Period Date},\n\t\tCountry,\n\t\tRegion,\n\t\tSpecies,\n\t\t{Product Global Grade},\n\t\tCurrency,\n\t\tUOM,\n\t\tMarket,\n\t\t{Delivery Point},\n\t\tIndicator,\n\t\tType,\n\t\tBasis,\n\t\t{Origin Port Country},\n\t\t{Origin Port Region},\n\t\t{Origin Port},\n\t\t{Destination Port Country},\n\t\t{Destination Port Region},\n\t\t{Destination Port},\n\t\t{Vessel Name},\n\t\tComment,\n\t\tSource_File,\n\t\tBatch_ID,\n\t\tProcess_Name,\n\t\tSpecies_ID_Lkp,\n\t\tSpecies_Code_Lkp,\n\t\tSpecies_Lkp,\n\t\tGenus_Lkp,\n\t\tSpecies_Group_Lkp,\n\t\tRegion_ID_Lkp_CR,\n\t\tCountry_Code_Lkp_CR,\n\t\tCountry_Lkpv,\n\t\tRegion_Code_Lkp_CR,\n\t\tRegion_Lkp_CR,\n\t\tPort_Loc_Lkp_CR,\n\t\tLong_Lkp_CR,\n\t\tLat_Lkp_CR,\n\t\tRegion_ID_Lkp_CO,\n\t\tCountry_Code_Lkp_CO,\n\t\tCountry_Lkp_CO,\n\t\tRegion_Code_Lkp_CO,\n\t\tRegion_Lkp_CO,\n\t\tPort_Loc_Lkp_CO,\n\t\tLong_Lkp_CO,\n\t\tLat_Lkp_CO,\n\t\tData_Source_Id_Lkp,\n\t\tMetric_Short_Name_Lkp,\n\t\tSource_Name_Lkp,\n\t\tSource_Type_Lkp,\n\t\tSource_Link_Lkp,\n\t\tSource_Data_Type_Lkp,\n\t\tData_Process_Type_Lkp,\n\t\tSource_Status_Lkp,\n\t\tFrequency_Lkp,\n\t\tConfidence_Level_Lkp,\n\t\tPerson_Responsible_Lkp,\n\t\tDateDimension_Date_Lkp,\n\t\tCurrency_ID_Lkp,\n\t\tCurrency_Code_Lkp,\n\t\tCurrency_Name_Lkp,\n\t\tCurrency_Numeric_Code_Lkp,\n\t\tUOM_ID_Lkp,\n\t\tUOM_Name_Lkp,\n\t\tUOM_Desc_Lkp,\n\t\tUOM_Type_Lkp,\n\t\tUOM_Long_Desc_Lkp,\n\t\tDelivery_Point_ID_Lkp,\n\t\tDeliver_Point_Code_Lkp,\n\t\tDelivery_Point_Lkp,\n\t\tDelivery_Point_Desc_Lkp,\n\t\tDelivery_Point_Long_Desc_Lkp,\n\t\tIndicator_Id_Lkp,\n\t\tIndicator_Code_Lkp,\n\t\tIndicator_Desc_Lkp,\n\t\tRegion_ID_Lkp_OP = Region_ID_Lkp,\n\t\tCountry_Code_Lkp_OP = Country_Code_Lkp,\n\t\tCountry_Lkp_OP = Country_Lkp,\n\t\tRegion_Code_Lkp_OP = Region_Code_Lkp,\n\t\tRegion_Lkp_OP = Region_Lkp,\n\t\tPort_Loc_Lkp_OP = Port_Loc_Lkp,\n\t\tLong_Lkp_OP = Long_Lkp,\n\t\tLat_Lkp_OP = Lat_Lkp\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameOriginPortLkpColumnsAddOP\nRenameOriginPortLkpColumnsAddOP, SelectDimRegionLkp lookup({Destination Port Country} == Country_Code_Lkp\n\t&& {Destination Port Region} == Region_Code_Lkp\n\t&& {Destination Port} == Port_Loc_Lkp,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDestinationPort\nLookupDestinationPort select(mapColumn(\n\t\t{Source Metric},\n\t\t{Period Date},\n\t\tCountry,\n\t\tRegion,\n\t\tSpecies,\n\t\t{Product Global Grade},\n\t\tCurrency,\n\t\tUOM,\n\t\tMarket,\n\t\t{Delivery Point},\n\t\tIndicator,\n\t\tType,\n\t\tBasis,\n\t\t{Origin Port Country},\n\t\t{Origin Port Region},\n\t\t{Origin Port},\n\t\t{Destination Port Country},\n\t\t{Destination Port Region},\n\t\t{Destination Port},\n\t\t{Vessel Name},\n\t\tComment,\n\t\tSource_File,\n\t\tBatch_ID,\n\t\tProcess_Name,\n\t\tSpecies_ID_Lkp,\n\t\tSpecies_Code_Lkp,\n\t\tSpecies_Lkp,\n\t\tGenus_Lkp,\n\t\tSpecies_Group_Lkp,\n\t\tRegion_ID_Lkp_CR,\n\t\tCountry_Code_Lkp_CR,\n\t\tCountry_Lkpv,\n\t\tRegion_Code_Lkp_CR,\n\t\tRegion_Lkp_CR,\n\t\tPort_Loc_Lkp_CR,\n\t\tLong_Lkp_CR,\n\t\tLat_Lkp_CR,\n\t\tRegion_ID_Lkp_CO,\n\t\tCountry_Code_Lkp_CO,\n\t\tCountry_Lkp_CO,\n\t\tRegion_Code_Lkp_CO,\n\t\tRegion_Lkp_CO,\n\t\tPort_Loc_Lkp_CO,\n\t\tLong_Lkp_CO,\n\t\tLat_Lkp_CO,\n\t\tData_Source_Id_Lkp,\n\t\tMetric_Short_Name_Lkp,\n\t\tSource_Name_Lkp,\n\t\tSource_Type_Lkp,\n\t\tSource_Link_Lkp,\n\t\tSource_Data_Type_Lkp,\n\t\tData_Process_Type_Lkp,\n\t\tSource_Status_Lkp,\n\t\tFrequency_Lkp,\n\t\tConfidence_Level_Lkp,\n\t\tPerson_Responsible_Lkp,\n\t\tDateDimension_Date_Lkp,\n\t\tCurrency_ID_Lkp,\n\t\tCurrency_Code_Lkp,\n\t\tCurrency_Name_Lkp,\n\t\tCurrency_Numeric_Code_Lkp,\n\t\tUOM_ID_Lkp,\n\t\tUOM_Name_Lkp,\n\t\tUOM_Desc_Lkp,\n\t\tUOM_Type_Lkp,\n\t\tUOM_Long_Desc_Lkp,\n\t\tDelivery_Point_ID_Lkp,\n\t\tDeliver_Point_Code_Lkp,\n\t\tDelivery_Point_Lkp,\n\t\tDelivery_Point_Desc_Lkp,\n\t\tDelivery_Point_Long_Desc_Lkp,\n\t\tIndicator_Id_Lkp,\n\t\tIndicator_Code_Lkp,\n\t\tIndicator_Desc_Lkp,\n\t\tRegion_ID_Lkp_OP,\n\t\tCountry_Code_Lkp_OP,\n\t\tCountry_Lkp_OP,\n\t\tRegion_Code_Lkp_OP,\n\t\tRegion_Lkp_OP,\n\t\tPort_Loc_Lkp_OP,\n\t\tLong_Lkp_OP,\n\t\tLat_Lkp_OP,\n\t\tRegion_ID_Lkp_DP = Region_ID_Lkp,\n\t\tCountry_Code_Lkp_DP = Country_Code_Lkp,\n\t\tCountry_Lkp_DP = Country_Lkp,\n\t\tRegion_Code_Lkp_DP = Region_Code_Lkp,\n\t\tRegion_Lkp_DP = Region_Lkp,\n\t\tPort_Loc_Lkp_DP = Port_Loc_Lkp,\n\t\tLong_Lkp_DP = Long_Lkp,\n\t\tLat_Lkp_DP = Lat_Lkp\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameDestinationPortAddDP\nAlterRowInsertUpdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tmapColumn(\n\t\tProduct_Code = {Product Code},\n\t\tProduct_Type = {Product Type},\n\t\tProduct_Global_Grade = {Product Global Grade},\n\t\tProduct_Desc = {Product Desc},\n\t\tGL_Code = {GL Code},\n\t\tSpecies_Code = {Species Code},\n\t\tSource_File,\n\t\tBatch_ID,\n\t\tProcess_Name,\n\t\tInsert_DateTime,\n\t\tUpdate_DateTime\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TargetDim\nAddErrorDetail sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProduct_Code = {Product Code},\n\t\tProduct_Type = {Product Type},\n\t\tProduct_Global_Grade = {Product Global Grade},\n\t\tProduct_Desc = {Product Desc},\n\t\tGL_Code = {GL Code},\n\t\tSpecies_Code = {Species Code},\n\t\tSource_File,\n\t\tProcess_Name,\n\t\tError_Desc,\n\t\tInsert_Datetime\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ErrorTable"
		}
	}
}