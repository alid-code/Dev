{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQLsourceRegisterTable_ds",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"script": "\n\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT TOP 100 [ORIGINAL_BLOB_LANDING_CONTAINER],\\n\t[ORIGINAL_BLOB_NAME],\\n\t[ORIGINAL_BLOP_FULLPATH],\\n\t[TARGET_BLOB_LANDING_CONTAINER],\\n\t[TARGET_BLOB_NAME],\\n\t[DATALAKE_CONTAINER],\\n\t[DATALAKE_FILE_PATH],\\n\t[ORIGINAL_BLOB_ARCHIVE_CONTAINER],\\n\t[ORIGINAL_BLOB_ARCHIVE_FULLPATH]\\nFROM [log].[SOURCE_REGISTER_TABLE]\\nWHERE [ETL_IS_PROCESSED] = \\'N\\'\\nAND [ORIGINAL_BLOB_NAME] LIKE \\'FIN_MNL_MAST_FUND_%\\'\\nORDER BY [ORIGINAL_BLOB_NAME], [INSERT_TIMESTAMP]',\n\tformat: 'query') ~> source1\nsource1 sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['abc.txt'],\n\tpartitionBy('hash', 1)) ~> sink1"
		}
	}
}