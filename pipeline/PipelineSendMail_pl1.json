{
	"name": "PipelineSendMail_pl1",
	"properties": {
		"activities": [
			{
				"name": "CheckReportableUtcTag",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT COUNT(*) as UTC_TAG_COUNT FROM log.source_register_table\nWHERE etl_utc_tag = '@{pipeline().parameters.Etl_Utc_Tag}'\n;",
							"type": "Expression"
						}
					},
					"dataset": {
						"referenceName": "SQLsourceRegisterTable_ds",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "CheckReportableUtcTag",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('CheckReportableUtcTag').output.firstRow.UTC_TAG_COUNT,0)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "GetProcessedFiles",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT \n       stuff( (SELECT ', '+original_blob_name \n               FROM log.source_register_table\n\t\t\t   where etl_is_processed = 'Y'\n\t\t\t   and etl_utc_tag = '@{pipeline().parameters.Etl_Utc_Tag}'\n\t\t\t   order by original_blob_name\n               FOR XML PATH(''), TYPE).value('.', 'varchar(max)'),1,1,'') as Processed_Files\n;",
										"type": "Expression"
									}
								},
								"dataset": {
									"referenceName": "SQLsourceRegisterTable_ds",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "GetNotProcessedFiles",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "GetProcessedFiles",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT \n       stuff( (SELECT ', '+original_blob_name \n               FROM log.source_register_table\n\t\t\t   where etl_is_processed = 'N'\n\t\t\t   and original_blob_name like '@{pipeline().parameters.File_Pattern}'\n\t\t\t   order by original_blob_name\n               FOR XML PATH(''), TYPE).value('.', 'varchar(max)'),1,1,'') as Not_Processed_Files\n;",
										"type": "Expression"
									}
								},
								"dataset": {
									"referenceName": "SQLsourceRegisterTable_ds",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "GetErrorDuringProcessFiles",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "GetNotProcessedFiles",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT \n       stuff( (SELECT ', '+original_blob_name \n               FROM log.source_register_table\n\t\t\t   where etl_is_processed = 'N'\n\t\t\t   and etl_run_status like 'FAIL%'\n\t\t\t   and etl_utc_tag = '@{pipeline().parameters.Etl_Utc_Tag}'\n\t\t\t   order by original_blob_name\n               FOR XML PATH(''), TYPE).value('.', 'varchar(max)'),1,1,'') as ErrorDuringProcess_Files\n;",
										"type": "Expression"
									}
								},
								"dataset": {
									"referenceName": "SQLsourceRegisterTable_ds",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "SuccessOrFailMail",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "GetErrorDuringProcessFiles",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://prod-24.australiaeast.logic.azure.com:443/workflows/e28a90add06c495bbc9362b5109fb4c0/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=j2wEDAKOpnQ83iKkUa84aeGE6Nfb5604lp-z1-W4ek0",
								"method": "POST",
								"headers": {
									"Content-Type": "application/json"
								},
								"body": {
									"dataFactoryName": "@pipeline().parameters.Parent_DataFactory",
									"pipelineName": "@pipeline().parameters.Parent_Pipeline",
									"messageHeader": "@pipeline().parameters.Success_Fail_Header",
									"messageProcessed": "@activity('GetProcessedFiles').output.firstRow",
									"messageNotProcessed": "@activity('GetNotProcessedFiles').output.firstRow",
									"messageErrorDuringProcess": "@activity('GetErrorDuringProcessFiles').output.firstRow"
								},
								"linkedServices": [],
								"datasets": []
							}
						}
					]
				}
			}
		],
		"parameters": {
			"Parent_DataFactory": {
				"type": "string",
				"defaultValue": "ADF2"
			},
			"Parent_Pipeline": {
				"type": "string",
				"defaultValue": "myPipeline"
			},
			"Success_Fail_Header": {
				"type": "string",
				"defaultValue": "***SUCCESS***"
			},
			"Etl_Utc_Tag": {
				"type": "string",
				"defaultValue": "2019-10-24T06:59:16.7016905Z"
			},
			"File_Pattern": {
				"type": "string",
				"defaultValue": "MYO_COM_%"
			}
		},
		"annotations": []
	}
}